<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FastReport</name>
    </assembly>
    <members>
        <member name="T:FastReport.BandBase">
            <summary>
            Base class for all bands.
            </summary>
        </member>
        <member name="M:FastReport.BandBase.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="E:FastReport.BandBase.BeforeLayout">
            <summary>
            This event occurs before the band layouts its child objects.
            </summary>
        </member>
        <member name="E:FastReport.BandBase.AfterLayout">
            <summary>
            This event occurs after the child objects layout was finished.
            </summary>
        </member>
        <member name="P:FastReport.BandBase.StartNewPage">
            <summary>
            Gets or sets a value indicating that the band should be printed from a new page.
            </summary>
            <remarks>
            New page is not generated when printing very first group or data row. This is made to avoid empty
            first page.
            </remarks>
        </member>
        <member name="P:FastReport.BandBase.RepeatBandNTimes">
            <summary>
            Gets or sets a value that determines the number of repetitions of the same band.
            </summary>
        </member>
        <member name="P:FastReport.BandBase.FirstRowStartsNewPage">
            <summary>
            Gets or sets a value indicating that the first row can start a new report page.
            </summary>
            <remarks>
            Use this property if <see cref="P:FastReport.BandBase.StartNewPage"/> is set to <b>true</b>. Normally the new page
            is not started when printing the first data row, to avoid empty first page. 
            </remarks>
        </member>
        <member name="P:FastReport.BandBase.PrintOnBottom">
            <summary>
            Gets or sets a value indicating that the band should be printed on the page bottom.
            </summary>
        </member>
        <member name="P:FastReport.BandBase.KeepChild">
            <summary>
            Gets or sets a value indicating that the band should be printed together with its child band.
            </summary>
        </member>
        <member name="P:FastReport.BandBase.OutlineExpression">
            <summary>
            Gets or sets an outline expression.
            </summary>
            <remarks>
            <para>
            Outline is a tree control displayed in the preview window. It represents the prepared report structure. 
            Each outline node can be clicked to navigate to the item in the prepared report.
            </para>
            <para>
            To create the outline, set this property to any valid expression that represents the outline node text. 
            This expression will be calculated when band is about to print, and its value will be added to the
            outline. Thus, nodes' hierarchy in the outline is similar to the bands' hierarchy 
            in a report. That means there will be the main and subordinate outline nodes, corresponding 
            to the main and subordinate bands in a report (a report with two levels of data or with groups can 
            exemplify the point).
            </para>
            </remarks>
        </member>
        <member name="P:FastReport.BandBase.Child">
            <summary>
            Gets or sets a child band that will be printed right after this band.
            </summary>
            <remarks>
            Typical use of child band is to print several objects that can grow or shrink. It also can be done
            using the shift feature (via <see cref="T:FastReport.ShiftMode"/> property), but in some cases it's not possible.
            </remarks>
        </member>
        <member name="P:FastReport.BandBase.Objects">
            <summary>
            Gets a collection of report objects belongs to this band.
            </summary>
        </member>
        <member name="P:FastReport.BandBase.Repeated">
            <summary>
            Gets a value indicating that band is reprinted on a new page.
            </summary>
            <remarks>
            This property is applicable to the <b>DataHeaderBand</b> and <b>GroupHeaderBand</b> only. 
            It returns <b>true</b> if its <b>RepeatOnAllPages</b> property is <b>true</b> and band is 
            reprinted on a new page.
            </remarks>
        </member>
        <member name="P:FastReport.BandBase.BeforeLayoutEvent">
            <summary>
            Gets or sets a script event name that will be fired before the band layouts its child objects.
            </summary>
        </member>
        <member name="P:FastReport.BandBase.AfterLayoutEvent">
            <summary>
            Gets or sets a script event name that will be fired after the child objects layout was finished.
            </summary>
        </member>
        <member name="P:FastReport.BandBase.AbsLeft">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.BandBase.AbsTop">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.BandBase.Guides">
            <summary>
            Gets or sets collection of guide lines for this band.
            </summary>
        </member>
        <member name="P:FastReport.BandBase.RowNo">
            <summary>
            Gets a row number (the same value returned by the "Row#" system variable).
            </summary>
            <remarks>
            This property can be used when running a report. It may be useful to print hierarchical 
            row numbers in a master-detail report, like this:
            <para/>1.1
            <para/>1.2
            <para/>2.1
            <para/>2.2
            <para/>To do this, put the Text object on a detail data band with the following text in it:
            <para/>[Data1.RowNo].[Data2.RowNo]
            </remarks>
        </member>
        <member name="P:FastReport.BandBase.AbsRowNo">
            <summary>
            Gets an absolute row number (the same value returned by the "AbsRow#" system variable).
            </summary>
        </member>
        <member name="P:FastReport.BandBase.IsFirstRow">
            <summary>
            Gets a value indicating that this is the first data row.
            </summary>
        </member>
        <member name="P:FastReport.BandBase.IsLastRow">
            <summary>
            Gets a value indicating that this is the last data row.
            </summary>
        </member>
        <member name="M:FastReport.BandBase.GetChildObjects(FastReport.ObjectCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.CanContain(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.AddChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.RemoveChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.GetChildOrder(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.SetChildOrder(FastReport.Base,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.UpdateLayout(System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.SaveState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.RestoreState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.CalcHeight">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.AddLastToFooter(FastReport.BreakableComponent)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.Break(FastReport.BreakableComponent)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.GetData">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.InitializeComponent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.OnBeforeLayout(System.EventArgs)">
            <summary>
            This method fires the <b>BeforeLayout</b> event and the script code connected to the <b>BeforeLayoutEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.BandBase.OnAfterLayout(System.EventArgs)">
            <summary>
            This method fires the <b>AfterLayout</b> event and the script code connected to the <b>AfterLayoutEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.BandBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.BandBase"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Base">
            <summary>
            Represents the root class of the FastReport object's hierarhy.
            </summary>
        </member>
        <member name="M:FastReport.Base.ExtractDefaultMacrosInternal(System.Collections.Generic.Dictionary{System.String,System.Object},System.String)">
            <summary>
            Does nothing
            </summary>
            <param name="macroValues"></param>
            <param name="text"></param>
        </member>
        <member name="P:FastReport.Base.Name">
            <summary>
            Gets or sets the name of the object.
            </summary>
            <remarks>
              <para>Name of the report object must contain alpha, digit, underscore symbols only.
                Data objects such as <b>Variable</b>, <b>TableDataSource</b>
                etc. can have any characters in they names. Each component must have unique
                name.</para>
            </remarks>
            <example>The following code demonstrates how to find an object by its name:
            <code>
            TextObject text1 = report1.FindObject("Text1") as TextObject;
            </code>
            </example>
            <exception cref="T:FastReport.Utils.DuplicateNameException" caption="">Another object with such name exists.</exception>
            <exception cref="T:FastReport.Utils.AncestorException" caption="">Rename an object that was introduced in the ancestor report.</exception>
        </member>
        <member name="P:FastReport.Base.Restrictions">
            <summary>
            Gets or sets the flags that restrict some actions in the designer.
            </summary>
            <remarks>
            Use this property to restrict some user actions like move, resize, edit, delete. For example, if
            <b>Restriction.DontMove</b> flag is set, user cannot move the object in the designer.
            </remarks>
        </member>
        <member name="P:FastReport.Base.Flags">
            <summary>
            Gets the flags that allow some functionality in the designer.
            </summary>
            <remarks>
            Use this property only if you developing a new FastReport object.
            </remarks>
        </member>
        <member name="P:FastReport.Base.Parent">
            <summary>
            Gets or sets the parent of the object.
            </summary>
            <remarks>
              <para>Each report object must have a parent in order to appear in the report. Parent must be able to
            contain objects of such type.</para>
              <para>Another way (preferred) to set a parent is to use specific properties of the parent object. 
            For example, the <see cref="P:FastReport.Base.Report"/> object has the <see cref="P:FastReport.Report.Pages"/> collection. 
            To add a new page to the report, use the following code: <c>report1.Pages.Add(new ReportPage());</c>
              </para>
            </remarks>
            <example><code>
            Report report1;
            ReportPage page = new ReportPage();
            page.Parent = report1;
            </code></example>
            <exception cref="T:FastReport.Utils.ParentException" caption="">Parent object cannot contain this object.</exception>
        </member>
        <member name="P:FastReport.Base.BaseName">
            <summary>
            The base part of the object's name.
            </summary>
            <remarks>
            This property is used to automatically create unique object's name. See <see cref="M:FastReport.Base.CreateUniqueName"/>
            </remarks>
        </member>
        <member name="P:FastReport.Base.ClassName">
            <summary>
            Gets the short type name.
            </summary>
            <remarks>
            Returns the short type name, such as "TextObject".
            </remarks>
        </member>
        <member name="P:FastReport.Base.Report">
            <summary>
            Gets reference to the parent <see cref="P:FastReport.Base.Report"/> object.
            </summary>
        </member>
        <member name="P:FastReport.Base.Page">
            <summary>
            Gets reference to the parent <see cref="T:FastReport.PageBase"/> object.
            </summary>
        </member>
        <member name="P:FastReport.Base.ChildObjects">
            <summary>
            Gets the collection of this object's child objects.
            </summary>
            <remarks>
            This property returns child objects that belongs to this object. For example, <b>Report.ChildObjects</b>
            will return only pages that contains in the report, but not page childs such as bands. To return all
            child objects, use <see cref="P:FastReport.Base.AllObjects"/> property.
            </remarks>
        </member>
        <member name="P:FastReport.Base.AllObjects">
            <summary>
            Gets the collection of all child objects.
            </summary>
            <remarks>
            This property returns child objects that belongs to this object and to child objects of this object. 
            For example, <b>Report.AllObjects</b> will return all objects that contains in the report - such as 
            pages, bands, text objects.
            </remarks>
        </member>
        <member name="P:FastReport.Base.ZOrder">
            <summary>
            Gets or sets the Z-order of the object.
            </summary>
            <remarks>
            The Z-order is also called "creation order". It is the index of an object in the parent's objects list.
            For example, put two text objects on a band. First object will have <b>ZOrder</b> = 0, second = 1. Setting the
            second object's <b>ZOrder</b> to 0 will move it to the back of the first text object.
            </remarks>
        </member>
        <member name="P:FastReport.Base.IsAncestor">
            <summary>
            Gets a value indicating whether the object was introduced in the ancestor report.
            </summary>
        </member>
        <member name="P:FastReport.Base.IsDesigning">
            <summary>
            Gets a value indicating whether the object is in the design state.
            </summary>
        </member>
        <member name="P:FastReport.Base.IsPrinting">
            <summary>
            Gets a value indicating whether the object is currently printing.
            </summary>
        </member>
        <member name="P:FastReport.Base.IsRunning">
            <summary>
            Gets a value indicating whether the object is currently processed by the report engine.
            </summary>
        </member>
        <member name="P:FastReport.Base.OriginalComponent">
            <summary>
            Gets an original component for this object.
            </summary>
            <remarks>
            This property is used in the preview mode. Each object in the prepared report is bound to its
            original (from the report template). This technique is used to minimize the prepared report's size.
            </remarks>
        </member>
        <member name="M:FastReport.Base.SetProp(FastReport.Base,FastReport.Base)">
            <summary>
            Helper method, helps to set a reference-type value to the property.
            </summary>
            <param name="prop">Old property value.</param>
            <param name="value">New property value.</param>
            <remarks>
            This method is used widely to set a new value to the property that references another FastReport object.
            Method deals with the <see cref="P:FastReport.Base.Parent"/> property.
            </remarks>
            <example>This is example of the <c>DataBand.Header</c> property:<code>
            public DataHeaderBand Header
            {
              get { return FHeader; }
              set
              {
                SetProp(FHeader, value);
                FHeader = value;
              }
            }
            </code></example>
        </member>
        <member name="M:FastReport.Base.FloatDiff(System.Single,System.Single)">
            <summary>
            Checks if two float values are different.
            </summary>
            <param name="f1">First value.</param>
            <param name="f2">Second value.</param>
            <returns><c>true</c> if values are not equal.</returns>
            <remarks>
            This method is needed to compare two float values using some precision (0.001). It is useful
            to compare objects' locations and sizes for equality.
            </remarks>
        </member>
        <member name="M:FastReport.Base.DeserializeSubItems(FastReport.Utils.FRReader)">
            <summary>
            Deserializes nested object properties.
            </summary>
            <param name="reader">Reader object.</param>
            <remarks>
            <para>Typically the object serializes all properties to the single xml item:</para>
            <code>
            &lt;TextObject Name="Text2" Left="18.9" Top="37.8" Width="283.5" Height="28.35"/&gt;
            </code>
            <para>Some objects like <see cref="T:FastReport.DataBand"/> have child objects that serialized in subitems:</para>
            <code>
            &lt;DataBand Name="Data1" Top="163" Width="718.2" Height="18.9"&gt;
              &lt;TextObject Name="Text3" Left="18.9" Top="37.8" Width="283.5" Height="28.35"/&gt;
            &lt;/DataBand&gt;
            </code>
            <para>To read such subitems, the <c>DeserializeSubItems</c> method is used. Base 
            implementation reads the child objects. You may override it to read some specific subitems.</para>
            </remarks>
            <example>The following code is used to read report's styles:
            <code>
            protected override void DeserializeSubItems(FRReader reader)
            {
              if (String.Compare(reader.ItemName, "Styles", true) == 0)
                reader.Read(Styles);
              else
                base.DeserializeSubItems(reader);
            }
            </code>
            </example>
        </member>
        <member name="M:FastReport.Base.ExtractDefaultMacros(System.String)">
            <summary>
            Replaces the macros in the given string and returns the new string.
            </summary>
            <param name="text">The text containing macros.</param>
            <returns>The text with macros replaced with its values.</returns>
        </member>
        <member name="M:FastReport.Base.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Base.SetFlags(FastReport.Flags,System.Boolean)">
            <summary>
            Set object's flags.
            </summary>
            <param name="flags">Flag to set.</param>
            <param name="value"><b>true</b> to set the flag, <b>false</b> to reset.</param>
        </member>
        <member name="M:FastReport.Base.SetReport(FastReport.Report)">
            <summary>
            Sets the reference to a Report. 
            </summary>
            <param name="value">Report to set.</param>
        </member>
        <member name="M:FastReport.Base.SetName(System.String)">
            <summary>
            Sets the object's name.
            </summary>
            <remarks>
                This method is for internal use only. It just sets a new name without any checks
                (unlike the <see cref="P:FastReport.Base.Name"/> property setter).
            </remarks>
            <seealso cref="P:FastReport.Base.Name">Name Property</seealso>
            <param name="value">New name.</param>
        </member>
        <member name="M:FastReport.Base.SetParent(FastReport.Base)">
            <summary>
            Sets the object's parent.
            </summary>
            <remarks>
            This method is for internal use only. You can use it if you are developing a new
            component for FastReport. Override it to perform some actions when the parent of an
            object is changing. This method checks that parent can contain a child.
            </remarks>
            <exception cref="T:FastReport.Utils.ParentException" caption="">Parent object cannot contain this object.</exception>
            <param name="value">New parent.</param>
        </member>
        <member name="M:FastReport.Base.SetParentCore(FastReport.Base)">
            <summary>
            Sets the object's parent.
            </summary>
            <param name="value">New parent.</param>
            <remarks>
            This method is for internal use only. You can use it if you are developing a new component for FastReport.
            This method does not perform any checks, it just sets the new parent.
            </remarks>
        </member>
        <member name="M:FastReport.Base.FindObject(System.String)">
            <summary>
            Searches for an object with given name.
            </summary>
            <param name="name">Name of the object to find.</param>
            <returns>Returns a null reference if object is not found</returns>
            <example>The following code demonstrates how to find an object by its name:
            <code>
            TextObject text1 = report1.FindObject("Text1") as TextObject;
            if (text1 != null) 
            { 
              // object found 
            }
            </code>
            </example>
        </member>
        <member name="M:FastReport.Base.CreateUniqueName">
            <summary>
            Creates the unique object's name.
            </summary>
            <remarks>
            <para><b>Note:</b> you have to set object's parent before calling this method. Method uses the <see cref="P:FastReport.Base.BaseName"/> 
            property to create a name.</para>
            <para><b>Note:</b> this method may be very slow on a report that contains lots of objects. Consider
            using own naming logic in this case.</para>
            </remarks>
            <example>
            <code>
            TextObject textObj = new TextObject();
            dataBand1.Objects.Add(textObj);
            textObj.CreateUniqueName();
            </code>
            </example>
        </member>
        <member name="M:FastReport.Base.Clear">
            <summary>
            Clears the object's state.
            </summary>
            <remarks>
            This method also disposes all object's children.
            </remarks>
        </member>
        <member name="M:FastReport.Base.Serialize(FastReport.Utils.FRWriter)">
            <summary>
            Serializes the object.
            </summary>
            <remarks>
              <para>Do not call this method directly. You should override it if you are
                developing a new component for FastReport.</para>
              <para>This method is called when the object needs to save the state. It may happen
                when:</para>
              <list type="bullet">
                <item>
                  <description>saving the report to the file or stream;</description>
                </item>
                <item>
                  <description>saving the report to the designer's undo buffer;</description>
                </item>
                <item>
                  <description>
                            assigning the object to another object using the
                            <see cref="M:FastReport.Base.Assign(FastReport.Base)"/> or <see cref="M:FastReport.Base.AssignAll(FastReport.Base)">AssignAll</see> methods;
                        </description>
                </item>
                <item>
                  <description>saving the object to the designer's clipboard;</description>
                </item>
                <item>
                  <description>saving the object to the preview (when run a
                        report).</description>
                </item>
              </list>
            </remarks>
            <param name="writer">Writer object.</param>
        </member>
        <member name="M:FastReport.Base.Deserialize(FastReport.Utils.FRReader)">
            <summary>
            Deserializes the object.
            </summary>
            <remarks>
              <para>Do not call this method directly. You should override it if you are
                developing a new component for FastReport.</para>
              <para>This method is called when the object needs to restore the state. It may
                happen when:</para>
              <list type="bullet">
                <item>
                  <description>loading the report from a file or stream;</description>
                </item>
                <item>
                  <description>loading the report from the designer's undo
                        buffer;</description>
                </item>
                <item>
                  <description>assigning another object to this object using the
                    <see cref="M:FastReport.Base.Assign(FastReport.Base)"/> or <see cref="M:FastReport.Base.AssignAll(FastReport.Base)">AssignAll</see> methods;</description>
                </item>
                <item>
                  <description>loading the object from the designer's
                        clipboard;</description>
                </item>
                <item>loading the object from the preview pages.</item>
              </list>
            </remarks>
            <param name="reader">Reader object.</param>
        </member>
        <member name="M:FastReport.Base.BaseAssign(FastReport.Base)">
            <summary>
            Assigns values from another source.
            </summary>
            <remarks>
            <b>Note:</b> this method is relatively slow because it serializes
            an object to the xml and then deserializes it.
            </remarks>
            <param name="source">Source to assign from.</param>
        </member>
        <member name="M:FastReport.Base.Assign(FastReport.Base)">
            <summary>Copies the contents of another, similar object.</summary>
            <remarks>
              <para>Call Assign to copy the properties from another object of the same type. 
            The standard form of a call to Assign is</para>
              <para><c>destination.Assign(source);</c></para>
              <para>
                    which tells the <b>destination</b> object to copy the contents of the
                    <b>source</b> object to itself. In this method, all child objects are
                    ignored. If you want to copy child objects, use the
                    <see cref="M:FastReport.Base.AssignAll(FastReport.Base)">AssignAll</see> method.
                </para>
            </remarks>
            <example><code>
            Report report1;
            Report report2 = new Report();
            // copy all report settings, do not copy report objects
            report2.Assign(report1);
            </code></example>
            <seealso cref="M:FastReport.Base.AssignAll(FastReport.Base)">AssignAll Method</seealso>
            <param name="source">Source object to copy the contents from.</param>
        </member>
        <member name="M:FastReport.Base.AssignAll(FastReport.Base)">
            <summary>Copies the contents (including children) of another, similar object.</summary>
            <remarks>
              <para>
                    This method is similar to <see cref="M:FastReport.Base.Assign(FastReport.Base)"/> method. It copies child
                    objects as well.
                </para>
            </remarks>
            <example><code>
            Report report1;
            Report report2 = new Report();
            // copy all report settings and objects
            report2.AssignAll(report1);
            </code></example>
            <seealso cref="M:FastReport.Base.Assign(FastReport.Base)"/>
            <param name="source">Source object to copy the state from.</param>
        </member>
        <member name="M:FastReport.Base.HasParent(FastReport.Base)">
            <summary>
            Gets a value indicating whether the object has the specified parent in its parent hierarhy.
            </summary>
            <param name="obj">Parent object to check.</param>
            <returns>Returns <b>true</b> if the object has given parent in its parent hierarhy.</returns>
        </member>
        <member name="M:FastReport.Base.HasFlag(FastReport.Flags)">
            <summary>
            Gets a value indicating whether the object has a specified flag in its <see cref="P:FastReport.Base.Flags"/> property.
            </summary>
            <param name="flag">Flag to check.</param>
            <returns><b>true</b> if <b>Flags</b> property contains specified flag.</returns>
        </member>
        <member name="M:FastReport.Base.HasRestriction(FastReport.Restrictions)">
            <summary>
            Gets a value indicating whether the object has a specified restriction 
            in its <see cref="P:FastReport.Base.Restrictions"/> property.
            </summary>
            <param name="restriction">Restriction to check.</param>
            <returns><b>true</b> if <b>Restrictions</b> property contains specified restriction.</returns>
        </member>
        <member name="M:FastReport.Base.InvokeEvent(System.String,System.Object)">
            <summary>
            Invokes script event.
            </summary>
            <param name="name">Name of the event to invoke.</param>
            <param name="param">Event parameters.</param>
            <remarks>
            <para>Do not call this method directly. You should use it if you are developing a new component 
            for FastReport.</para>
            <para>Use this method to call an event handler that is located in the report's script.</para>
            </remarks>
            <example>Example of the OnBeforePrint method:<code>
            public void OnBeforePrint(EventArgs e)
            {
              if (BeforePrint != null)
                BeforePrint(this, e);
              InvokeEvent(BeforePrintEvent, e);
            }
            </code></example>
        </member>
        <member name="M:FastReport.Base.OnAfterLoad">
            <summary>
            Called after all report objects were loaded.
            </summary>
            <remarks>
            Do not call this method directly. You may override it if you are developing a new component 
            for FastReport.
            </remarks>
        </member>
        <member name="M:FastReport.Base.GetExpressions">
            <summary>
            Gets all expressions contained in the object.
            </summary>
            <returns>Array of expressions or <b>null</b> if object contains no expressions.</returns>
            <remarks>
              <para>Do not call this method directly. You may override it if you are developing a
                new component for FastReport.</para>
              <para>
                    This method is called by FastReport each time before run a report. FastReport
                    do this to collect all expressions and compile them. For example,
                    <b>GetExpressions</b> method of the <see cref="T:FastReport.TextObject"/> class
                    parses the text and returns all expressions found in the text.
                </para>
            </remarks>
        </member>
        <member name="M:FastReport.Base.GetCustomScript">
            <summary>
            Returns a custom code that will be added to the report script before report is run.
            </summary>
            <returns>A custom script text, if any. Otherwise returns <b>null</b>.</returns>
            <remarks>
            <para>This method may return any valid code that may be inserted into the report script. Currently it is
            used in the TableObject to define the following script methods: Sum, Min, Max, Avg, Count.
            </para>
            <para>
            Note: you must take into account the current script language - C# or VB.Net. You may check it via
            <b>Report.ScriptLanguage</b> property.
            </para>
            </remarks>
        </member>
        <member name="M:FastReport.Base.ExtractMacros">
            <summary>
            Used to extract macros such as "TotalPages#" in the preview mode.
            </summary>
            <remarks>
            This method is used mainly by the <b>TextObject</b> to extract macros and replace it with 
            actual values passed in the <b>pageIndex</b> and <b>totalPages</b> parameters. This method
            is called automatically when the object is being previewed.
            </remarks>
        </member>
        <member name="M:FastReport.Base.IsHaveToConvert(System.Object)">
            <summary>
            Used to get information of the need to convertation if the function returns true, then the GetConvertedObjects function is called
            </summary>
            <param name="sender">The export or the object, that call this method</param>
            <returns>By default returns false</returns>
            <remarks>
            The functions IsHaveToConvert and GetConvertedObjects allow you to convert objects from one to another,
            for example the export will convert object before adding it to the file and convert recursive,
            i.e. If the new object has the ability to convert,
            it will be converted again but limit is 10 times.
            At the time of export it is called, only on objects inside the band,
            the child objects of converted object will be returned, and the child objects of old object will be ignored.
            </remarks>
        </member>
        <member name="M:FastReport.Base.GetConvertedObjects">
            <summary>
            Used to get an enumeration of the objects to which this object will be converted, before calling this function, the IsHaveToConvert function will be called
            </summary>
            <returns>By default returns this object</returns>
            <remarks>
            The functions IsHaveToConvert and GetConvertedObjects allow you to convert objects from one to another,
            for example the export will convert object before adding it to the file and convert recursive,
            i.e. If the new object has the ability to convert,
            it will be converted again but limit is 10 times.
            At the time of export it is called, only on objects inside the band,
            the child objects of converted object will be returned, and the child objects of old object will be ignored.
            </remarks>
        </member>
        <member name="M:FastReport.Base.ForEachAllConvectedObjects(System.Object)">
            <summary>
            Gets the collection of all child objects, converts objects if necessary
            </summary>
            <param name="sender">the object or export, that call this convertation</param>
        </member>
        <member name="M:FastReport.Base.#ctor">
            <summary>
            Initializes a new instance of the <b>Base</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.CellularTextObject">
            <summary>
            Represents a text object which draws each symbol of text in its own cell.
            </summary>
            <remarks>
            <para/>The text may be aligned to left or right side, or centered. Use the <see cref="T:FastReport.HorzAlign"/>
            property to do this. The "justify" align is not supported now, as well as vertical alignment.
            <para/>The cell size is defined in the <see cref="P:FastReport.CellularTextObject.CellWidth"/> and <see cref="P:FastReport.CellularTextObject.CellHeight"/> properties.
            These properties are 0 by default, in this case the size of cell is calculated automatically based
            on the object's <b>Font</b>.
            <para/>To define a spacing (gap) between cells, use the <see cref="P:FastReport.CellularTextObject.HorzSpacing"/> and
            <see cref="P:FastReport.CellularTextObject.VertSpacing"/> properties.
            </remarks>
        </member>
        <member name="P:FastReport.CellularTextObject.CellWidth">
            <summary>
            Gets or sets the width of cell, in pixels.
            </summary>
            <remarks>
            If zero width and/or height specified, the object will calculate the cell size
            automatically based on its font.
            </remarks>
        </member>
        <member name="P:FastReport.CellularTextObject.CellHeight">
            <summary>
            Gets or sets the height of cell, in pixels.
            </summary>
            <remarks>
            If zero width and/or height specified, the object will calculate the cell size
            automatically based on its font.
            </remarks>
        </member>
        <member name="P:FastReport.CellularTextObject.HorzSpacing">
            <summary>
            Gets or sets the horizontal spacing between cells, in pixels.
            </summary>
        </member>
        <member name="P:FastReport.CellularTextObject.VertSpacing">
            <summary>
            Gets or sets the vertical spacing between cells, in pixels.
            </summary>
        </member>
        <member name="M:FastReport.CellularTextObject.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CellularTextObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CellularTextObject.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CellularTextObject.CalcHeight">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CellularTextObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.CellularTextObject"/> class with the default settings.
            </summary>
        </member>
        <member name="M:FastReport.Code.AssemblyDescriptor.InternalCompile(FastReport.Code.CodeDom.Compiler.CompilerParameters,FastReport.Code.CodeDom.Compiler.CompilerResults@)">
            <summary>
            Returns true, if compilation is successful
            </summary>
        </member>
        <member name="M:FastReport.Code.AssemblyDescriptor.HandleCompileErrors(FastReport.Code.CodeDom.Compiler.CompilerParameters,FastReport.Code.CodeDom.Compiler.CompilerResults,System.String@)">
            <summary>
            Handle compile errors
            </summary>
            <returns>Returns <b>true</b> if all errors were handled</returns>
        </member>
        <member name="M:FastReport.Code.AssemblyDescriptor.ReCompile(FastReport.Code.CodeDom.Compiler.CompilerParameters,FastReport.Code.CodeDom.Compiler.CompilerResults,System.Collections.IList)">
            <summary>
            Returns true if recompilation is successful
            </summary>
        </member>
        <member name="T:FastReport.Code.FindTextArgs">
            <summary>
            This class is used to pass find arguments to some methods of the <b>CodeUtils</b> class.
            </summary>
        </member>
        <member name="P:FastReport.Code.FindTextArgs.StartIndex">
            <summary>
            The start position of the search. After the search, this property points to
            the begin of an expression.
            </summary>
        </member>
        <member name="P:FastReport.Code.FindTextArgs.EndIndex">
            <summary>
            After the search, this property points to the end of an expression.
            </summary>
        </member>
        <member name="P:FastReport.Code.FindTextArgs.OpenBracket">
            <summary>
            The char sequence used to find the expression's begin.
            </summary>
        </member>
        <member name="P:FastReport.Code.FindTextArgs.CloseBracket">
            <summary>
            The char sequence used to find the expression's end.
            </summary>
        </member>
        <member name="P:FastReport.Code.FindTextArgs.Text">
            <summary>
            The text with embedded expressions.
            </summary>
        </member>
        <member name="P:FastReport.Code.FindTextArgs.FoundText">
            <summary>
            The last found expression.
            </summary>
        </member>
        <member name="T:FastReport.Code.CodeUtils">
            <summary>
            This static class contains methods that may be used to find expressions embedded 
            in the object's text.
            </summary>
        </member>
        <member name="M:FastReport.Code.CodeUtils.GetExpressions(System.String,System.String,System.String)">
            <summary>
            Returns expressions found in the text.
            </summary>
            <param name="text">Text that may contain expressions.</param>
            <param name="openBracket">The char sequence used to find the start of expression.</param>
            <param name="closeBracket">The char sequence used to find the end of expression.</param>
            <returns>Array of expressions if found; otherwise return an empty array.</returns>
        </member>
        <member name="M:FastReport.Code.CodeUtils.GetExpression(FastReport.Code.FindTextArgs,System.Boolean)">
            <summary>
            Gets first expression found in the text. 
            </summary>
            <param name="args">Object with find arguments.</param>
            <param name="skipStrings">Indicates whether to skip strings.</param>
            <returns>The expression if found; otherwise, returns null.</returns>
        </member>
        <member name="T:FastReport.ComponentBase">
            <summary>
            Class that implements some object's properties such as location, size and visibility.
            </summary>
        </member>
        <member name="M:FastReport.ComponentBase.Draw(FastReport.Utils.FRPaintEventArgs)">
            <summary>
            Draws the object.
            </summary>
            <param name="e">Paint event args.</param>
            <remarks>
            <para>This method is widely used in the FastReport. It is called each time when the object needs to draw 
            or print itself.</para>
            <para>In order to draw the object correctly, you should multiply the object's bounds by the <b>scale</b>
            parameter.</para>
            <para><b>cache</b> parameter is used to optimize the drawing speed. It holds all items such as
            pens, fonts, brushes, string formats that was used before. If the item with requested parameters
            exists in the cache, it will be returned (instead of create new item and then dispose it).</para>
            </remarks>
        </member>
        <member name="P:FastReport.ComponentBase.AbsBottom">
            <summary>
            Gets the absolute bottom coordinate of the object.
            </summary>
        </member>
        <member name="P:FastReport.ComponentBase.AbsBounds">
            <summary>
            Gets the absolute bounding rectangle of the object.
            </summary>
        </member>
        <member name="P:FastReport.ComponentBase.AbsLeft">
            <summary>
            Gets the absolute left coordinate of the object.
            </summary>
        </member>
        <member name="P:FastReport.ComponentBase.AbsRight">
            <summary>
            Gets the absolute right coordinate of the object.
            </summary>
        </member>
        <member name="P:FastReport.ComponentBase.AbsTop">
            <summary>
            Gets the absolute top coordinate of the object.
            </summary>
        </member>
        <member name="P:FastReport.ComponentBase.Anchor">
            <summary>
            Gets or sets the edges of the container to which a control is bound and determines how a control
            is resized with its parent.
            </summary>
            <remarks>
            <para>Use the Anchor property to define how a control is automatically resized as its parent control
            is resized. Anchoring a control to its parent control ensures that the anchored edges remain in the
            same position relative to the edges of the parent control when the parent control is resized.</para>
            <para>You can anchor a control to one or more edges of its container. For example, if you have a band
            with a <b>TextObject</b> whose <b>Anchor</b> property value is set to <b>Top, Bottom</b>, the <b>TextObject</b> is stretched to
            maintain the anchored distance to the top and bottom edges of the band as the height of the band
            is increased.</para>
            </remarks>
        </member>
        <member name="P:FastReport.ComponentBase.Bottom">
            <summary>
            Gets the bottom coordinate of the object in relation to its container.
            </summary>
            <remarks>
            To change the bottom coordinate, change the <see cref="P:FastReport.ComponentBase.Top"/> and/or <see cref="P:FastReport.ComponentBase.Height"/> properties.
            </remarks>
        </member>
        <member name="P:FastReport.ComponentBase.Bounds">
            <summary>
            Gets or sets the bounding rectangle of the object.
            </summary>
            <remarks>
            Assigning a value to this property is equal to assigning values to the <see cref="P:FastReport.ComponentBase.Left"/>,
            <see cref="P:FastReport.ComponentBase.Top"/>, <see cref="P:FastReport.ComponentBase.Width"/>, <see cref="P:FastReport.ComponentBase.Height"/> properties.
            </remarks>
        </member>
        <member name="P:FastReport.ComponentBase.ClientSize">
            <summary>
            Gets or sets the size of client area of the object.
            </summary>
            <remarks>
            This property is used in the <see cref="T:FastReport.Dialog.DialogPage"/> class.
            </remarks>
        </member>
        <member name="P:FastReport.ComponentBase.Dock">
            <summary>
            Gets or sets which control borders are docked to its parent control and determines how a control
            is resized with its parent.
            </summary>
            <remarks>
            <para>Use the <b>Dock</b> property to define how a control is automatically resized as its parent control is
            resized. For example, setting Dock to <c>DockStyle.Left</c> causes the control to align itself with the
            left edges of its parent control and to resize as the parent control is resized.</para>
            <para>A control can be docked to one edge of its parent container or can be docked to all edges and
            fill the parent container.</para>
            </remarks>
        </member>
        <member name="P:FastReport.ComponentBase.GroupIndex">
            <summary>
            Gets or sets a group index.
            </summary>
            <remarks>
            Group index is used to group objects in the designer (using "Group" button). When you select
            any object in a group, entire group becomes selected. To reset a group, set the <b>GroupIndex</b>
            to 0 (default value).
            </remarks>
        </member>
        <member name="P:FastReport.ComponentBase.Height">
            <summary>
            Gets or sets the height of the object.
            </summary>
            <remarks>
            This property value is measured in the screen pixels. Use <see cref="T:FastReport.Utils.Units"/> class to
            convert a value to desired units.
            </remarks>
            <example>The following example demonstrates how to convert between pixels and units:<code>
            TextObject text1;
            // set Height to 10mm
            text1.Height = Units.Millimeters * 10;
            // convert a value to millimeters
            MessageBox.Show("Height = " + (text1.Height / Units.Millimeters).ToString() + "mm");
            </code></example>
        </member>
        <member name="P:FastReport.ComponentBase.Left">
            <summary>
            Gets or sets the left coordinate of the object in relation to its container.
            </summary>
            <remarks>
              <para>
                    This property value is measured in the screen pixels. Use
                    <see cref="T:FastReport.Utils.Units"/> class to convert a value to desired units.
                </para>
              <para>
                    To obtain absolute coordinate, use <see cref="P:FastReport.ComponentBase.AbsLeft"/> property.
                </para>
            </remarks>
            <example>The following example demonstrates how to convert between pixels and units:<code>
            TextObject text1;
            // set Left to 10mm
            text1.Left = Units.Millimeters * 10;
            // convert a value to millimeters
            MessageBox.Show("Left = " + (text1.Left / Units.Millimeters).ToString() + "mm");
            </code></example>
        </member>
        <member name="P:FastReport.ComponentBase.Right">
            <summary>
            Gets the right coordinate of the object in relation to its container.
            </summary>
            <remarks>
            To change the right coordinate, change the <see cref="P:FastReport.ComponentBase.Left"/> and/or <see cref="P:FastReport.ComponentBase.Width"/> properties.
            </remarks>
        </member>
        <member name="P:FastReport.ComponentBase.Tag">
            <summary>
            Gets or sets the Tag string for this component.
            </summary>
        </member>
        <member name="P:FastReport.ComponentBase.Top">
            <summary>
            Gets or sets the top coordinate of the object in relation to its container.
            </summary>
            <remarks>
              <para>
                    This property value is measured in the screen pixels. Use
                    <see cref="T:FastReport.Utils.Units"/> class to convert a value to desired units.
                </para>
              <para>
                    To obtain absolute coordinate, use <see cref="P:FastReport.ComponentBase.AbsTop"/> property.
                </para>
            </remarks>
            <example>The following example demonstrates how to convert between pixels and units:<code>
            TextObject text1;
            // set Top to 10mm
            text1.Top = Units.Millimeters * 10;
            // convert a value to millimeters
            MessageBox.Show("Top = " + (text1.Top / Units.Millimeters).ToString() + "mm");
            </code></example>
        </member>
        <member name="P:FastReport.ComponentBase.Visible">
            <summary>
            Gets or sets a value indicating whether the object is displayed in the preview window.
            </summary>
            <remarks>
            Setting this property to <b>false</b> will hide the object in the preview window.
            </remarks>
            <example>The following report script will control the Text1 visibility depending on the value of the
            data column:<code>
            private void Data1_BeforePrint(object sender, EventArgs e)
            {
              Text1.Visible = [Orders.Shipped] == true;
            }
            </code></example>
        </member>
        <member name="P:FastReport.ComponentBase.VisibleExpression">
            <summary>
            Gets or sets a string containing expression that determines should be object displayed in the preview window.
            </summary>
        </member>
        <member name="P:FastReport.ComponentBase.Printable">
            <summary>
            Gets or sets a value that determines if the object can be printed on the printer.
            </summary>
            <remarks>
            Object with Printable = <b>false</b> is still visible in the preview window, but not on the printout.
            If you want to hide an object in the preview, set the <see cref="P:FastReport.ComponentBase.Visible"/> property to <b>false</b>.
            </remarks>
        </member>
        <member name="P:FastReport.ComponentBase.PrintableExpression">
            <summary>
            Gets or sets a string containing expression that determines should be object printed on the printer.
            </summary>
        </member>
        <member name="P:FastReport.ComponentBase.Width">
            <summary>
            Gets or sets the width of the object.
            </summary>
            <remarks>
            This property value is measured in the screen pixels. Use <see cref="T:FastReport.Utils.Units"/> class to
            convert a value to desired units.
            </remarks>
            <example>The following example demonstrates how to convert between pixels and units:<code>
            TextObject text1;
            // set Width to 10mm
            text1.Width = Units.Millimeters * 10;
            // convert a value to millimeters
            MessageBox.Show("Width = " + (text1.Width / Units.Millimeters).ToString() + "mm");
            </code></example>
        </member>
        <member name="M:FastReport.ComponentBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.ComponentBase"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.ComponentBase.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ComponentBase.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ComponentBase.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossView.CrossViewHelper.UpdateTemplateSizes">
            <summary>
            Updates HeaderWidth, HeaderHeight, BodyWidth, BodyHeight properties.
            </summary>
        </member>
        <member name="T:FastReport.CrossView.CrossViewObject">
            <summary>
            Represents the crossview object that is used to print cube slice or slicegrid.
            </summary>
        </member>
        <member name="E:FastReport.CrossView.CrossViewObject.ModifyResult">
            <summary>
            Allows to modify the prepared matrix elements such as cells, rows, columns.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewObject.ShowTitle">
            <summary>
            Gets or sets a value indicating whether to show a title row.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewObject.ShowXAxisFieldsCaption">
            <summary>
            Gets or sets a value indicating whether to show a X Axis fields Caption.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewObject.ShowYAxisFieldsCaption">
            <summary>
            Gets or sets a value indicating whether to show a Y Axis fields Caption.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewObject.Style">
            <summary>
            Gets or sets a matrix style.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewObject.ModifyResultEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.CrossView.CrossViewObject.ModifyResult"/> event.
            </summary>
            <remarks>
            See the <see cref="E:FastReport.CrossView.CrossViewObject.ModifyResult"/> event for more details.
            </remarks>
        </member>
        <member name="P:FastReport.CrossView.CrossViewObject.ColumnDescriptorsIndexes">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewObject.RowDescriptorsIndexes">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewObject.ColumnTerminalIndexes">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewObject.RowTerminalIndexes">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewObject.CubeSource">
            <summary>
            Gets or sets a cube source.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewObject.Data">
            <summary>
            Gets the object that holds data of Cube
            </summary>
            <remarks>
            See the <see cref="T:FastReport.CrossView.CrossViewData"/> class for more details.
            </remarks>
        </member>
        <member name="M:FastReport.CrossView.CrossViewObject.DeserializeSubItems(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossView.CrossViewObject.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossView.CrossViewObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossView.CrossViewObject.BuildTemplate">
            <summary>
            Creates or updates the matrix template.
            </summary>
            <remarks>
            Call this method after you modify the matrix descriptors using the <see cref="P:FastReport.CrossView.CrossViewObject.Data"/>
            object's properties. 
            </remarks>
        </member>
        <member name="M:FastReport.CrossView.CrossViewObject.InitializeComponent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossView.CrossViewObject.FinalizeComponent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossView.CrossViewObject.SaveState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossView.CrossViewObject.GetData">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossView.CrossViewObject.RestoreState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossView.CrossViewObject.OnModifyResult(System.EventArgs)">
            <summary>
            This method fires the <b>ModifyResult</b> event and the script code connected to the <b>ModifyResultEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.CrossView.CrossViewObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.CrossView.CrossViewObject"/> class.
            </summary>
        </member>
        <member name="T:FastReport.CrossView.CrossViewMeasureCell">
            <summary>
            
            </summary>
        </member>
        <member name="F:FastReport.CrossView.CrossViewMeasureCell.Text">
            <summary>
            
            </summary>
        </member>
        <member name="T:FastReport.CrossView.CrossViewAxisDrawCell">
            <summary>
            
            </summary>
        </member>
        <member name="F:FastReport.CrossView.CrossViewAxisDrawCell.Level">
            <summary>
            
            </summary>
        </member>
        <member name="F:FastReport.CrossView.CrossViewAxisDrawCell.SizeLevel">
            <summary>
            
            </summary>
        </member>
        <member name="F:FastReport.CrossView.CrossViewAxisDrawCell.Cell">
            <summary>
            
            </summary>
        </member>
        <member name="F:FastReport.CrossView.CrossViewAxisDrawCell.SizeCell">
            <summary>
            
            </summary>
        </member>
        <member name="F:FastReport.CrossView.CrossViewAxisDrawCell.MeasureIndex">
            <summary>
            
            </summary>
        </member>
        <member name="F:FastReport.CrossView.CrossViewAxisDrawCell.Text">
            <summary>
            
            </summary>
        </member>
        <member name="T:FastReport.CrossView.CrossViewAxisDrawCellHandler">
            <summary>
            
            </summary>
            <param name="crossViewAxisDrawCell"></param>
            <returns></returns>
        </member>
        <member name="T:FastReport.CrossView.IBaseCubeLink">
            <summary>
            Represents interface of the source for <see cref="N:FastReport.CrossView"/> object.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.IBaseCubeLink.XAxisFieldsCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.IBaseCubeLink.YAxisFieldsCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.IBaseCubeLink.MeasuresCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.IBaseCubeLink.MeasuresLevel">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.IBaseCubeLink.MeasuresInXAxis">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.IBaseCubeLink.MeasuresInYAxis">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.IBaseCubeLink.DataColumnCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.IBaseCubeLink.DataRowCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.IBaseCubeLink.SourceAssigned">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.CrossView.IBaseCubeLink.GetMeasureCell(System.Int32,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.CrossView.IBaseCubeLink.TraverseXAxis(FastReport.CrossView.CrossViewAxisDrawCellHandler)">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.CrossView.IBaseCubeLink.TraverseYAxis(FastReport.CrossView.CrossViewAxisDrawCellHandler)">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.CrossView.IBaseCubeLink.GetXAxisFieldName(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.CrossView.IBaseCubeLink.GetYAxisFieldName(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.CrossView.IBaseCubeLink.GetMeasureName(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="T:FastReport.CrossView.CrossViewCellDescriptor">
            <summary>
            The descriptor that is used to describe one CrossView data cell.
            </summary>
            <remarks>
            The <see cref="T:FastReport.CrossView.CrossViewCellDescriptor"/> class is used to define one data cell of the CrossView.
            To set visual appearance of the data cell, use the <see cref="P:FastReport.CrossView.CrossViewDescriptor.TemplateCell"/> 
            property.
            <para/>The collection of descriptors used to represent the CrossView data cells is stored
            in the <b>CrossViewObject.Data.Cells</b> property.
            </remarks>
        </member>
        <member name="P:FastReport.CrossView.CrossViewCellDescriptor.IsXGrandTotal">
            <summary>
            Gets a value indicating that this is the "GrandTotal" element on X axis.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewCellDescriptor.IsYGrandTotal">
            <summary>
            Gets a value indicating that this is the "GrandTotal" element on Y axis.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewCellDescriptor.IsXTotal">
            <summary>
            Gets a value indicating that this is the "Total" element on X axis.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewCellDescriptor.IsYTotal">
            <summary>
            Gets a value indicating that this is the "Total" element on Y axis.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewCellDescriptor.XFieldName">
            <summary>
            Gets the name of field in X axis.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewCellDescriptor.YFieldName">
            <summary>
            Gets the name of field in Y axis.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewCellDescriptor.MeasureName">
            <summary>
            Gets the name of measure in cube.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewCellDescriptor.X">
            <summary>
            Gets the x coordinate.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewCellDescriptor.Y">
            <summary>
            Gets the y coordinate.
            </summary>
        </member>
        <member name="M:FastReport.CrossView.CrossViewCellDescriptor.Assign(FastReport.CrossView.CrossViewDescriptor)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossView.CrossViewCellDescriptor.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossView.CrossViewCellDescriptor.#ctor(System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.CrossView.CrossViewCellDescriptor"/> class
            </summary>
            <param name="xFieldName">The Field Name in X axis.</param>
            <param name="yFieldName">The Field Name in Y axis.</param>
            <param name="measureName">The Measure Name.</param>
            <param name="isXTotal">Indicates the "XTotal" element.</param>
            <param name="isYTotal">Indicates the "YTotal" element.</param>
            <param name="isXGrandTotal">Indicates the "XGrandTotal" element.</param>
            <param name="isYGrandTotal">Indicates the "YGrandTotal" element.</param>
        </member>
        <member name="M:FastReport.CrossView.CrossViewCellDescriptor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.CrossView.CrossViewCellDescriptor"/> class
            </summary>
        </member>
        <member name="T:FastReport.CrossView.CrossViewCells">
            <summary>
            Represents a collection of CrossView data descriptors used in the <see cref="T:FastReport.CrossView.CrossViewObject"/>.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewCells.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">Index of an element.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:FastReport.CrossView.CrossViewCells.AddRange(FastReport.CrossView.CrossViewCellDescriptor[])">
            <summary>
            Adds the specified descriptors to the end of this collection.
            </summary>
            <param name="range">Array of descriptors to add.</param>
        </member>
        <member name="M:FastReport.CrossView.CrossViewCells.Add(FastReport.CrossView.CrossViewCellDescriptor)">
            <summary>
            Adds a descriptor to the end of this collection.
            </summary>
            <param name="value">Descriptor to add.</param>
            <returns>Index of the added descriptor.</returns>
        </member>
        <member name="M:FastReport.CrossView.CrossViewCells.Insert(System.Int32,FastReport.CrossView.CrossViewCellDescriptor)">
            <summary>
            Inserts a descriptor into this collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The descriptor to insert.</param>
        </member>
        <member name="M:FastReport.CrossView.CrossViewCells.Remove(FastReport.CrossView.CrossViewCellDescriptor)">
            <summary>
            Removes the specified descriptor from the collection.
            </summary>
            <param name="value">Descriptor to remove.</param>
        </member>
        <member name="M:FastReport.CrossView.CrossViewCells.IndexOf(FastReport.CrossView.CrossViewCellDescriptor)">
            <summary>
            Returns the zero-based index of the first occurrence of a descriptor.
            </summary>
            <param name="value">The descriptor to locate in the collection.</param>
            <returns>The zero-based index of the first occurrence of descriptor within 
            the entire collection, if found; otherwise, -1.</returns>
        </member>
        <member name="M:FastReport.CrossView.CrossViewCells.Contains(FastReport.CrossView.CrossViewCellDescriptor)">
            <summary>
            Determines whether a descriptor is in the collection.
            </summary>
            <param name="value">The descriptor to locate in the collection.</param>
            <returns><b>true</b> if descriptor is found in the collection; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:FastReport.CrossView.CrossViewCells.ToArray">
            <summary>
            Copies the elements of this collection to a new array. 
            </summary>
            <returns>An array containing copies of this collection elements. </returns>
        </member>
        <member name="M:FastReport.CrossView.CrossViewCells.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossView.CrossViewCells.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossView.CrossViewCells.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="T:FastReport.CrossView.CrossViewData">
            <summary>
            Contains a set of properties and methods to hold and manipulate the CrossView descriptors.
            </summary>
            <remarks>
            This class contains three collections of descriptors such as <see cref="P:FastReport.CrossView.CrossViewData.Columns"/>,
            <see cref="P:FastReport.CrossView.CrossViewData.Rows"/> and <see cref="P:FastReport.CrossView.CrossViewData.Cells"/>. Descriptors are filled from FastCube Slice.
            </remarks>
        </member>
        <member name="P:FastReport.CrossView.CrossViewData.XAxisFieldsCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewData.YAxisFieldsCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewData.MeasuresCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewData.MeasuresLevel">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewData.MeasuresInXAxis">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewData.MeasuresInYAxis">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewData.DataColumnCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewData.DataRowCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewData.SourceAssigned">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewData.ColumnDescriptorsIndexes">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewData.RowDescriptorsIndexes">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewData.ColumnTerminalIndexes">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewData.RowTerminalIndexes">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewData.Columns">
            <summary>
            Gets a collection of column descriptors.
            </summary>
            <remarks>
            Note: after you change something in this collection, call the 
            <see cref="M:FastReport.CrossView.CrossViewObject.BuildTemplate"/> method to refresh the CrossView.
            </remarks>
        </member>
        <member name="P:FastReport.CrossView.CrossViewData.Rows">
            <summary>
            Gets a collection of row descriptors.
            </summary>
            <remarks>
            Note: after you change something in this collection, call the 
            <see cref="M:FastReport.CrossView.CrossViewObject.BuildTemplate"/> method to refresh the CrossView.
            </remarks>
        </member>
        <member name="P:FastReport.CrossView.CrossViewData.Cells">
            <summary>
            Gets a collection of data cell descriptors.
            </summary>
            <remarks>
            Note: after you change something in this collection, call the 
            <see cref="M:FastReport.CrossView.CrossViewObject.BuildTemplate"/> method to refresh the CrossView.
            </remarks>
        </member>
        <member name="T:FastReport.CrossView.CrossViewDescriptor">
            <summary>
            The base class for matrix element descriptors such as <see cref="T:FastReport.CrossView.CrossViewHeaderDescriptor"/> and
            <see cref="T:FastReport.CrossView.CrossViewCellDescriptor"/>.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewDescriptor.Expression">
            <summary>
            Gets or sets an expression which value will be used to fill the matrix.
            </summary>
            <remarks>
            <b>Expression</b> may be any valid expression. Usually it's a data column:
            <c>[DataSource.Column]</c>.
            </remarks>
        </member>
        <member name="P:FastReport.CrossView.CrossViewDescriptor.TemplateColumn">
            <summary>
            Gets or sets the template column bound to this descriptor.
            </summary>
            <remarks>
            This property is for internal use; usually you don't need to use it.
            </remarks>
        </member>
        <member name="P:FastReport.CrossView.CrossViewDescriptor.TemplateRow">
            <summary>
            Gets or sets the template row bound to this descriptor.
            </summary>
            <remarks>
            This property is for internal use; usually you don't need to use it.
            </remarks>
        </member>
        <member name="P:FastReport.CrossView.CrossViewDescriptor.TemplateCell">
            <summary>
            Gets or sets the template cell bound to this descriptor.
            </summary>
            <remarks>
            Using this property, you may access the matrix cell which is bound to
            this descriptor. It may be useful to change the cell's appearance. 
            <note>
            Before using this property, you must initialize the matrix descriptors by
            calling the <see cref="M:FastReport.CrossView.CrossViewObject.BuildTemplate"/> method.
            </note>
            </remarks>
            <example>
            <code>
            CrossViewObject crossView;
            // change the fill color of the first matrix cell
            crossView.Data.Cells[0].TemplateCell.Fill = new SolidFill(Color.Red);
            </code>
            </example>
        </member>
        <member name="M:FastReport.CrossView.CrossViewDescriptor.Assign(FastReport.CrossView.CrossViewDescriptor)">
            <summary>
            Assigns values from another descriptor.
            </summary>
            <param name="source">Descriptor to assign values from.</param>
        </member>
        <member name="M:FastReport.CrossView.CrossViewDescriptor.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossView.CrossViewDescriptor.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.CrossView.CrossViewHeader">
            <summary>
            Represents a collection of CrossView header descriptors used in the <see cref="T:FastReport.CrossView.CrossViewObject"/>.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewHeader.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">Index of an element.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:FastReport.CrossView.CrossViewHeader.AddRange(FastReport.CrossView.CrossViewHeaderDescriptor[])">
            <summary>
            Adds the specified descriptors to the end of this collection.
            </summary>
            <param name="range">Array of descriptors to add.</param>
        </member>
        <member name="M:FastReport.CrossView.CrossViewHeader.Add(FastReport.CrossView.CrossViewHeaderDescriptor)">
            <summary>
            Adds a descriptor to the end of this collection.
            </summary>
            <param name="value">Descriptor to add.</param>
            <returns>Index of the added descriptor.</returns>
        </member>
        <member name="M:FastReport.CrossView.CrossViewHeader.Insert(System.Int32,FastReport.CrossView.CrossViewHeaderDescriptor)">
            <summary>
            Inserts a descriptor into this collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The descriptor to insert.</param>
        </member>
        <member name="M:FastReport.CrossView.CrossViewHeader.Remove(FastReport.CrossView.CrossViewHeaderDescriptor)">
            <summary>
            Removes the specified descriptor from the collection.
            </summary>
            <param name="value">Descriptor to remove.</param>
        </member>
        <member name="M:FastReport.CrossView.CrossViewHeader.IndexOf(FastReport.CrossView.CrossViewHeaderDescriptor)">
            <summary>
            Returns the zero-based index of the first occurrence of a descriptor.
            </summary>
            <param name="value">The descriptor to locate in the collection.</param>
            <returns>The zero-based index of the first occurrence of descriptor within 
            the entire collection, if found; otherwise, -1.</returns>
        </member>
        <member name="M:FastReport.CrossView.CrossViewHeader.Contains(FastReport.CrossView.CrossViewHeaderDescriptor)">
            <summary>
            Determines whether a descriptor is in the collection.
            </summary>
            <param name="value">The descriptor to locate in the collection.</param>
            <returns><b>true</b> if descriptor is found in the collection; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:FastReport.CrossView.CrossViewHeader.ToArray">
            <summary>
            Copies the elements of this collection to a new array. 
            </summary>
            <returns>An array containing copies of this collection elements. </returns>
        </member>
        <member name="M:FastReport.CrossView.CrossViewHeader.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossView.CrossViewHeader.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossView.CrossViewHeader.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:FastReport.CrossView.CrossViewHeaderDescriptor">
            <summary>
            The descriptor that is used to describe one element of the CrossView header.
            </summary>
            <remarks>
            The <see cref="T:FastReport.CrossView.CrossViewHeaderDescriptor"/> class is used to define one header element of the CrossView
            (either the column element or row element). 
            <para/>To set visual appearance of the element, use the <see cref="P:FastReport.CrossView.CrossViewDescriptor.TemplateCell"/> 
            property.
            <para/>The collection of descriptors used to represent the CrossView header is stored
            in the <b>CrossViewObject.Data.Columns</b> and <b>CrossViewObject.Data.Rows</b> properties.
            </remarks>
        </member>
        <member name="P:FastReport.CrossView.CrossViewHeaderDescriptor.IsGrandTotal">
            <summary>
            Gets a value indicating that this is the "GrandTotal" element.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewHeaderDescriptor.IsTotal">
            <summary>
            Gets a value indicating that this is the "Total" element.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewHeaderDescriptor.IsMeasure">
            <summary>
            Gets a value indicating that this is the "Measure" element.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewHeaderDescriptor.FieldName">
            <summary>
            Gets the name of field in cube.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewHeaderDescriptor.MeasureName">
            <summary>
            Gets the name of measure in cube.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewHeaderDescriptor.Cell">
            <summary>
            Gets the cell coordinate.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewHeaderDescriptor.CellSize">
            <summary>
            Gets the size in cell coordinate.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewHeaderDescriptor.Level">
            <summary>
            Gets the level coordinate.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewHeaderDescriptor.LevelSize">
            <summary>
            Gets the size in level coordinate.
            </summary>
        </member>
        <member name="M:FastReport.CrossView.CrossViewHeaderDescriptor.Assign(FastReport.CrossView.CrossViewDescriptor)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossView.CrossViewHeaderDescriptor.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossView.CrossViewHeaderDescriptor.#ctor(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.CrossView.CrossViewHeaderDescriptor"/> class
            </summary>
            <param name="fieldName">The Field Name.</param>
            <param name="measureName">The Measure Name.</param>
            <param name="isTotal">Indicates the "Total" element.</param>
            <param name="isGrandTotal">Indicates the "GrandTotal" element.</param>
            <param name="isMeasure">Indicates the "Measure" element.</param>
        </member>
        <member name="M:FastReport.CrossView.CrossViewHeaderDescriptor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.CrossView.CrossViewHeaderDescriptor"/> class
            </summary>
        </member>
        <member name="T:FastReport.Data.DataConnectionBase">
            <summary>
            The base class for all data connection components such as <see cref="!:MsSqlDataConnection"/>.
            </summary>
            <example>This example shows how to add a new MS Access connection to the report.
            <code>
            Report report1;
            MsAccessDataConnection conn = new MsAccessDataConnection();
            conn.DataSource = @"c:\data.mdb";
            report1.Dictionary.Connections.Add(conn);
            conn.CreateAllTables();
            </code>
            </example>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.GetDefaultConnection">
            <summary>
            Does nothing
            </summary>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.ShouldNotDispose(System.Data.Common.DbConnection)">
            <summary>
            Does nothing
            </summary>
            <param name="connection"></param>
            <returns>false</returns>
        </member>
        <member name="P:FastReport.Data.DataConnectionBase.DataSet">
            <summary>
            Gets an internal <b>DataSet</b> object that contains all data tables.
            </summary>
        </member>
        <member name="P:FastReport.Data.DataConnectionBase.Tables">
            <summary>
            Gets a collection of data tables in this connection.
            </summary>
            <remarks>
            To add a table to the connection, you must either create a new TableDataSource and add it
            to this collection or call the <see cref="M:FastReport.Data.DataConnectionBase.CreateAllTables"/> method which will add
            all tables available in the database.
            </remarks>
        </member>
        <member name="P:FastReport.Data.DataConnectionBase.ConnectionString">
            <summary>
            Gets or sets a connection string that contains all connection parameters.
            </summary>
            <remarks>
            <para>To modify some parameter of the connection, use respective 
            <b>ConnectionStringBuilder</b> class.</para>
            <para><b>Security note:</b> the connection string may contain a user name/password. 
            This information is stored in a report file. By default, it is crypted using the standard
            FastReport's password. Since FastReport's source code is available to anyone who paid for it,
            it may be insecure to use the standard password. For more security, you should use own
            password. To do this, specify it in the <b>Crypter.DefaultPassword</b> property.</para>
            </remarks>
            <example>This example demonstrates how to change a connection string:
            <code>
            OleDbConnectionStringBuilder builder = new OleDbConnectionStringBuilder(oleDbConnection1.ConnectionString);
            builder.PersistSecurityInfo = false;
            oleDbConnection1.ConnectionString = builder.ToString();
            </code>
            </example>
        </member>
        <member name="P:FastReport.Data.DataConnectionBase.ConnectionStringExpression">
            <summary>
            Gets or sets an expression that returns a connection string.
            </summary>
            <remarks>
            Use this property to set the connection string dynamically. 
            <para/>The recommended way to do this is to define a report parameter. You can do this in the 
            "Data" window. Once you have defined the parameter, you can use it to pass a value 
            to the connection. Set the <b>ConnectionStringExpression</b> property of the
            connection object to the report parameter's name (so it will look like [myReportParam]).
            To pass a value to the report parameter from your application, use the 
            <see cref="M:FastReport.Report.SetParameterValue(System.String,System.Object)"/> method.
            <note type="caution">
            Once you set value for this property, the <see cref="P:FastReport.Data.DataConnectionBase.ConnectionString"/> property will be ignored 
            when report is run.
            </note>
            </remarks>
        </member>
        <member name="P:FastReport.Data.DataConnectionBase.IsSqlBased">
            <summary>
            Gets or sets a value indicates if this connection is SQL-based.
            </summary>
        </member>
        <member name="P:FastReport.Data.DataConnectionBase.LoginPrompt">
            <summary>
            Gets or sets a value indicating whether a login dialog appears immediately before opening a connection.
            </summary>
            <remarks>
            Set <b>LoginPrompt</b> to <b>true</b> to provide login dialog when establishing a connection. If this
            property is <b>false</b> (by default), you should provide login information (user name and password)
            in the <see cref="P:FastReport.Data.DataConnectionBase.ConnectionString"/> property. Though that property is stored in a crypted form,
            this may be insecure. 
            <para/>Another way to pass login information to the connection is to use
            <see cref="P:FastReport.Data.DataConnectionBase.ConnectionStringExpression"/> property that is bound to the report parameter. In that
            case you supply the entire connection string from your application.
            </remarks>
        </member>
        <member name="P:FastReport.Data.DataConnectionBase.CommandTimeout">
            <summary>
            Gets or sets the command timeout, in seconds.
            </summary>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.CreateDataSet">
            <summary>
            Initializes a <b>DataSet</b> instance.
            </summary>
            <returns>The <b>DataSet</b> object.</returns>
            <remarks>
            This method is used to support FastReport infrastructure. You don't need to use it.
            </remarks>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.DisposeDataSet">
            <summary>
            Disposes a <b>DataSet</b>.
            </summary>
            <remarks>
            This method is used to support FastReport infrastructure. You don't need to use it.
            </remarks>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.SetConnectionString(System.String)">
            <summary>
            Sets the connection string.
            </summary>
            <param name="value">New connection string.</param>
            <remarks>
            Use this method if you need to perform some actions when the connection string is set.
            </remarks>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.GetConnectionStringWithLoginInfo(System.String,System.String)">
            <summary>
            Gets a connection string that contains username and password specified.
            </summary>
            <param name="userName">User name.</param>
            <param name="password">Password.</param>
            <remarks>
            Override this method to pass login information to the connection. Typical implementation
            must get the existing <see cref="P:FastReport.Data.DataConnectionBase.ConnectionString"/>, merge specified login information into it
            and return the new value.
            </remarks>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.CanContain(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.GetChildObjects(FastReport.ObjectCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.AddChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.RemoveChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.GetChildOrder(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.SetChildOrder(FastReport.Base,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.UpdateLayout(System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.CreateAllTables">
            <summary>
            Fills the <see cref="P:FastReport.Data.DataConnectionBase.Tables"/> collection with all tables available in the database.
            </summary>
            <remarks>
            This method does not read the table data; to do this, call the 
            <see cref="M:FastReport.Data.TableDataSource.LoadData(System.Collections.ArrayList)"/> method of each table.
            </remarks>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.CreateAllTables(System.Boolean)">
            <summary>
            Fills the <see cref="P:FastReport.Data.DataConnectionBase.Tables"/> collection with all tables available in the database.
            </summary>
            <param name="initSchema">Set to <b>true</b> to initialize each table's schema.</param>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.CreateRelations">
            <summary>
            Creates the relations between tables. Applies to XmlDataConnection only.
            </summary>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.GetTableNames">
            <summary>
            Gets an array of table names available in the database.
            </summary>
            <returns>An array of strings.</returns>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.GetConnectionType">
            <summary>
            Returns a type of connection.
            </summary>
            <returns><b>Type</b> instance.</returns>
            <remarks>
            You should override this method if you developing a new connection component.
            <para/>If your connection component does not use data connection, you need to override 
            the <see cref="M:FastReport.Data.DataConnectionBase.FillTableSchema(System.Data.DataTable,System.String,FastReport.Data.CommandParameterCollection)"/> and <see cref="M:FastReport.Data.DataConnectionBase.FillTableData(System.Data.DataTable,System.String,FastReport.Data.CommandParameterCollection)"/> methods instead.
            </remarks>
            <example>Here is the example of this method implementation:
            <code>
            public override Type GetConnectionType()
            {
              return typeof(OleDbConnection);
            }
            </code>
            </example>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.GetConnection">
            <summary>
            Returns a connection object.
            </summary>
            <returns>The <b>DbConnection</b> instance.</returns>
            <remarks>Either creates a new <b>DbConnection</b> instance of type provided by the
            <see cref="M:FastReport.Data.DataConnectionBase.GetConnectionType"/> method, or returns the application connection if set
            in the Config.DesignerSettings.ApplicationConnection.</remarks>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.OpenConnection(System.Data.Common.DbConnection)">
            <summary>
            Opens a specified connection object.
            </summary>
            <param name="connection">Connection to open.</param>
            <remarks>
            Use this method to open a connection returned by the <see cref="M:FastReport.Data.DataConnectionBase.GetConnection"/> method.
            <para/>This method displays a login dialog if your connection has the <see cref="P:FastReport.Data.DataConnectionBase.LoginPrompt"/>
            property set to <b>true</b>. Once you have entered an user name and password in
            this dialog, it will remeber the entered values and will not used anymore in this report session.
            </remarks>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.DisposeConnection(System.Data.Common.DbConnection)">
            <summary>
            Disposes a connection.
            </summary>
            <param name="connection">The connection to dispose.</param>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.GetAdapter(System.String,System.Data.Common.DbConnection,FastReport.Data.CommandParameterCollection)">
            <summary>
            Returns a <see cref="T:System.Data.Common.DbDataAdapter"/> object that is specific to this connection.
            </summary>
            <param name="selectCommand">The SQL command used to fetch a table data rows.</param>
            <param name="connection">The connection object.</param>
            <param name="parameters">The select command parameters.</param>
            <returns>The <b>DbDataAdapter</b> object.</returns>
            <remarks>
            You should override this method if you are developing a new connection component. In this method,
            you need to create the adapter and set its <b>SelectCommand</b>'s parameters.
            <para/>If your connection does not use data adapter, you need to override 
            the <see cref="M:FastReport.Data.DataConnectionBase.FillTableSchema(System.Data.DataTable,System.String,FastReport.Data.CommandParameterCollection)"/> and <see cref="M:FastReport.Data.DataConnectionBase.FillTableData(System.Data.DataTable,System.String,FastReport.Data.CommandParameterCollection)"/> methods instead.
            </remarks>
            <example>Here is the example of this method implementation:
            <code>
            public override DbDataAdapter GetAdapter(string selectCommand, DbConnection connection,
              CommandParameterCollection parameters)
            {
              OleDbDataAdapter adapter = new OleDbDataAdapter(selectCommand, connection as OleDbConnection);
              foreach (CommandParameter p in parameters)
              {
                OleDbParameter parameter = adapter.SelectCommand.Parameters.Add(p.Name, (OleDbType)p.DataType, p.Size);
                parameter.Value = p.Value;
              }
              return adapter;
            }
            </code>
            </example>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.GetParameterType">
            <summary>
            Gets the type of parameter that is specific to this connection.
            </summary>
            <returns>The parameter's type.</returns>
            <remarks>
            This property is used in the report designer to display available data types when you edit the
            connection parameters. For example, the type of OleDbConnection parameter is a <b>OleDbType</b>.
            </remarks>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.QuoteIdentifier(System.String,System.Data.Common.DbConnection)">
            <summary>
            Quotes the specified DB identifier such as table name or column name.
            </summary>
            <param name="value">Identifier to quote.</param>
            <param name="connection">The opened DB connection.</param>
            <returns>The quoted identifier.</returns>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.FillTableSchema(System.Data.DataTable,System.String,FastReport.Data.CommandParameterCollection)">
            <summary>
            Fills the table schema.
            </summary>
            <param name="table">DataTable to fill.</param>
            <param name="selectCommand">The SQL select command.</param>
            <param name="parameters">SQL parameters.</param>
            <remarks>
            Usually you don't need to use this method. Internally it uses the <see cref="M:FastReport.Data.DataConnectionBase.GetConnection"/> and
            <see cref="M:FastReport.Data.DataConnectionBase.GetAdapter(System.String,System.Data.Common.DbConnection,FastReport.Data.CommandParameterCollection)"/> methods to fill the table schema. If you create own connection component
            that does not use nor connection or adapter, then you need to override this method.
            </remarks>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.FillTableData(System.Data.DataTable,System.String,FastReport.Data.CommandParameterCollection)">
            <summary>
            Fills the table data.
            </summary>
            <param name="table">DataTable to fill.</param>
            <param name="selectCommand">The SQL select command.</param>
            <param name="parameters">SQL parameters.</param>
            <remarks>
            Usually you don't need to use this method. Internally it uses the <see cref="M:FastReport.Data.DataConnectionBase.GetConnection"/> and
            <see cref="M:FastReport.Data.DataConnectionBase.GetAdapter(System.String,System.Data.Common.DbConnection,FastReport.Data.CommandParameterCollection)"/> methods to fill the table data. If you create own connection component
            that does not use nor connection or adapter, then you need to override this method.
            </remarks>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.CreateTable(FastReport.Data.TableDataSource)">
            <summary>
            Creates table.
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.DeleteTable(FastReport.Data.TableDataSource)">
            <summary>
            Deletes table.
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.Clone">
            <summary>
            Clone table.
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.DataConnectionBase"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Data.TableDataSource">
            <summary>
            Represents a datasource based on <b>DataTable</b> class.
            </summary>
            <example>This example shows how to add a new table to the existing connection:
            <code>
            Report report1;
            DataConnectionBase conn = report1.Dictionary.Connections.FindByName("Connection1");
            TableDataSource table = new TableDataSource();
            table.TableName = "Employees";
            table.Name = "Table1";
            conn.Tables.Add(table);
            </code>
            </example>
        </member>
        <member name="P:FastReport.Data.TableDataSource.Table">
            <summary>
            Gets or sets the underlying <b>DataTable</b> object.
            </summary>
        </member>
        <member name="P:FastReport.Data.TableDataSource.TableName">
            <summary>
            Gets or sets the table name.
            </summary>
        </member>
        <member name="P:FastReport.Data.TableDataSource.SelectCommand">
            <summary>
            Gets or sets SQL "select" command.
            </summary>
            <remarks>
            If this command contains parameters, you should specify them in the <see cref="P:FastReport.Data.TableDataSource.Parameters"/>
            property.
            </remarks>
        </member>
        <member name="P:FastReport.Data.TableDataSource.Parameters">
            <summary>
            Gets a collection of parameters used by "select" command.
            </summary>
            <remarks>
            You must set up this property if the SQL query that you've specified in the 
            <see cref="P:FastReport.Data.TableDataSource.SelectCommand"/> property contains parameters.
            <para/>You can pass a value to the SQL parameter in two ways.
            <para/>The right way is to define a report parameter. You can do this in the 
            "Data" window. Once you have defined the parameter, you can use it to pass a value 
            to the SQL parameter. To do this, set the SQL parameter's <b>Expression</b> property
            to the report parameter's name (so it will look like [myReportParam]).
            To pass a value to the report parameter from your application, use the 
            <see cref="M:FastReport.Report.SetParameterValue(System.String,System.Object)"/> method.
            <para/>The other way (unrecommended) is to find a datasource object and set its parameter from a code:
            <code>
            TableDataSource ds = report.GetDataSource("My DataSource Name") as TableDataSource;
            ds.Parameters[0].Value = 10;
            </code>
            This way is not good because you hardcode the report object's name.
            </remarks>
        </member>
        <member name="P:FastReport.Data.TableDataSource.Connection">
            <summary>
            Gets or sets the parent <see cref="T:FastReport.Data.DataConnectionBase"/> object.
            </summary>
        </member>
        <member name="P:FastReport.Data.TableDataSource.StoreData">
            <summary>
            Gets or sets a value that determines whether it is necessary to store table data in a report file.
            </summary>
        </member>
        <member name="P:FastReport.Data.TableDataSource.TableData">
            <summary>
            Gets or sets the table data.
            </summary>
            <remarks>
            This property is for internal use only.
            </remarks>
        </member>
        <member name="P:FastReport.Data.TableDataSource.IgnoreConnection">
            <summary>
            If set, ignores the Connection (always returns null). Needed when we replace the
            existing connection-based datasource with datatable defined in an application.
            </summary>
        </member>
        <member name="P:FastReport.Data.TableDataSource.QbSchema">
            <summary>
            Gets or sets the query builder schema.
            </summary>
            <remarks>
            This property is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.Data.TableDataSource.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.TableDataSource.GetValue(FastReport.Data.Column)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.TableDataSource.InitSchema">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.TableDataSource.LoadData(System.Collections.ArrayList)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.TableDataSource.RefreshTable">
            <summary>
            Refresh the table schema.
            </summary>
        </member>
        <member name="M:FastReport.Data.TableDataSource.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.TableDataSource.SetParent(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.TableDataSource.InitializeComponent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.TableDataSource.CanContain(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.TableDataSource.GetChildObjects(FastReport.ObjectCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.TableDataSource.AddChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.TableDataSource.RemoveChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.TableDataSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.TableDataSource"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Data.BOConverterFlags">
            <summary>
            <b>Obsolete</b>. Specifies a set of flags used to convert business objects into datasources.
            </summary>
        </member>
        <member name="F:FastReport.Data.BOConverterFlags.None">
            <summary>
            Specifies no actions.
            </summary>
        </member>
        <member name="F:FastReport.Data.BOConverterFlags.AllowFields">
            <summary>
            Allows using the fields of a business object.
            </summary>
        </member>
        <member name="F:FastReport.Data.BOConverterFlags.BrowsableOnly">
            <summary>
            Allows using properties of a business object with <b>BrowsableAttribute</b> only.
            </summary>
        </member>
        <member name="T:FastReport.Data.PropertyKind">
            <summary>
            Specifies a kind of property.
            </summary>
        </member>
        <member name="F:FastReport.Data.PropertyKind.Simple">
            <summary>
            Specifies the property of a simple type (such as integer).
            </summary>
        </member>
        <member name="F:FastReport.Data.PropertyKind.Complex">
            <summary>
            Specifies the complex property such as class with own properties.
            </summary>
        </member>
        <member name="F:FastReport.Data.PropertyKind.Enumerable">
            <summary>
            Specifies the property which is a list of objects (is of IEnumerable type).
            </summary>
        </member>
        <member name="T:FastReport.Data.BusinessObjectDataSource">
            <summary>
            Represents a datasource based on business object of <b>IEnumerable</b> type.
            </summary>
            <remarks>
            Do not use this class directly. To register a business object, use the
            <b>Report.RegisterData</b> method.
            </remarks>
        </member>
        <member name="E:FastReport.Data.BusinessObjectDataSource.LoadBusinessObject">
            <summary>
            Occurs when FastReport engine loads data source with data from a business object.
            </summary>
            <remarks>
            Use this event if you want to implement load-on-demand. Event handler must load the data into 
            your business object.
            </remarks>
        </member>
        <member name="M:FastReport.Data.BusinessObjectDataSource.GetValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.BusinessObjectDataSource.GetValue(FastReport.Data.Column)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.BusinessObjectDataSource.InitSchema">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.BusinessObjectDataSource.LoadData(System.Collections.ArrayList)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.BusinessObjectDataSource.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.LoadBusinessObjectEventHandler">
            <summary>
            Represents the method that will handle the LoadBusinessObject event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:FastReport.Data.LoadBusinessObjectEventArgs">
            <summary>
            Provides data for <see cref="T:FastReport.Data.LoadBusinessObjectEventHandler"/> event.
            </summary>
        </member>
        <member name="F:FastReport.Data.LoadBusinessObjectEventArgs.parent">
            <summary>
            Parent object for this data source.
            </summary>
        </member>
        <member name="T:FastReport.Data.ColumnFormat">
            <summary>
            Specifies the format for the column value.
            </summary>
        </member>
        <member name="F:FastReport.Data.ColumnFormat.Auto">
            <summary>
            The format will be determined automatically depending on the column's DataType.
            </summary>
        </member>
        <member name="F:FastReport.Data.ColumnFormat.General">
            <summary>
            Specifies the General format (no formatting).
            </summary>
        </member>
        <member name="F:FastReport.Data.ColumnFormat.Number">
            <summary>
            Specifies the Number format.
            </summary>
        </member>
        <member name="F:FastReport.Data.ColumnFormat.Currency">
            <summary>
            Specifies the Currency format.
            </summary>
        </member>
        <member name="F:FastReport.Data.ColumnFormat.Date">
            <summary>
            Specifies the Date format.
            </summary>
        </member>
        <member name="F:FastReport.Data.ColumnFormat.Time">
            <summary>
            Specifies the Time format.
            </summary>
        </member>
        <member name="F:FastReport.Data.ColumnFormat.Percent">
            <summary>
            Specifies the Percent format.
            </summary>
        </member>
        <member name="F:FastReport.Data.ColumnFormat.Boolean">
            <summary>
            Specifies the Boolean format.
            </summary>
        </member>
        <member name="T:FastReport.Data.ColumnBindableControl">
            <summary>
            Specifies the type of an object that will be created when you drop the 
            data column on a report page.
            </summary>
        </member>
        <member name="F:FastReport.Data.ColumnBindableControl.Text">
            <summary>
            The column will create the <see cref="T:FastReport.TextObject"/> object.
            </summary>
        </member>
        <member name="F:FastReport.Data.ColumnBindableControl.RichText">
            <summary>
            The column will create the <see cref="!:RichObject"/> object.
            </summary>
        </member>
        <member name="F:FastReport.Data.ColumnBindableControl.Picture">
            <summary>
            The column will create the <see cref="T:FastReport.PictureObject"/> object.
            </summary>
        </member>
        <member name="F:FastReport.Data.ColumnBindableControl.CheckBox">
            <summary>
            The column will create the <see cref="T:FastReport.CheckBoxObject"/> object.
            </summary>
        </member>
        <member name="F:FastReport.Data.ColumnBindableControl.Custom">
            <summary>
            The column will create the custom object, specified in the 
            <see cref="P:FastReport.Data.Column.CustomBindableControl"/> property.
            </summary>
        </member>
        <member name="T:FastReport.Data.Column">
            <summary>
            This class represents a single data column in a <see cref="T:FastReport.Data.DataSourceBase"/>.
            </summary>
        </member>
        <member name="P:FastReport.Data.Column.PropName">
            <summary>
            Gets or sets the business object property name which this column is bound to.
            </summary>
        </member>
        <member name="P:FastReport.Data.Column.PropDescriptor">
            <summary>
            Gets or sets the business object property descriptor which this column is bound to.
            </summary>
        </member>
        <member name="P:FastReport.Data.Column.DataType">
            <summary>
            Gets or sets the type of data supplied by this column.
            </summary>
        </member>
        <member name="P:FastReport.Data.Column.BindableControl">
            <summary>
            Gets or sets a value that specifies the type of a control that will be created 
            when you drop this column on a report page.
            </summary>
            <remarks>
            If you need to specify the custom type, use the <see cref="P:FastReport.Data.Column.CustomBindableControl"/> property instead.
            </remarks>
        </member>
        <member name="P:FastReport.Data.Column.CustomBindableControl">
            <summary>
            Gets or sets a name of custom bindable control.
            </summary>
            <remarks>
            Use this property if you want to bind a column to custom object type. You need to 
            specify the type name of your object; that object must be registered in FastReport using the
            <b>RegisteredObjects.Add</b> method.
            </remarks>
        </member>
        <member name="P:FastReport.Data.Column.Format">
            <summary>
            Gets or sets the format of this column.
            </summary>
            <remarks>
            This property is used when you drag a column from the Data window to the report page.
            FastReport will create a "Text" object and set its "Format" property to the corresponding format.
            By default, this property is set to <b>Auto</b>. It means that the format will be determined 
            automatically depending on the <see cref="P:FastReport.Data.Column.DataType"/> property.
            </remarks>
        </member>
        <member name="P:FastReport.Data.Column.Expression">
            <summary>
            Gets or sets expression of the calculated column.
            </summary>
            <remarks>
            This property is used if the <see cref="P:FastReport.Data.Column.Calculated"/> property is <b>true</b>.
            </remarks>
        </member>
        <member name="P:FastReport.Data.Column.Calculated">
            <summary>
            Gets or sets a value that indicates whether this column is calculated.
            </summary>
            <remarks>
            You should specify the <see cref="P:FastReport.Data.Column.Expression"/> property for calculated columns.
            </remarks>
        </member>
        <member name="P:FastReport.Data.Column.Columns">
            <summary>
            Gets the collection of child columns.
            </summary>
        </member>
        <member name="P:FastReport.Data.Column.Tag">
            <summary>
            Gets or sets the tag value.
            </summary>
        </member>
        <member name="M:FastReport.Data.Column.SetName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Column.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Column.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Column.CanContain(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Column.GetChildObjects(FastReport.ObjectCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Column.AddChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Column.RemoveChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Column.GetChildOrder(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Column.SetChildOrder(FastReport.Base,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Column.UpdateLayout(System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Column.#ctor">
            <summary>
            Initializes a new instance of the <b>Column</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Data.ColumnCollection">
            <summary>
            Represents the collection of <see cref="T:FastReport.Data.Column"/> objects.
            </summary>
        </member>
        <member name="P:FastReport.Data.ColumnCollection.Item(System.Int32)">
            <summary>
            Gets or sets a column.
            </summary>
            <param name="index">The index of a column in this collection.</param>
            <returns>The column with specified index.</returns>
        </member>
        <member name="M:FastReport.Data.ColumnCollection.FindByName(System.String)">
            <summary>
            Finds a column by its name.
            </summary>
            <param name="name">The name of a column.</param>
            <returns>The <see cref="T:FastReport.Data.Column"/> object if found; otherwise <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Data.ColumnCollection.FindByAlias(System.String)">
            <summary>
            Finds a column by its alias.
            </summary>
            <param name="alias">The alias of a column.</param>
            <returns>The <see cref="T:FastReport.Data.Column"/> object if found; otherwise <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Data.ColumnCollection.CreateUniqueName(System.String)">
            <summary>
            Returns an unique column name based on given name.
            </summary>
            <param name="name">The base name.</param>
            <returns>The unique name.</returns>
        </member>
        <member name="M:FastReport.Data.ColumnCollection.CreateUniqueAlias(System.String)">
            <summary>
            Returns an unique column alias based on given alias.
            </summary>
            <param name="alias">The base alias.</param>
            <returns>The unique alias.</returns>
        </member>
        <member name="M:FastReport.Data.ColumnCollection.Sort">
            <summary>
            Sorts the collection of columns.
            </summary>
        </member>
        <member name="M:FastReport.Data.ColumnCollection.#ctor(FastReport.Base)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.ColumnCollection"/> class with default settings.
            </summary>
            <param name="owner">The owner of this collection.</param>
        </member>
        <member name="T:FastReport.Data.ColumnComparer">
            <summary>
            Represents the comparer class that used for sorting the collection of columns.
            </summary>
        </member>
        <member name="M:FastReport.Data.ColumnComparer.Compare(System.Object,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.CommandParameter">
            <summary>
            This class represents a single parameter to use in the "select" command.
            </summary>
        </member>
        <member name="P:FastReport.Data.CommandParameter.DataType">
            <summary>
            Gets or sets the parameter's data type.
            </summary>
        </member>
        <member name="P:FastReport.Data.CommandParameter.Size">
            <summary>
            Gets or sets the size of parameter's data. 
            </summary>
            <remarks>
            This property is used if the <see cref="P:FastReport.Data.CommandParameter.DataType"/> property is set to <b>String</b>.
            </remarks>
        </member>
        <member name="P:FastReport.Data.CommandParameter.Expression">
            <summary>
            Gets or sets an expression that returns the parameter's value.
            </summary>
            <remarks>
            If this property is not set, the <see cref="P:FastReport.Data.CommandParameter.DefaultValue"/> property will be used 
            to obtain a parameter's value.
            </remarks>
        </member>
        <member name="P:FastReport.Data.CommandParameter.DefaultValue">
            <summary>
            Gets or sets a default value for this parameter.
            </summary>
            <remarks>
            This value is used when you designing a report. Also it is used when report is running
            in case if you don't provide a value for the <see cref="P:FastReport.Data.CommandParameter.Expression"/> property.
            </remarks>
        </member>
        <member name="P:FastReport.Data.CommandParameter.Value">
            <summary>
            Gets or sets the parameter's value.
            </summary>
        </member>
        <member name="P:FastReport.Data.CommandParameter.Restrictions">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="M:FastReport.Data.CommandParameter.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.CommandParameter.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.CommandParameter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.CommandParameter"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Data.CommandParameterCollection">
            <summary>
            Represents the collection of <see cref="T:FastReport.Data.CommandParameter"/> objects.
            </summary>
            <remarks>
            This class is used to store the list of parameters defined in the datasource. See the 
            <see cref="P:FastReport.Data.TableDataSource.Parameters"/> property for more details.
            </remarks>
        </member>
        <member name="P:FastReport.Data.CommandParameterCollection.Item(System.Int32)">
            <summary>
            Gets or sets a parameter.
            </summary>
            <param name="index">The index of a parameter in this collection.</param>
            <returns>The parameter with specified index.</returns>
        </member>
        <member name="M:FastReport.Data.CommandParameterCollection.FindByName(System.String)">
            <summary>
            Finds a parameter by its name.
            </summary>
            <param name="name">The name of a parameter.</param>
            <returns>The <see cref="T:FastReport.Data.CommandParameter"/> object if found; otherwise <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Data.CommandParameterCollection.CreateUniqueName(System.String)">
            <summary>
            Returns an unique parameter name based on given name.
            </summary>
            <param name="name">The base name.</param>
            <returns>The unique name.</returns>
        </member>
        <member name="M:FastReport.Data.CommandParameterCollection.#ctor(FastReport.Base)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.CommandParameterCollection"/> class with default settings.
            </summary>
            <param name="owner">The owner of this collection.</param>
        </member>
        <member name="T:FastReport.Data.ConnectionCollection">
            <summary>
            Represents the collection of <see cref="T:FastReport.Data.DataConnectionBase"/> objects.
            </summary>
        </member>
        <member name="P:FastReport.Data.ConnectionCollection.Item(System.Int32)">
            <summary>
            Gets or sets a data connection.
            </summary>
            <param name="index">The index of a data connection in this collection.</param>
            <returns>The data connection with specified index.</returns>
        </member>
        <member name="M:FastReport.Data.ConnectionCollection.#ctor(FastReport.Base)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.ConnectionCollection"/> class with default settings.
            </summary>
            <param name="owner">The owner of this collection.</param>
        </member>
        <member name="T:FastReport.Data.CsvConnectionStringBuilder">
            <summary>
            Represents the CsvDataConnection connection string builder.
            </summary>
            <remarks>
            Use this class to parse connection string returned by the <b>CsvDataConnection</b> class.
            </remarks>
        </member>
        <member name="P:FastReport.Data.CsvConnectionStringBuilder.CsvFile">
            <summary>
            Gets or sets the path to .csv file.
            </summary>
        </member>
        <member name="P:FastReport.Data.CsvConnectionStringBuilder.Codepage">
            <summary>
            Gets or sets the codepage of .csv file.
            </summary>
        </member>
        <member name="P:FastReport.Data.CsvConnectionStringBuilder.Separator">
            <summary>
            Gets or sets the separator.
            </summary>
        </member>
        <member name="P:FastReport.Data.CsvConnectionStringBuilder.FieldNamesInFirstString">
            <summary>
            Gets or sets the value indicating that field names should be loaded from the first string of the file.
            </summary>
        </member>
        <member name="P:FastReport.Data.CsvConnectionStringBuilder.RemoveQuotationMarks">
            <summary>
            Gets or sets the value indicating that quotation marks should be removed.
            </summary>
        </member>
        <member name="P:FastReport.Data.CsvConnectionStringBuilder.ConvertFieldTypes">
            <summary>
            Gets or sets the value indicating that field types should be converted.
            </summary>
        </member>
        <member name="P:FastReport.Data.CsvConnectionStringBuilder.NumberFormat">
            <summary>
            Gets or sets locale name used to auto-convert numeric fields, e.g. "en-US".
            </summary>
        </member>
        <member name="P:FastReport.Data.CsvConnectionStringBuilder.CurrencyFormat">
            <summary>
            Gets or sets locale name used to auto-convert currency fields, e.g. "en-US".
            </summary>
        </member>
        <member name="P:FastReport.Data.CsvConnectionStringBuilder.DateTimeFormat">
            <summary>
            Gets or sets locale name used to auto-convert datetime fields, e.g. "en-US".
            </summary>
        </member>
        <member name="M:FastReport.Data.CsvConnectionStringBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.CsvConnectionStringBuilder"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Data.CsvConnectionStringBuilder.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.CsvConnectionStringBuilder"/> class with a specified connection string.
            </summary>
            <param name="connectionString">The connection string.</param>
        </member>
        <member name="T:FastReport.Data.CsvDataConnection">
            <summary>
            Represents a connection to csv file-based database.
            </summary>
            <example>This example shows how to add a new connection to the report.
            <code>
            Report report1;
            CsvDataConnection conn = new CsvDataConnection();
            conn.CsvFile = @"c:\data.csv";
            report1.Dictionary.Connections.Add(conn);
            conn.CreateAllTables();
            </code>
            </example>
        </member>
        <member name="P:FastReport.Data.CsvDataConnection.CsvFile">
            <summary>
            Gets or sets the path to .csv file.
            </summary>
        </member>
        <member name="P:FastReport.Data.CsvDataConnection.Codepage">
            <summary>
            Gets or sets the codepage of the .csv file.
            </summary>
        </member>
        <member name="P:FastReport.Data.CsvDataConnection.Separator">
            <summary>
            Gets or sets the separator of the .csv file.
            </summary>
        </member>
        <member name="P:FastReport.Data.CsvDataConnection.FieldNamesInFirstString">
            <summary>
            Gets or sets the value indicating that field names should be loaded from the first string of the file.
            </summary>
        </member>
        <member name="P:FastReport.Data.CsvDataConnection.RemoveQuotationMarks">
            <summary>
            Gets or sets the value indicating that quotation marks should be removed.
            </summary>
        </member>
        <member name="P:FastReport.Data.CsvDataConnection.ConvertFieldTypes">
            <summary>
            Gets or sets the value indicating that field types fhould be converted.
            </summary>
        </member>
        <member name="P:FastReport.Data.CsvDataConnection.NumberFormat">
            <summary>
            Gets or sets locale name used to auto-convert numeric fields, e.g. "en-US".
            </summary>
        </member>
        <member name="P:FastReport.Data.CsvDataConnection.CurrencyFormat">
            <summary>
            Gets or sets locale name used to auto-convert currency fields, e.g. "en-US".
            </summary>
        </member>
        <member name="P:FastReport.Data.CsvDataConnection.DateTimeFormat">
            <summary>
            Gets or sets locale name used to auto-convert datetime fields, e.g. "en-US".
            </summary>
        </member>
        <member name="M:FastReport.Data.CsvDataConnection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.CsvDataConnection"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Data.CsvDataConnection.CreateDataSet">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.CsvDataConnection.SetConnectionString(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.CsvDataConnection.FillTableSchema(System.Data.DataTable,System.String,FastReport.Data.CommandParameterCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.CsvDataConnection.FillTableData(System.Data.DataTable,System.String,FastReport.Data.CommandParameterCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.CsvDataConnection.CreateTable(FastReport.Data.TableDataSource)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.CsvDataConnection.DeleteTable(FastReport.Data.TableDataSource)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.CsvDataConnection.QuoteIdentifier(System.String,System.Data.Common.DbConnection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.CsvDataConnection.GetTableNames">
            <inheritdoc/>
        </member>
        <member name="F:FastReport.Data.CsvUtils.DEFAULT_FIELD_NAME">
            <summary>
            The default field name.
            </summary>
        </member>
        <member name="T:FastReport.Data.CubeSourceBase">
            <summary>
            Base class for all CubeSources such as <see cref="T:FastReport.Data.SliceCubeSource"/>.
            </summary>
        </member>
        <member name="P:FastReport.Data.CubeSourceBase.XAxisFieldsCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.Data.CubeSourceBase.YAxisFieldsCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.Data.CubeSourceBase.MeasuresCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.Data.CubeSourceBase.MeasuresLevel">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.Data.CubeSourceBase.MeasuresInXAxis">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.Data.CubeSourceBase.MeasuresInYAxis">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.Data.CubeSourceBase.DataColumnCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.Data.CubeSourceBase.DataRowCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.Data.CubeSourceBase.SourceAssigned">
            <summary>
            
            </summary>
        </member>
        <member name="E:FastReport.Data.CubeSourceBase.OnChanged">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.Data.CubeSourceBase.CubeLink">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.Data.CubeSourceBase.GetMeasureCell(System.Int32,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.Data.CubeSourceBase.TraverseXAxis(FastReport.CrossView.CrossViewAxisDrawCellHandler)">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.Data.CubeSourceBase.TraverseYAxis(FastReport.CrossView.CrossViewAxisDrawCellHandler)">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.Data.CubeSourceBase.GetXAxisFieldName(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.Data.CubeSourceBase.GetYAxisFieldName(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.Data.CubeSourceBase.GetMeasureName(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.Data.CubeSourceBase.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.CubeSourceBase.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.CubeSourceBase.Changed">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.Data.CubeSourceBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.CubeSourceBase"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Data.CubeSourceCollection">
            <summary>
            Represents the collection of <see cref="T:FastReport.Data.CubeSourceBase"/> objects.
            </summary>
        </member>
        <member name="P:FastReport.Data.CubeSourceCollection.Item(System.Int32)">
            <summary>
            Gets or sets a data source.
            </summary>
            <param name="index">The index of a data source in this collection.</param>
            <returns>The data source with specified index.</returns>
        </member>
        <member name="M:FastReport.Data.CubeSourceCollection.FindByName(System.String)">
            <summary>
            Finds a CubeSource by its name.
            </summary>
            <param name="name">The name of a CubeSource.</param>
            <returns>The <see cref="T:FastReport.Data.CubeSourceBase"/> object if found; otherwise <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Data.CubeSourceCollection.FindByAlias(System.String)">
            <summary>
            Finds a CubeSource by its alias.
            </summary>
            <param name="alias">The alias of a CubeSource.</param>
            <returns>The <see cref="T:FastReport.Data.CubeSourceBase"/> object if found; otherwise <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Data.CubeSourceCollection.#ctor(FastReport.Base)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.CubeSourceCollection"/> class with default settings.
            </summary>
            <param name="owner">The owner of this collection.</param>
        </member>
        <member name="T:FastReport.Data.DataComponentBase">
            <summary>
            The base class for all data components such as data sources, columns.
            </summary>
        </member>
        <member name="P:FastReport.Data.DataComponentBase.Alias">
            <summary>
            Gets or sets alias of this object.
            </summary>
            <remarks>
            Alias is a human-friendly name of this object. It may contain any symbols (including 
            spaces and national symbols).
            </remarks>
        </member>
        <member name="P:FastReport.Data.DataComponentBase.Enabled">
            <summary>
            Gets or sets a value indicates that object is enabled and thus can be used in a report.
            </summary>
            <remarks>
            This property is used to hide an object from the Data Dictionary window. Hidden
            objects are still accessible in the "Data|Choose Data Source..." menu.
            </remarks>
        </member>
        <member name="P:FastReport.Data.DataComponentBase.ReferenceName">
            <summary>
            Gets or sets a name of the data object.
            </summary>
            <remarks>
            This property is used to support FastReport.Net infrastructure. Do not use it directly.
            </remarks>
        </member>
        <member name="P:FastReport.Data.DataComponentBase.Reference">
            <summary>
            Gets or sets a reference to the data object.
            </summary>
            <remarks>
            This property is used to support FastReport.Net infrastructure. Do not use it directly.
            </remarks>
        </member>
        <member name="P:FastReport.Data.DataComponentBase.IsAliased">
            <summary>
            Gets a value indicates that this object has an alias.
            </summary>
        </member>
        <member name="M:FastReport.Data.DataComponentBase.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.DataComponentBase.SetName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.DataComponentBase.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.DataComponentBase.InitializeComponent">
            <summary>
            Initializes the object before running a report.
            </summary>
            <remarks>
            This method is used by the report engine, do not call it directly.
            </remarks>
        </member>
        <member name="M:FastReport.Data.DataComponentBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.DataComponentBase"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Data.DataSourceBase">
            <summary>
            Base class for all datasources such as <see cref="T:FastReport.Data.TableDataSource"/>.
            </summary>
        </member>
        <member name="E:FastReport.Data.DataSourceBase.Load">
            <summary>
            Occurs when the FastReport engine loads data source with data.
            </summary>
            <remarks>
            Use this event if you want to implement load-on-demand. Event handler must load the data 
            into the data object which this datasource is bound to (for example, the
            <b>TableDataSource</b> uses data from the <b>DataTable</b> object bound to
            the <b>Table</b> property).
            </remarks>
        </member>
        <member name="P:FastReport.Data.DataSourceBase.RowCount">
            <summary>
            Gets a number of data rows in this datasource.
            </summary>
            <remarks>
            You should initialize the datasource by the <b>Init</b> method before using this property.
            </remarks>
        </member>
        <member name="P:FastReport.Data.DataSourceBase.HasMoreRows">
            <summary>
            Gets a value indicating that datasource has more rows, that is the <see cref="P:FastReport.Data.DataSourceBase.CurrentRowNo"/>
            is less than the <see cref="P:FastReport.Data.DataSourceBase.RowCount"/>.
            </summary>
            <remarks>
            <para>You should initialize the datasource by the <b>Init</b> method before using this property.</para>
            <para>Usually this property is used with the following code block:</para>
            <code>
            dataSource.Init();
            while (dataSource.HasMoreRows)
            {
              // do something...
              dataSource.Next();
            }
            </code>
            </remarks>
        </member>
        <member name="P:FastReport.Data.DataSourceBase.CurrentRow">
            <summary>
            Gets the current data row.
            </summary>
            <remarks>
            <para>This property is updated when you call the <see cref="M:FastReport.Data.DataSourceBase.Next"/> method.</para>
            </remarks>
        </member>
        <member name="P:FastReport.Data.DataSourceBase.CurrentRowNo">
            <summary>
            Gets an index of current data row.
            </summary>
            <remarks>
            <para>You should initialize the datasource by the <b>Init</b> method before using this property.</para>
            <para>This property is updated when you call the <see cref="M:FastReport.Data.DataSourceBase.Next"/> method.</para>
            </remarks>
        </member>
        <member name="P:FastReport.Data.DataSourceBase.Item(System.String)">
            <summary>
            Gets data stored in a specified column.
            </summary>
            <param name="columnAlias">Alias of a column.</param>
            <returns>The column's value.</returns>
            <remarks>
            You should initialize the datasource by the <b>Init</b> method before using this property.
            </remarks>
        </member>
        <member name="P:FastReport.Data.DataSourceBase.Item(FastReport.Data.Column)">
            <summary>
            Gets data stored in a specified column.
            </summary>
            <param name="column">The column.</param>
            <returns>The column's value.</returns>
            <remarks>
            You should initialize the datasource by the <b>Init</b> method before using this property.
            </remarks>
        </member>
        <member name="P:FastReport.Data.DataSourceBase.ForceLoadData">
            <summary>
            Forces loading of data for this datasource.
            </summary>
            <remarks>
            This property is <b>false</b> by default. Set it to <b>true</b> if you need to reload data 
            each time when the datasource initialized. Note that this may slow down the performance.
            </remarks>
        </member>
        <member name="P:FastReport.Data.DataSourceBase.DataType">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Data.DataSourceBase.BindableControl">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Data.DataSourceBase.CustomBindableControl">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Data.DataSourceBase.Format">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Data.DataSourceBase.Expression">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Data.DataSourceBase.Calculated">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Data.DataSourceBase.AdditionalFilter">
            <summary>
            Gets the additional filter settings.
            </summary>
        </member>
        <member name="M:FastReport.Data.DataSourceBase.GetValue(System.String)">
            <summary>
            Gets data stored in a specified column.
            </summary>
            <param name="alias">The column alias.</param>
            <returns>An object that contains the data.</returns>
        </member>
        <member name="M:FastReport.Data.DataSourceBase.GetValue(FastReport.Data.Column)">
            <summary>
            Gets data stored in a specified column.
            </summary>
            <param name="column">The column.</param>
            <returns>An object that contains the data.</returns>
        </member>
        <member name="M:FastReport.Data.DataSourceBase.InitSchema">
            <summary>
            Initializes the datasource schema.
            </summary>
            <remarks>
            This method is used to support the FastReport.Net infrastructure. Do not call it directly.
            </remarks>
        </member>
        <member name="M:FastReport.Data.DataSourceBase.LoadData(System.Collections.ArrayList)">
            <summary>
            Loads the datasource with data.
            </summary>
            <remarks>
            This method is used to support the FastReport.Net infrastructure. Do not call it directly.
            </remarks>
            <param name="rows">Rows to fill with data.</param>
        </member>
        <member name="M:FastReport.Data.DataSourceBase.Init">
            <summary>
            Initializes this datasource.
            </summary>
            <remarks>
            This method fills the table with data. You should always call it before using most of
            datasource properties.
            </remarks>
        </member>
        <member name="M:FastReport.Data.DataSourceBase.Init(System.String)">
            <summary>
            Initializes this datasource and applies the specified filter.
            </summary>
            <param name="filter">The filter expression.</param>
        </member>
        <member name="M:FastReport.Data.DataSourceBase.Init(System.String,FastReport.SortCollection)">
            <summary>
            Initializes this datasource, applies the specified filter and sorts the rows.
            </summary>
            <param name="filter">The filter expression.</param>
            <param name="sort">The collection of sort descriptors.</param>
        </member>
        <member name="M:FastReport.Data.DataSourceBase.Init(FastReport.Data.DataSourceBase)">
            <summary>
            Initializes this datasource and filters data rows according to the master-detail relation between
            this datasource and <b>parentData</b>.
            </summary>
            <param name="parentData">Parent datasource.</param>
            <remarks>
            To use master-detail relation, you must define the <see cref="T:FastReport.Data.Relation"/> object that describes
            the relation, and add it to the <b>Report.Dictionary.Relations</b> collection.
            </remarks>
        </member>
        <member name="M:FastReport.Data.DataSourceBase.Init(FastReport.Data.DataSourceBase,System.String,FastReport.SortCollection)">
            <summary>
            Initializes this datasource and filters data rows according to the master-detail relation between
            this datasource and <b>parentData</b>. Also applies the specified filter and sorts the rows.
            </summary>
            <param name="parentData">Parent datasource.</param>
            <param name="filter">The filter expression.</param>
            <param name="sort">The collection of sort descriptors.</param>
            <remarks>
            To use master-detail relation, you must define the <see cref="T:FastReport.Data.Relation"/> object that describes
            the relation, and add it to the <b>Report.Dictionary.Relations</b> collection.
            </remarks>
        </member>
        <member name="M:FastReport.Data.DataSourceBase.Init(FastReport.Data.Relation,System.String,FastReport.SortCollection)">
            <summary>
            Initializes this datasource and filters data rows according to the master-detail relation.
            Also applies the specified filter and sorts the rows.
            </summary>
            <param name="relation">The master-detail relation.</param>
            <param name="filter">The filter expression.</param>
            <param name="sort">The collection of sort descriptors.</param>
            <remarks>
            To use master-detail relation, you must define the <see cref="T:FastReport.Data.Relation"/> object that describes
            the relation, and add it to the <b>Report.Dictionary.Relations</b> collection.
            </remarks>
        </member>
        <member name="M:FastReport.Data.DataSourceBase.EnsureInit">
            <summary>
            Initializes the data source if it is not initialized yet.
            </summary>
        </member>
        <member name="M:FastReport.Data.DataSourceBase.First">
            <summary>
            Navigates to the first row.
            </summary>
            <remarks>
            You should initialize the datasource by the <b>Init</b> method before using this method.
            </remarks>
        </member>
        <member name="M:FastReport.Data.DataSourceBase.Next">
            <summary>
            Navigates to the next row.
            </summary>
            <remarks>
            You should initialize the datasource by the <b>Init</b> method before using this method.
            </remarks>
        </member>
        <member name="M:FastReport.Data.DataSourceBase.Prior">
            <summary>
            Navigates to the prior row.
            </summary>
            <remarks>
            You should initialize the datasource by the <b>Init</b> method before using this method.
            </remarks>
        </member>
        <member name="M:FastReport.Data.DataSourceBase.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.DataSourceBase.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.DataSourceBase.InitializeComponent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.DataSourceBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.DataSourceBase"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Data.DataSourceCollection">
            <summary>
            Represents the collection of <see cref="T:FastReport.Data.DataSourceBase"/> objects.
            </summary>
        </member>
        <member name="P:FastReport.Data.DataSourceCollection.Item(System.Int32)">
            <summary>
            Gets or sets a data source.
            </summary>
            <param name="index">The index of a data source in this collection.</param>
            <returns>The data source with specified index.</returns>
        </member>
        <member name="M:FastReport.Data.DataSourceCollection.FindByName(System.String)">
            <summary>
            Finds a datasource by its name.
            </summary>
            <param name="name">The name of a datasource.</param>
            <returns>The <see cref="T:FastReport.Data.DataSourceBase"/> object if found; otherwise <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Data.DataSourceCollection.FindByAlias(System.String)">
            <summary>
            Finds a datasource by its alias.
            </summary>
            <param name="alias">The alias of a datasource.</param>
            <returns>The <see cref="T:FastReport.Data.DataSourceBase"/> object if found; otherwise <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Data.DataSourceCollection.Sort">
            <summary>
            Sorts data sources by theirs names.
            </summary>
        </member>
        <member name="M:FastReport.Data.DataSourceCollection.#ctor(FastReport.Base)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.DataSourceCollection"/> class with default settings.
            </summary>
            <param name="owner">The owner of this collection.</param>
        </member>
        <member name="T:FastReport.Data.DataSourceComparer">
            <summary>
            Represents the comparer class that used for sorting the collection of data sources.
            </summary>
        </member>
        <member name="M:FastReport.Data.DataSourceComparer.Compare(System.Object,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.FilterOperation">
            <summary>
            Determines how to filter the data value.
            </summary>
            <remarks>
            The "Data value" is a value contained in the datasource which you filter. 
            The "Selected value" is a value you have entered or selected in the dialog control.
            </remarks>
        </member>
        <member name="F:FastReport.Data.FilterOperation.Equal">
            <summary>
            Data value is equal to selected value.
            </summary>
        </member>
        <member name="F:FastReport.Data.FilterOperation.NotEqual">
            <summary>
            Data value is not equal to selected value.
            </summary>
        </member>
        <member name="F:FastReport.Data.FilterOperation.LessThan">
            <summary>
            Data value is less than selected value.
            </summary>
        </member>
        <member name="F:FastReport.Data.FilterOperation.LessThanOrEqual">
            <summary>
            Data value is less than or equal to selected value.
            </summary>
        </member>
        <member name="F:FastReport.Data.FilterOperation.GreaterThan">
            <summary>
            Data value is greater than selected value.
            </summary>
        </member>
        <member name="F:FastReport.Data.FilterOperation.GreaterThanOrEqual">
            <summary>
            Data value is greater than or equal to selected value.
            </summary>
        </member>
        <member name="F:FastReport.Data.FilterOperation.Contains">
            <summary>
            Data string contains selected value.
            </summary>
        </member>
        <member name="F:FastReport.Data.FilterOperation.NotContains">
            <summary>
            Data string does not contain selected value.
            </summary>
        </member>
        <member name="F:FastReport.Data.FilterOperation.StartsWith">
            <summary>
            Data string starts with selected value.
            </summary>
        </member>
        <member name="F:FastReport.Data.FilterOperation.NotStartsWith">
            <summary>
            Data string does not start with selected value.
            </summary>
        </member>
        <member name="F:FastReport.Data.FilterOperation.EndsWith">
            <summary>
            Data string ends with selected value.
            </summary>
        </member>
        <member name="F:FastReport.Data.FilterOperation.NotEndsWith">
            <summary>
            Data string does not end with selected value.
            </summary>
        </member>
        <member name="T:FastReport.Data.Dictionary">
            <summary>
            This class stores all report data items such as datasources, connections, relations, parameters,
            system variables.
            </summary>
            <remarks>
            You can access the report dictionary via <b>Report.Dictionary</b> property.
            </remarks>
        </member>
        <member name="P:FastReport.Data.Dictionary.Connections">
            <summary>
            Gets a collection of connection objects available in a report.
            </summary>
        </member>
        <member name="P:FastReport.Data.Dictionary.DataSources">
            <summary>
            Gets a collection of datasources available in a report. 
            </summary>
            <remarks>
            Usually you don't need to use this property. It contains only datasources 
            registered using the <b>RegisterData</b> method. All other datasources are contained 
            in connection objects and may be accessed via <see cref="P:FastReport.Data.Dictionary.Connections"/> property. 
            </remarks>
        </member>
        <member name="P:FastReport.Data.Dictionary.Relations">
            <summary>
            Gets a collection of relations.
            </summary>
        </member>
        <member name="P:FastReport.Data.Dictionary.Parameters">
            <summary>
            Gets a collection of parameters.
            </summary>
            <remarks>
            Another way to access parameters is to use the <b>Report.Parameters</b> property
            which is actually a shortcut to this property. You also may use the <b>Report.GetParameter</b>
            and <b>Report.GetParameterValue</b> methods.
            </remarks>
        </member>
        <member name="P:FastReport.Data.Dictionary.SystemVariables">
            <summary>
            Gets a collection of system variables like Date, PageNofM etc.
            </summary>
            <remarks>
            Another way to access a system variable is to use the <b>Report.GetVariableValue</b> method.
            </remarks>
        </member>
        <member name="P:FastReport.Data.Dictionary.Totals">
            <summary>
            Gets a collection of totals.
            </summary>
            <remarks>
            Another way to get a total value is to use the <b>Report.GetTotalValue</b> method.
            </remarks>
        </member>
        <member name="P:FastReport.Data.Dictionary.CubeSources">
            <summary>
            Gets a collection of cubesources available in a report. 
            </summary>
            <remarks>
            Usually you don't need to use this property. It contains only cubesources 
            registered using the <b>RegisterData</b> method.
            </remarks>
        </member>
        <member name="P:FastReport.Data.Dictionary.RegisteredItems">
            <summary>
            Gets a list of registered items.
            </summary>
            <remarks>
            This property is for internal use only.
            </remarks>
        </member>
        <member name="P:FastReport.Data.Dictionary.AllObjects">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Dictionary.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Dictionary.RegisterDataView(System.Data.DataView,System.String,System.Boolean)">
            <summary>
            Registers a DataView.
            </summary>
            <param name="view">The DataView to register.</param>
            <param name="referenceName">The name of the data object.</param>
            <param name="enabled">Determines wheter to enable the object or not.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.Data.Dictionary.RegisterBusinessObject(System.Collections.IEnumerable,System.String,System.Int32,System.Boolean)">
            <summary>
            Registers a business object.
            </summary>
            <param name="data">The business object.</param>
            <param name="referenceName">The name of the object.</param>
            <param name="maxNestingLevel">Maximum level of data nesting.</param>
            <param name="enabled">Determines wheter to enable the object or not.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.Data.Dictionary.RegisterCubeLink(FastReport.CrossView.IBaseCubeLink,System.String,System.Boolean)">
            <summary>
            Registers a CubeLink.
            </summary>
            <param name="cubeLink">The CubeLink to register.</param>
            <param name="referenceName">The name of the data object.</param>
            <param name="enabled">Determines wheter to enable the object or not.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.Data.Dictionary.RegisterData(System.Object,System.String,System.Boolean)">
            <summary>
            Registers a data object.
            </summary>
            <param name="data">The object to register.</param>
            <param name="name">The name of the object.</param>
            <param name="enabled">Determines wheter to enable the object or not.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.Data.Dictionary.UnregisterData(System.Object)">
            <summary>
            Unregisters the previously registered data.
            </summary>
            <param name="data">The application data.</param>
        </member>
        <member name="M:FastReport.Data.Dictionary.UnregisterData(System.Object,System.String)">
            <summary>
            Unregisters the previously registered data.
            </summary>
            <param name="data">The application data.</param>
            <param name="name">The name of the data.</param>
            <remarks>
            You must specify the same <b>data</b> and <b>name</b> as when you call <b>RegisterData</b>.
            </remarks>
        </member>
        <member name="M:FastReport.Data.Dictionary.ReRegisterData">
            <summary>
            Re-registers the data registered before.
            </summary>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.Data.Dictionary.ReRegisterData(FastReport.Data.Dictionary)">
            <summary>
            Re-registers the data registered before.
            </summary>
            <param name="dictionary"></param>
        </member>
        <member name="M:FastReport.Data.Dictionary.ClearRegisteredData">
            <summary>
            Clears all registered data.
            </summary>
        </member>
        <member name="M:FastReport.Data.Dictionary.UpdateRelations">
            <summary>
            Enables or disables relations between data tables.
            </summary>
            <remarks>
            Call this method if you create master-detail report from code. This method enables
            relation between two data tables which <b>Enabled</b> flag is set to <b>true</b>. Relations
            whose parent and child tables are disabled, gets disabled too.
            </remarks>
        </member>
        <member name="M:FastReport.Data.Dictionary.CreateUniqueName(System.String)">
            <summary>
            Creates unique name for data item such as connection, datasource, relation, parameter or total.
            </summary>
            <param name="name">The base name.</param>
            <returns>The new unique name.</returns>
            <remarks>
            Use this method to create unique name of the data item. It is necessary when you create new
            items in code to avoid conflicts with existing report items.
            <example>This example show how to add a new parameter:
            <code>
            Report report1;
            Parameter par = new Parameter();
            par.Name = report1.Dictionary.CreateUniqueName("Parameter");
            report1.Parameters.Add(par);
            </code>
            </example>
            </remarks>
        </member>
        <member name="M:FastReport.Data.Dictionary.CreateUniqueAlias(System.String)">
            <summary>
            Creates unique alias for data item such as connection, datasource or relation.
            </summary>
            <param name="alias">The base alias.</param>
            <returns>The new unique alias.</returns>
            <remarks>
            Use this method to create unique alias of the data item. It is necessary when you create new
            items in code to avoid conflicts with existing report items.
            <example>This example show how to add a new table:
            <code>
            Report report1;
            DataConnectionBase conn = report1.Dictionary.Connections.FindByName("Connection1");
            TableDataSource table = new TableDataSource();
            table.TableName = "Employees";
            table.Name = report1.Dictionary.CreateUniqueName("EmployeesTable");
            table.Alias = report1.Dictionary.CreateUniqueAlias("Employees");
            conn.Tables.Add(table);
            </code>
            </example>
            </remarks>
        </member>
        <member name="M:FastReport.Data.Dictionary.FindByName(System.String)">
            <summary>
            Finds a data item such as connection, datasource, relation, parameter or total by its name.
            </summary>
            <param name="name">The item's name.</param>
            <returns>The data item if found; otherwise, <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Data.Dictionary.FindByAlias(System.String)">
            <summary>
            Finds a data item such as connection, datasource or relation by its alias.
            </summary>
            <param name="alias">The item's alias.</param>
            <returns>The data item if found; otherwise, <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Data.Dictionary.FindDataTableSource(System.Data.DataTable)">
            <summary>
            Finds a datasource that matches the specified DataTable.
            </summary>
            <param name="table">The <b>DataTable</b> object to check.</param>
            <returns>The <b>DataSourceBase</b> object if found.</returns>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.Data.Dictionary.FindDataComponent(System.String)">
            <summary>
            Finds a data component that matches the specified reference name.
            </summary>
            <param name="referenceName">The name to check.</param>
            <returns>The <b>DataComponentBase</b> object if found.</returns>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.Data.Dictionary.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Dictionary.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Dictionary.Save(System.IO.Stream)">
            <summary>
            Saves the dictionary to a stream.
            </summary>
            <param name="stream">Stream to save to.</param>
        </member>
        <member name="M:FastReport.Data.Dictionary.Save(System.String)">
            <summary>
            Saves the dictionary to a file.
            </summary>
            <param name="fileName">The name of a file to save to.</param>
        </member>
        <member name="M:FastReport.Data.Dictionary.Load(System.IO.Stream)">
            <summary>
            Loads the dictionary from a stream.
            </summary>
            <param name="stream">The stream to load from.</param>
        </member>
        <member name="M:FastReport.Data.Dictionary.Load(System.String)">
            <summary>
            Loads the dictionary from a file.
            </summary>
            <param name="fileName">The name of a file to load from.</param>
        </member>
        <member name="M:FastReport.Data.Dictionary.Merge(FastReport.Data.Dictionary)">
            <summary>
            Merges this dictionary with another <b>Dictionary</b>.
            </summary>
            <param name="source">Another dictionary to merge the data from.</param>
        </member>
        <member name="M:FastReport.Data.Dictionary.CanContain(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Dictionary.GetChildObjects(FastReport.ObjectCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Dictionary.AddChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Dictionary.RemoveChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Dictionary.GetChildOrder(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Dictionary.SetChildOrder(FastReport.Base,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Dictionary.UpdateLayout(System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Dictionary.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.Dictionary"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Data.Dictionary.RegDataItem">
            <summary>
            Represents the item registered in a dictionary.
            </summary>
        </member>
        <member name="F:FastReport.Data.Dictionary.RegDataItem.data">
            <summary>
            Gets the item data.
            </summary>
        </member>
        <member name="F:FastReport.Data.Dictionary.RegDataItem.name">
            <summary>
            Gets the item name.
            </summary>
        </member>
        <member name="M:FastReport.Data.ElasticSearch.ESDataSourceConnection.FillTableData(System.Data.DataTable,System.String,FastReport.Data.CommandParameterCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.ElasticSearch.ESDataSourceConnection.FillTableSchema(System.Data.DataTable,System.String,FastReport.Data.CommandParameterCollection)">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Data.ElasticSearch.ESDataSourceConnectionStringBuilder.EndPoint">
            <summary>
            Gets or sets EndPoint ElasticSearch DB
            </summary>
        </member>
        <member name="M:FastReport.Data.ElasticSearch.ESDataSourceConnectionStringBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.ElasticSearch.ESDataSourceConnectionStringBuilder"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.Data.ElasticSearch.ESDataSourceConnectionStringBuilder.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.ElasticSearch.ESDataSourceConnectionStringBuilder"/> class with
            specified connection string.
            </summary>
            <param name="connectionString">The connection string.</param>
        </member>
        <member name="T:FastReport.Data.JsonConnection.JsonDataSourceConnection">
            <summary>
            FastReport json connection
            </summary>
        </member>
        <member name="F:FastReport.Data.JsonConnection.JsonDataSourceConnection.TABLE_NAME">
            <summary>
            Name of json object table
            </summary>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonDataSourceConnection.#ctor">
            <summary>
            Initialize a new instance
            </summary>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonDataSourceConnection.CreateAllTables(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonDataSourceConnection.CreateRelations">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonDataSourceConnection.CreateTable(FastReport.Data.TableDataSource)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonDataSourceConnection.DeleteTable(FastReport.Data.TableDataSource)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonDataSourceConnection.FillTableData(System.Data.DataTable,System.String,FastReport.Data.CommandParameterCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonDataSourceConnection.FillTableSchema(System.Data.DataTable,System.String,FastReport.Data.CommandParameterCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonDataSourceConnection.GetTableNames">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonDataSourceConnection.QuoteIdentifier(System.String,System.Data.Common.DbConnection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonDataSourceConnection.CreateDataSet">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonDataSourceConnection.SetConnectionString(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.JsonConnection.JsonDataSourceConnectionStringBuilder">
            <summary>
            Represents the JsonDataConnection connection string builder.
            </summary>
            <remarks>
            Use this class to parse connection string returned by the <b>JsonDataConnection</b> class.
            </remarks>
        </member>
        <member name="P:FastReport.Data.JsonConnection.JsonDataSourceConnectionStringBuilder.Json">
            <summary>
            Gets or sets json data
            </summary>
        </member>
        <member name="P:FastReport.Data.JsonConnection.JsonDataSourceConnectionStringBuilder.JsonSchema">
            <summary>
            Gets or sets json schema
            </summary>
        </member>
        <member name="P:FastReport.Data.JsonConnection.JsonDataSourceConnectionStringBuilder.Encoding">
            <summary>
            Gets or sets json url encoding
            </summary>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonDataSourceConnectionStringBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.JsonConnection.JsonDataSourceConnectionStringBuilder"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonDataSourceConnectionStringBuilder.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.JsonConnection.JsonDataSourceConnectionStringBuilder"/> class with
            specified connection string.
            </summary>
            <param name="connectionString">The connection string.</param>
        </member>
        <member name="T:FastReport.Data.JsonConnection.JsonTableDataSource">
            <summary>
            JsonTableDataSource present a json array object
            </summary>
        </member>
        <member name="P:FastReport.Data.JsonConnection.JsonTableDataSource.UpdateSchema">
            <summary>
            Gets or sets value for force update schema on init schema
            </summary>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonTableDataSource.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonTableDataSource.InitializeComponent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonTableDataSource.InitSchema">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonTableDataSource.LoadData(System.Collections.ArrayList)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonTableDataSource.GetValue(FastReport.Data.Column)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonTableDataSource.GetValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.Parameter">
            <summary>
            Represents a report parameter that is used to pass user data to a report.
            </summary>
            <remarks>
            See <see cref="P:FastReport.Report.Parameters"/> for details about using parameters.
            </remarks>
        </member>
        <member name="P:FastReport.Data.Parameter.Name">
            <summary>
            Gets or sets the name of parameter.
            </summary>
        </member>
        <member name="P:FastReport.Data.Parameter.DataType">
            <summary>
            Gets or sets the type of parameter.
            </summary>
        </member>
        <member name="P:FastReport.Data.Parameter.Value">
            <summary>
            Gets or sets the value of parameter.
            </summary>
            <remarks>
            You may specify the static value in this property. Note: if the <see cref="P:FastReport.Data.Parameter.Expression"/>
            property is not empty, it will be calculated and its value will be returned.
            </remarks>
        </member>
        <member name="P:FastReport.Data.Parameter.AsString">
            <summary>
            Gets or sets value of the parameter as a string.
            </summary>
        </member>
        <member name="P:FastReport.Data.Parameter.Expression">
            <summary>
            Gets or sets an expression of the parameter.
            </summary>
            <remarks>
            This expression will be calculated each time you access a parameter's <b>Value</b>.
            </remarks>
        </member>
        <member name="P:FastReport.Data.Parameter.Description">
            <summary>
            Gets or sets the description of a parameter.
            </summary>
        </member>
        <member name="P:FastReport.Data.Parameter.Parameters">
            <summary>
            Gets a collection of nested parameters.
            </summary>
            <remarks>
            Parameters can have child (nested) parameters. To get or set a nested
            parameter's value, use the <see cref="M:FastReport.Report.GetParameter(System.String)"/> method.
            </remarks>
        </member>
        <member name="P:FastReport.Data.Parameter.FullName">
            <summary>
            Gets the full name of the parameter. This is useful to get the nested parameter's full name.
            </summary>
        </member>
        <member name="P:FastReport.Data.Parameter.Restrictions">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="M:FastReport.Data.Parameter.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Parameter.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Parameter.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Parameter.CanContain(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Parameter.GetChildObjects(FastReport.ObjectCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Parameter.AddChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Parameter.RemoveChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Parameter.GetChildOrder(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Parameter.SetChildOrder(FastReport.Base,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Parameter.UpdateLayout(System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Parameter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.Parameter"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.Data.Parameter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.Parameter"/> class with specified name.
            </summary>
        </member>
        <member name="T:FastReport.Data.ParameterCollection">
            <summary>
            Represents the collection of <see cref="T:FastReport.Data.Parameter"/> objects.
            </summary>
        </member>
        <member name="P:FastReport.Data.ParameterCollection.Item(System.Int32)">
            <summary>
            Gets or sets a parameter.
            </summary>
            <param name="index">The index of a parameter in this collection.</param>
            <returns>The parameter with specified index.</returns>
        </member>
        <member name="M:FastReport.Data.ParameterCollection.FindByName(System.String)">
            <summary>
            Finds a parameter by its name.
            </summary>
            <param name="name">The name of a parameter.</param>
            <returns>The <see cref="T:FastReport.Data.Parameter"/> object if found; otherwise <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Data.ParameterCollection.CreateUniqueName(System.String)">
            <summary>
            Returns an unique parameter name based on given name.
            </summary>
            <param name="name">The base name.</param>
            <returns>The unique name.</returns>
        </member>
        <member name="M:FastReport.Data.ParameterCollection.Assign(FastReport.Data.ParameterCollection)">
            <summary>
            Copies the parameters from other collection.
            </summary>
            <param name="source">Parameters to copy from.</param>
        </member>
        <member name="M:FastReport.Data.ParameterCollection.#ctor(FastReport.Base)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.ParameterCollection"/> class with default settings.
            </summary>
            <param name="owner">The owner of this collection.</param>
        </member>
        <member name="T:FastReport.Data.Relation">
            <summary>
            Represents a master-detail relation between two data sources.
            </summary>
            <remarks>
            To setup a relation, you must specify parent and child datasources. For a parent datasource,
            you must specify set of key columns; for child datasource, you must specify set of columns that
            relate to the parent key columns.
            <example>This example shows how to create relation between Customers and Orders tables:
            <code>
            Report report1;
            DataSourceBase customersTable = report1.Dictionary.DataSources.FindByAlias("Customers");
            DataSourceBase ordersTable = report1.Dictionary.DataSources.FindByAlias("Orders");
            Relation rel = new Relation();
            rel.Name = "customersOrders";
            rel.ParentDataSource = customersTable;
            rel.ChildDataSource = ordersTable;
            rel.ParentColumns = new string[] { "CustomerID" };
            rel.ChildColumns = new string[] { "CustomerID" };
            report1.Dictionary.Relations.Add(rel);
            </code>
            </example>
            </remarks>
        </member>
        <member name="P:FastReport.Data.Relation.ParentDataSource">
            <summary>
            Gets or sets the parent datasource.
            </summary>
        </member>
        <member name="P:FastReport.Data.Relation.ChildDataSource">
            <summary>
            Gets or sets the child datasource.
            </summary>
        </member>
        <member name="P:FastReport.Data.Relation.ParentColumns">
            <summary>
            Gets or sets an array of parent datasource columns.
            </summary>
            <remarks>
            Note: both <see cref="P:FastReport.Data.Relation.ParentColumns"/> and <see cref="P:FastReport.Data.Relation.ChildColumns"/> must have the
            same number of elements.
            </remarks>
        </member>
        <member name="P:FastReport.Data.Relation.ChildColumns">
            <summary>
            Gets or sets an array of child datasource columns.
            </summary>
            <remarks>
            Note: both <see cref="P:FastReport.Data.Relation.ParentColumns"/> and <see cref="P:FastReport.Data.Relation.ChildColumns"/> must have the
            same number of elements.
            </remarks>
        </member>
        <member name="M:FastReport.Data.Relation.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Relation.Equals(FastReport.Data.Relation)">
            <summary>
            Compares this relation with another one.
            </summary>
            <param name="rel">Another relation to compare with.</param>
            <returns><b>true</b> if both relations are equal; <b>false</b> otherwise.</returns>
        </member>
        <member name="M:FastReport.Data.Relation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.Relation"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Data.RelationCollection">
            <summary>
            Represents the collection of <see cref="T:FastReport.Data.Relation"/> objects.
            </summary>
        </member>
        <member name="P:FastReport.Data.RelationCollection.Item(System.Int32)">
            <summary>
            Gets or sets a relation.
            </summary>
            <param name="index">The index of a relation in this collection.</param>
            <returns>The relation with specified index.</returns>
        </member>
        <member name="M:FastReport.Data.RelationCollection.FindByName(System.String)">
            <summary>
            Finds a relation by its name.
            </summary>
            <param name="name">The name of a relation.</param>
            <returns>The <see cref="T:FastReport.Data.Relation"/> object if found; otherwise <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Data.RelationCollection.FindByAlias(System.String)">
            <summary>
            Finds a relation by its alias.
            </summary>
            <param name="alias">The alias of a relation.</param>
            <returns>The <see cref="T:FastReport.Data.Relation"/> object if found; otherwise <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Data.RelationCollection.FindEqual(FastReport.Data.Relation)">
            <summary>
            Finds a relation that is equal to specified one.
            </summary>
            <param name="rel">Another relation to compare with.</param>
            <returns>The <see cref="T:FastReport.Data.Relation"/> object if found; otherwise <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Data.RelationCollection.#ctor(FastReport.Base)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.RelationCollection"/> class with default settings.
            </summary>
            <param name="owner">The owner of this collection.</param>
        </member>
        <member name="T:FastReport.Data.SliceCubeSource">
            <summary>
            Represents a datasource based on <b>DataView</b> class.
            </summary>
            <remarks>
            This class is used to support FastReport.Net infrastructure, do not use it directly.
            If you want to use data from <b>DataView</b> object, call the 
            <see cref="M:FastReport.Report.RegisterData(System.Data.DataView,System.String)"/> method of the <b>Report</b>.
            </remarks>
        </member>
        <member name="T:FastReport.Data.SystemVariables">
            <summary>
            Represents the collection of system variables.
            </summary>
        </member>
        <member name="T:FastReport.Data.SystemVariable">
            <summary>
            Represents the base class for system variables.
            </summary>
        </member>
        <member name="P:FastReport.Data.SystemVariable.Expression">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Data.SystemVariable.Description">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="M:FastReport.Data.SystemVariable.CanContain(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.DateVariable">
            <summary>
            Returns date and time of the report's start.
            </summary>
        </member>
        <member name="P:FastReport.Data.DateVariable.Value">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.PageVariable">
            <summary>
            Returns current page number.
            </summary>
        </member>
        <member name="P:FastReport.Data.PageVariable.Value">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.TotalPagesVariable">
            <summary>
            Returns total number of pages in the report. To use this variable, you need 
            to enable the report's double pass.
            </summary>
        </member>
        <member name="P:FastReport.Data.TotalPagesVariable.Value">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.PageNVariable">
            <summary>
            Returns a string containing the current page number in a form "Page N".
            </summary>
        </member>
        <member name="P:FastReport.Data.PageNVariable.Value">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.PageNofMVariable">
            <summary>
            Returns a string containing the current page number and total pages in a form "Page N of M".
            To use this variable, you need to enable the report's double pass.
            </summary>
        </member>
        <member name="P:FastReport.Data.PageNofMVariable.Value">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.RowVariable">
            <summary>
            Returns data row number inside the group. This value is reset at the start of a new group. 
            </summary>
        </member>
        <member name="P:FastReport.Data.RowVariable.Value">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.AbsRowVariable">
            <summary>
            Returns absolute number of data row. This value is never reset at the start of a new group.
            </summary>
        </member>
        <member name="P:FastReport.Data.AbsRowVariable.Value">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.PageMacroVariable">
            <summary>
            Returns current page number.
            <para/>This variable is actually a macro. Its value is substituted when the component is viewed in 
            the preview window. That means you cannot use it in an expression.
            </summary>
        </member>
        <member name="P:FastReport.Data.PageMacroVariable.Value">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.TotalPagesMacroVariable">
            <summary>
            Returns the number of total pages in the report.
            <para/>This variable is actually a macro. Its value is substituted when the component is viewed in 
            the preview window. That means you cannot use it in an expression.
            </summary>
        </member>
        <member name="P:FastReport.Data.TotalPagesMacroVariable.Value">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.CopyNameMacroVariable">
            <summary>
            Returns the name of the printed copy.
            <para/>This variable is actually a macro. Its value is substituted when the component is viewed in 
            the preview window. That means you cannot use it in an expression.
            </summary>
        </member>
        <member name="P:FastReport.Data.CopyNameMacroVariable.Value">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.HierarchyLevelVariable">
            <summary>
            Returns a level of hierarchy in the hierarchical report.
            </summary>
        </member>
        <member name="P:FastReport.Data.HierarchyLevelVariable.Value">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.HierarchyRowNoVariable">
            <summary>
            Returns the row number like "1.2.1" in the hierarchical report.
            </summary>
        </member>
        <member name="P:FastReport.Data.HierarchyRowNoVariable.Value">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.TableCollection">
            <summary>
            Represents the collection of <see cref="T:FastReport.Data.TableDataSource"/> objects.
            </summary>
        </member>
        <member name="P:FastReport.Data.TableCollection.Item(System.Int32)">
            <summary>
            Gets or sets a data table.
            </summary>
            <param name="index">The index of a data table in this collection.</param>
            <returns>The data table with specified index.</returns>
        </member>
        <member name="M:FastReport.Data.TableCollection.#ctor(FastReport.Base)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.TableCollection"/> class with default settings.
            </summary>
            <param name="owner">The owner of this collection.</param>
        </member>
        <member name="T:FastReport.Data.TotalType">
            <summary>
            Specifies the total type.
            </summary>
        </member>
        <member name="F:FastReport.Data.TotalType.Sum">
            <summary>
            The total returns sum of values.
            </summary>
        </member>
        <member name="F:FastReport.Data.TotalType.Min">
            <summary>
            The total returns minimal value.
            </summary>
        </member>
        <member name="F:FastReport.Data.TotalType.Max">
            <summary>
            The total returns maximal value.
            </summary>
        </member>
        <member name="F:FastReport.Data.TotalType.Avg">
            <summary>
            The total returns average value.
            </summary>
        </member>
        <member name="F:FastReport.Data.TotalType.Count">
            <summary>
            The total returns number of values.
            </summary>
        </member>
        <member name="F:FastReport.Data.TotalType.CountDistinct">
            <summary>
            The total returns number of distinct values.
            </summary>
        </member>
        <member name="T:FastReport.Data.Total">
            <summary>
            Represents a total that is used to calculate aggregates such as Sum, Min, Max, Avg, Count.
            </summary>
        </member>
        <member name="P:FastReport.Data.Total.TotalType">
            <summary>
            Gets or sets the total type.
            </summary>
        </member>
        <member name="P:FastReport.Data.Total.Expression">
            <summary>
            Gets or sets the expression used to calculate the total.
            </summary>
        </member>
        <member name="P:FastReport.Data.Total.Evaluator">
            <summary>
            Gets or sets the evaluator databand.
            </summary>
            <remarks>
            The total will be calculated for each row of this band.
            </remarks>
        </member>
        <member name="P:FastReport.Data.Total.Resetter">
            <summary>
            This property is kept for compatibility only.
            </summary>
        </member>
        <member name="P:FastReport.Data.Total.PrintOn">
            <summary>
            Gets or sets the band to print the total on.
            </summary>
            <remarks>
            The total will be resetted after the specified band has been printed.
            </remarks>
        </member>
        <member name="P:FastReport.Data.Total.ResetAfterPrint">
            <summary>
            Gets or sets a value that determines whether the total should be resetted after print.
            </summary>
        </member>
        <member name="P:FastReport.Data.Total.ResetOnReprint">
            <summary>
            Gets or sets a value that determines whether the total should be resetted if printed 
            on repeated band (i.e. band with "RepeatOnEveryPage" flag).
            </summary>
        </member>
        <member name="P:FastReport.Data.Total.EvaluateCondition">
            <summary>
            Gets or sets the condition which tells the total to evaluate.
            </summary>
        </member>
        <member name="P:FastReport.Data.Total.IncludeInvisibleRows">
            <summary>
            Gets or sets a value that determines if invisible rows of the <b>Evaluator</b> should
            be included into the total's value.
            </summary>
        </member>
        <member name="P:FastReport.Data.Total.Restrictions">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Data.Total.Value">
            <summary>
            Gets the value of total.
            </summary>
        </member>
        <member name="M:FastReport.Data.Total.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Total.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Total.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Total.Clear">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Total.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.Total"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Data.TotalCollection">
            <summary>
            Represents the collection of <see cref="T:FastReport.Data.Total"/> objects.
            </summary>
        </member>
        <member name="P:FastReport.Data.TotalCollection.Item(System.Int32)">
            <summary>
            Gets or sets a total.
            </summary>
            <param name="index">The index of a total in this collection.</param>
            <returns>The total with specified index.</returns>
        </member>
        <member name="M:FastReport.Data.TotalCollection.FindByName(System.String)">
            <summary>
            Finds a total by its name.
            </summary>
            <param name="name">The name of a total.</param>
            <returns>The <see cref="T:FastReport.Data.Total"/> object if found; otherwise <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Data.TotalCollection.CreateUniqueName(System.String)">
            <summary>
            Returns an unique total name based on given name.
            </summary>
            <param name="name">The base name.</param>
            <returns>The unique name.</returns>
        </member>
        <member name="M:FastReport.Data.TotalCollection.#ctor(FastReport.Base)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.TotalCollection"/> class with default settings.
            </summary>
            <param name="owner">The owner of this collection.</param>
        </member>
        <member name="T:FastReport.Data.ViewDataSource">
            <summary>
            Represents a datasource based on <b>DataView</b> class.
            </summary>
            <remarks>
            This class is used to support FastReport.Net infrastructure, do not use it directly.
            If you want to use data from <b>DataView</b> object, call the 
            <see cref="M:FastReport.Report.RegisterData(System.Data.DataView,System.String)"/> method of the <b>Report</b>.
            </remarks>
        </member>
        <member name="P:FastReport.Data.ViewDataSource.View">
            <summary>
            Gets the underlying <b>DataView</b> object.
            </summary>
        </member>
        <member name="M:FastReport.Data.ViewDataSource.GetValue(FastReport.Data.Column)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.ViewDataSource.InitSchema">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.ViewDataSource.LoadData(System.Collections.ArrayList)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.VirtualDataSource.GetValue(FastReport.Data.Column)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.XmlConnectionStringBuilder">
            <summary>
            Represents the XmlDataConnection connection string builder.
            </summary>
            <remarks>
            Use this class to parse connection string returned by the <b>XmlDataConnection</b> class.
            </remarks>
        </member>
        <member name="P:FastReport.Data.XmlConnectionStringBuilder.XmlFile">
            <summary>
            Gets or sets the path to .xml file.
            </summary>
        </member>
        <member name="P:FastReport.Data.XmlConnectionStringBuilder.XsdFile">
            <summary>
            Gets or sets the path to .xsd file.
            </summary>
        </member>
        <member name="M:FastReport.Data.XmlConnectionStringBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.XmlConnectionStringBuilder"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.Data.XmlConnectionStringBuilder.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.XmlConnectionStringBuilder"/> class with 
            specified connection string.
            </summary>
            <param name="connectionString">The connection string.</param>
        </member>
        <member name="T:FastReport.Data.XmlDataConnection">
            <summary>
            Represents a connection to xml file-based database.
            </summary>
            <example>This example shows how to add a new connection to the report.
            <code>
            Report report1;
            XmlDataConnection conn = new XmlDataConnection();
            conn.XmlFile = @"c:\data.xml";
            report1.Dictionary.Connections.Add(conn);
            conn.CreateAllTables();
            </code>
            </example>
        </member>
        <member name="P:FastReport.Data.XmlDataConnection.XsdFile">
            <summary>
            Gets or sets the path to .xsd file.
            </summary>
        </member>
        <member name="P:FastReport.Data.XmlDataConnection.XmlFile">
            <summary>
            Gets or sets the path to .xml file.
            </summary>
        </member>
        <member name="M:FastReport.Data.XmlDataConnection.CreateDataSet">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.XmlDataConnection.SetConnectionString(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.XmlDataConnection.FillTableSchema(System.Data.DataTable,System.String,FastReport.Data.CommandParameterCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.XmlDataConnection.FillTableData(System.Data.DataTable,System.String,FastReport.Data.CommandParameterCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.XmlDataConnection.GetTableNames">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.XmlDataConnection.CreateTable(FastReport.Data.TableDataSource)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.XmlDataConnection.DeleteTable(FastReport.Data.TableDataSource)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.XmlDataConnection.QuoteIdentifier(System.String,System.Data.Common.DbConnection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.XmlDataConnection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.XmlDataConnection"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Engine.ReportEngine">
            <summary>
            Represents the report engine.
            </summary>
        </member>
        <member name="M:FastReport.Engine.ReportEngine.ShowBand(FastReport.BandBase)">
            <summary>
            Shows band at the current position.
            </summary>
            <param name="band">Band to show.</param>
            <remarks>
            After the band is shown, the current position is advanced by the band's height.
            </remarks>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.CurX">
            <summary>
            Gets or sets the current X offset.
            </summary>
            <remarks>
            This property specifies the X offset where the current band will be printed.
            </remarks>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.CurY">
            <summary>
            Gets or sets the current Y offset.
            </summary>
            <remarks>
            This property specifies the Y offset where the current band will be printed.
            After the band is printed, this value is incremented by the band's height.
            </remarks>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.CurColumn">
            <summary>
            Gets the index of currently printing column in the multi-column report.
            </summary>
            <remarks>
            This value is 0-based.
            </remarks>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.CurPage">
            <summary>
            Gets or sets index of current prepared page the current band will print on.
            </summary>
            <remarks>
            Note: the page with specified index must exists. This property is used to print side-by-side
            subreports and Table object. Usually you don't need to use it.
            </remarks>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.PageWidth">
            <summary>
            Gets the current page width, in pixels.
            </summary>
            <remarks>
            This property returns a paper width minus left and right margins.
            </remarks>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.PageHeight">
            <summary>
            Gets the current page height, in pixels.
            </summary>
            <remarks>
            This property returns a paper height minus top and bottom margins.
            </remarks>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.UnlimitedHeight">
            <summary>
            Gets the value indicating whether the page has unlimited height.
            </summary>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.UnlimitedWidth">
            <summary>
            Gets the value indicating whether the page has unlimited width.
            </summary>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.UnlimitedHeightValue">
            <summary>
            Gets or sets the current height of unlimited page.
            </summary>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.UnlimitedWidthValue">
            <summary>
            Gets or sets the current width of unlimited page.
            </summary>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.PageFooterHeight">
            <summary>
            Gets the height of page footer (including all its child bands), in pixels.
            </summary>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.ColumnFooterHeight">
            <summary>
            Gets the height of column footer (including all its child bands), in pixels.
            </summary>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.FreeSpace">
            <summary>
            Gets the free space on the current page, in pixels.
            </summary>
            <remarks>
            This property returns the page height minus footers height minus <b>CurY</b> value.
            </remarks>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.PageNo">
            <summary>
            Gets the current prepared page number.
            </summary>
            <remarks>
            This value is 1-based. The initial value (usually 1) is set in the Report.InitialPageNumber property.
            </remarks>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.TotalPages">
            <summary>
            Gets the number of total pages in a prepared report.
            </summary>
            <remarks>
            To use this property, your report must be two-pass. Set the <see cref="P:FastReport.Report.DoublePass"/>
            property to <b>true</b>.
            </remarks>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.PageN">
            <summary>
            Gets the string that represents the current page number.
            </summary>
            <remarks>
            This property returns a locale-based value, for example: "Page 1".
            </remarks>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.PageNofM">
            <summary>
            Gets the string that represents the "Page N of M" number.
            </summary>
            <remarks>
            This property returns a locale-based value, for example: "Page 1 of 10".
            </remarks>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.RowNo">
            <summary>
            Gets the current row number of currently printing band.
            </summary>
            <remarks>
            This value is 1-based. It resets to 1 on each new group.
            </remarks>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.AbsRowNo">
            <summary>
            Gets the running current row number of currently printing band.
            </summary>
            <remarks>
            This value is 1-based.
            </remarks>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.Date">
            <summary>
            Gets the date of report start.
            </summary>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.FinalPass">
            <summary>
            Gets a value indicating whether the report is executing the final pass.
            </summary>
            <remarks>
            This property is <b>true</b> if report is one-pass, or if report is two-pass and
            the second pass is executing.
            </remarks>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.FirstPass">
            <summary>
            Gets a value indicating whether the report is executing the first pass.
            </summary>
            <remarks>
            This property is <b>true</b> if report is one-pass, or if report is two-pass and
            the first pass is executing.
            </remarks>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.HierarchyLevel">
            <summary>
            Gets a level of hierarchy when printing hierarchical bands.
            </summary>
            <remarks>
            The first level of hierarchy has 0 index.
            </remarks>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.HierarchyRowNo">
            <summary>
            Gets the row number like "1.2.1" when printing hierarchical bands.
            </summary>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.IsKeeping">
            <summary>
            Returns true of keeping is enabled
            </summary>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.KeepCurY">
            <summary>
            Returns keeping position
            </summary>
        </member>
        <member name="M:FastReport.Engine.ReportEngine.StartKeep">
            <summary>
            Starts the keep mechanism.
            </summary>
            <remarks>
            Use this method along with the <see cref="M:FastReport.Engine.ReportEngine.EndKeep"/> method if you want to keep
            several bands together. Call <b>StartKeep</b> method before printing the first band
            you want to keep, then call the <b>EndKeep</b> method after printing the last band you want to keep.
            </remarks>
        </member>
        <member name="M:FastReport.Engine.ReportEngine.EndKeep">
            <summary>
            Ends the keep mechanism.
            </summary>
            <remarks>
            Use this method along with the <see cref="M:FastReport.Engine.ReportEngine.StartKeep"/> method if you want to keep
            several bands together. Call <b>StartKeep</b> method before printing the first band
            you want to keep, then call the <b>EndKeep</b> method after printing the last band you want to keep.
            </remarks>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.OutlineXml">
            <summary>
            Gets xml containing outline nodes.
            </summary>
        </member>
        <member name="M:FastReport.Engine.ReportEngine.AddOutline(System.String)">
            <summary>
            Creates a new outline element with specified text.
            </summary>
            <param name="text">Text of element.</param>
            <remarks>
            After you call this method, the element will be added to the current position in the outline.
            The next call to <b>AddOutline</b> will add new element as a child of this element.
            To shift the position, use the <see cref="M:FastReport.Engine.ReportEngine.OutlineRoot"/> or
            <see cref="M:FastReport.Engine.ReportEngine.OutlineUp">OutlineUp</see> methods.
            </remarks>
        </member>
        <member name="M:FastReport.Engine.ReportEngine.OutlineRoot">
            <summary>
            Sets the current outline position to root.
            </summary>
        </member>
        <member name="M:FastReport.Engine.ReportEngine.OutlineUp">
            <summary>
            Shifts the current outline position one level up.
            </summary>
        </member>
        <member name="M:FastReport.Engine.ReportEngine.AddBookmark(System.String)">
            <summary>
            Creates a new bookmark with specified name at current position.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:FastReport.Engine.ReportEngine.GetBookmarkPage(System.String)">
            <summary>
            Gets a page number for the specified bookmark name.
            </summary>
            <param name="name">Name of bookmark.</param>
            <returns>Page number if bookmark with such name found; 0 otherwise.</returns>
            <remarks>
            Use this method to print the table of contents in your report. Normally it can be done
            using bookmarks.
            <note type="caution">
            You must set your report to double pass to use this method.
            </note>
            </remarks>
        </member>
        <member name="M:FastReport.Engine.ReportEngine.ResetLogicalPageNumber">
            <summary>
            Resets the logical page numbers.
            </summary>
        </member>
        <member name="M:FastReport.Engine.ReportEngine.ShiftLastPage">
            <summary>
            Called when the number of pages increased during DoublePass
            </summary>
        </member>
        <member name="M:FastReport.Engine.ReportEngine.StartNewPage">
            <summary>
            Starts a new page.
            </summary>
        </member>
        <member name="M:FastReport.Engine.ReportEngine.StartNewColumn">
            <summary>
            Starts a new column.
            </summary>
        </member>
        <member name="M:FastReport.Engine.ReportEngine.ProcessObject(FastReport.TextObjectBase)">
            <summary>
            Processes the specified text object which <b>ProcessAt</b> property is set to <b>Custom</b>.
            </summary>
            <param name="obj">The text object to process.</param>
        </member>
        <member name="T:FastReport.Export.ExportBase">
            <summary>
            The base class for all export filters.
            </summary>
        </member>
        <member name="P:FastReport.Export.ExportBase.GeneratedStreams">
            <summary>
            Gets list of generated streams.
            </summary>
        </member>
        <member name="P:FastReport.Export.ExportBase.Zoom">
            <summary>
            Zoom factor for output file
            </summary>
        </member>
        <member name="P:FastReport.Export.ExportBase.FileFilter">
            <summary>
            File filter that can be used in the "Save file" dialog.
            </summary>
        </member>
        <member name="P:FastReport.Export.ExportBase.PageRange">
            <summary>
            Range of pages to export.
            </summary>
        </member>
        <member name="P:FastReport.Export.ExportBase.PageNumbers">
            <summary>
            Page numbers to export.
            </summary>
            <remarks>
            Use page numbers separated by comma and/or page ranges, for example: "1,3-5,12". Empty string means 
            that all pages need to be exported.
            </remarks>
        </member>
        <member name="P:FastReport.Export.ExportBase.CurPage">
            <summary>
            Current page number.
            </summary>
            <remarks>
            Page number need to be exported if user selects "Current page" radiobutton in the export options dialog.
            This property is typically set to current page number in the preview window.
            </remarks>
        </member>
        <member name="P:FastReport.Export.ExportBase.OpenAfterExport">
            <summary>
            Open the document after export.
            </summary>
        </member>
        <member name="P:FastReport.Export.ExportBase.AllowOpenAfter">
            <summary>
            Allows or disables the OpenAfterExport feature.
            </summary>
        </member>
        <member name="P:FastReport.Export.ExportBase.ShowProgress">
            <summary>
            Gets or sets a value that determines whether to show progress window during export or not.
            </summary>
        </member>
        <member name="P:FastReport.Export.ExportBase.GeneratedFiles">
            <summary>
            Gets a list of files generated by this export.
            </summary>
        </member>
        <member name="P:FastReport.Export.ExportBase.HasMultipleFiles">
            <summary>
            Gets a value indicating that the export may produce multiple output files.
            </summary>
        </member>
        <member name="P:FastReport.Export.ExportBase.ShiftNonExportable">
            <summary>
            Gets or sets a value indicating that the report bands should be shifted, if page 
            has any non-exportable bands
            </summary>
        </member>
        <member name="P:FastReport.Export.ExportBase.SaveInitialDirectory">
            <summary>
            Gets or sets the initial directory that is displayed by a save file dialog.
            </summary>
        </member>
        <member name="P:FastReport.Export.ExportBase.Stream">
            <summary>
            Stream to export to.
            </summary>
        </member>
        <member name="P:FastReport.Export.ExportBase.FileName">
            <summary>
            File name to export to.
            </summary>
        </member>
        <member name="P:FastReport.Export.ExportBase.Pages">
            <summary>
            Array of page numbers to export.
            </summary>
        </member>
        <member name="M:FastReport.Export.ExportBase.GetFileFilter">
            <summary>
            Returns a file filter for a save dialog.
            </summary>
            <returns>String that contains a file filter, for example: "Bitmap image (*.bmp)|*.bmp"</returns>
        </member>
        <member name="M:FastReport.Export.ExportBase.Start">
            <summary>
            This method is called when the export starts.
            </summary>
        </member>
        <member name="M:FastReport.Export.ExportBase.ExportPageBegin(FastReport.ReportPage)">
            <summary>
            This method is called at the start of exports of each page.
            </summary>
            <param name="page">Page for export may be empty in this method.</param>
        </member>
        <member name="M:FastReport.Export.ExportBase.ExportPageEnd(FastReport.ReportPage)">
            <summary>
            This method is called at the end of exports of each page.
            </summary>
            <param name="page">Page for export may be empty in this method.</param>
        </member>
        <member name="M:FastReport.Export.ExportBase.ExportBand(FastReport.BandBase)">
            <summary>
            This method is called for each band on exported page.
            </summary>
            <param name="band">Band, dispose after method compite.</param>
        </member>
        <member name="M:FastReport.Export.ExportBase.Finish">
            <summary>
            This method is called when the export is finished.
            </summary>
        </member>
        <member name="M:FastReport.Export.ExportBase.GetPage(System.Int32)">
            <summary>
            Gets a report page with specified index.
            </summary>
            <param name="index">Zero-based index of page.</param>
            <returns>The prepared report page.</returns>
        </member>
        <member name="M:FastReport.Export.ExportBase.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.ExportBase.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.ExportBase.Export(FastReport.Report,System.IO.Stream)">
            <summary>
            Exports the report to a stream.
            </summary>
            <param name="report">Report to export.</param>
            <param name="stream">Stream to export to.</param>
            <remarks>
            This method does not show an export options dialog. If you want to show it, call <see cref="!:ShowDialog"/>
            method prior to calling this method, or use the "Export(Report report)" method instead.
            </remarks>
        </member>
        <member name="M:FastReport.Export.ExportBase.Export(FastReport.Report,System.String)">
            <summary>
            Exports the report to a file.
            </summary>
            <param name="report">Report to export.</param>
            <param name="fileName">File name to export to.</param>
            <remarks>
            This method does not show an export options dialog. If you want to show it, call <see cref="!:ShowDialog"/>
            method prior to calling this method, or use the "Export(Report report)" method instead.
            </remarks>
        </member>
        <member name="M:FastReport.Export.ExportBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Export.ExportBase"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Export.Html.HTMLExport">
            <summary>
            Represents the HTML export filter.
            </summary>
        </member>
        <member name="M:FastReport.Export.Html.HTMLExport.ExportBand(FastReport.BandBase)">
            <inheritdoc/>
        </member>
        <member name="E:FastReport.Export.Html.HTMLExport.CustomDraw">
            <summary>
            Draw any custom controls
            </summary>
        </member>
        <member name="M:FastReport.Export.Html.HTMLExport.OnCustomDraw(FastReport.Export.Html.CustomDrawEventArgs)">
            <summary>
            Draw any custom controls.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:FastReport.Export.Html.HTMLExport.ExportType">
            <summary>
            Types of html export
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.HTMLExport.ExportType.Export">
            <summary>
            Simple export
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.HTMLExport.ExportType.WebPreview">
            <summary>
            Web preview mode
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.HTMLExport.ExportType.WebPrint">
            <summary>
            Web print mode
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.HTMLExport.embeddedImages">
            <summary>
            hash:base64Image
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.EmbeddedImages">
            <summary>
            Gets or sets images, embedded in html (hash:base64Image)
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.ReportID">
            <summary>
            Sets a ID of report
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.OnClickTemplate">
            <summary>
            Sets an onclick template
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.Layers">
            <summary>
            Enable or disable layers export mode
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.StylePrefix">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.WebImagePrefix">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.WebImageSuffix">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.Count">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.PreparedPages">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.Print">
            <summary>
            Enable or disable showing of print dialog in browser when html document is opened
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.HighQualitySVG">
            <summary>
            Enable or disable a picture optimization.
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.Preview">
            <summary>
            Enable or disable preview in Web settings
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.PageBreaks">
            <summary>
            Enable or disable the breaks between pages in print preview when single page mode is enabled
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.Format">
            <summary>
            Specifies the output format
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.WidthUnits">
            <summary>
            Specifies the width units in HTML export
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.HeightUnits">
            <summary>
            Specifies the height units in HTML export
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.Pictures">
            <summary>
            Enable or disable the pictures in HTML export
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.EmbedPictures">
            <summary>
            Enable or disable embedding pictures in HTML export
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.WebMode">
            <summary>
            Enable or disable the WEB mode in HTML export
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.ExportMode">
            <summary>
            Gets or sets html export mode
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.SinglePage">
            <summary>
            Enable or disable the single HTML page creation
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.Navigator">
            <summary>
            Enable or disable the page navigator in html export
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.SubFolder">
            <summary>
            Enable or disable the sub-folder for files of export
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.Wysiwyg">
            <summary>
             Gets or sets the Wysiwyg quality of export
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.ImageFormat">
            <summary>
            Gets or sets the image format.
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.PrintPageData">
            <summary>
            Gets print page data
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.SaveStreams">
            <summary>
            Enable or disable saving streams in GeneratedStreams collection.
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.EnableMargins">
            <summary>
            Enable or disable margins for pages. Works only for Layers-mode.
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.EnableVectorObjects">
            <summary>
            Enable or disable export of vector objects such as Barcodes in SVG format.
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.NotRotateLandscapePage">
            <summary>
            Not rotate landscape page when print.
            </summary>
        </member>
        <member name="M:FastReport.Export.Html.HTMLExport.GetFileFilter">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Html.HTMLExport.Start">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Html.HTMLExport.ExportPageBegin(FastReport.ReportPage)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Html.HTMLExport.ExportPageEnd(FastReport.ReportPage)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Html.HTMLExport.ProcessPageBegin(System.Int32,System.Int32,FastReport.ReportPage)">
            <summary>
            Process Page with number p and real page ReportPage
            </summary>
            <param name="p"></param>
            <param name="ReportPage"></param>
            <param name="page"></param>
        </member>
        <member name="M:FastReport.Export.Html.HTMLExport.ProcessPageEnd(System.Int32,System.Int32)">
            <summary>
            Process Page with number p and real page ReportPage
            </summary>
            <param name="p"></param>
            <param name="ReportPage"></param>
        </member>
        <member name="M:FastReport.Export.Html.HTMLExport.Finish">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Html.HTMLExport.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Html.HTMLExport.Init_WebMode">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Export.Html.HTMLExport.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Export.Html.HTMLExport"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Export.Html.HTMLExport.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Export.Html.HTMLExport"/> class for WebPreview mode.
            </summary>
        </member>
        <member name="T:FastReport.Export.Html.CustomDrawEventArgs">
            <summary>
            Event arguments for custom drawing of report objects.
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.CustomDrawEventArgs.report">
            <summary>
            Report object
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.CustomDrawEventArgs.reportObject">
            <summary>
            ReportObject.
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.CustomDrawEventArgs.done">
            <summary>
            Resulting successfull drawing flag.
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.CustomDrawEventArgs.html">
            <summary>
            Resulting HTML string.
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.CustomDrawEventArgs.css">
            <summary>
            Resulting CSS string.
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.CustomDrawEventArgs.layers">
            <summary>
            Layers mode when true or Table mode when false.
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.CustomDrawEventArgs.zoom">
            <summary>
            Zoom value for scale position and sizes.
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.CustomDrawEventArgs.left">
            <summary>
            Left position.
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.CustomDrawEventArgs.top">
            <summary>
            Top position.
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.CustomDrawEventArgs.width">
            <summary>
            Width of object.
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.CustomDrawEventArgs.height">
            <summary>
            Height of object.
            </summary>
        </member>
        <member name="T:FastReport.Export.Html.HtmlTemplates">
            <summary>
            Represents the HTML export templates.
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HtmlTemplates.PageTemplateTitle">
            <summary>
            Page Template Title
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HtmlTemplates.PageTemplateFooter">
            <summary>
            Page Template Footer
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HtmlTemplates.NavigatorTemplate">
            <summary>
            Navigator Template
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HtmlTemplates.OutlineTemplate">
            <summary>
            OutlineTemplate
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HtmlTemplates.IndexTemplate">
            <summary>
            Index Template
            </summary>
        </member>
        <member name="M:FastReport.Export.Html.HtmlTemplates.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Export.Html.HtmlTemplates"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Export.Html.HTMLExportFormat">
            <summary>
            Represents the HTML export format enum
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.HTMLExportFormat.MessageHTML">
            <summary>
            Represents the message-HTML type
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.HTMLExportFormat.HTML">
            <summary>
            Represents the HTML type
            </summary>
        </member>
        <member name="T:FastReport.Export.Html.ImageFormat">
            <summary>
            Specifies the image format in HTML export.
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.ImageFormat.Bmp">
            <summary>
            Specifies the .bmp format.
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.ImageFormat.Png">
            <summary>
            Specifies the .png format.
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.ImageFormat.Jpeg">
            <summary>
            Specifies the .jpg format.
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.ImageFormat.Gif">
            <summary>
            Specifies the .gif format.
            </summary>
        </member>
        <member name="T:FastReport.Export.Html.HtmlSizeUnits">
            <summary>
            Specifies the units of HTML sizes.
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.HtmlSizeUnits.Pixel">
            <summary>
            Specifies the pixel units.
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.HtmlSizeUnits.Percent">
            <summary>
            Specifies the percent units.
            </summary>
        </member>
        <member name="T:FastReport.Export.Html.HTMLPageData">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLPageData.Width">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLPageData.Height">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLPageData.CSSText">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLPageData.PageText">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLPageData.Pictures">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLPageData.Guids">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLPageData.PageEvent">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLPageData.PageNumber">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Export.Html.HTMLPageData.#ctor">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:FastReport.Export.ExportUtils">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Export.ExportUtils.GetPageWidth(FastReport.ReportPage)">
            <summary>
            Gets current page width.
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Export.ExportUtils.GetPageHeight(FastReport.ReportPage)">
            <summary>
            Gets current page height.
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Export.ExportUtils.HtmlURL(System.String)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Export.ExportUtils.IndexToName(System.Int32)">
            <summary>
            Convert index to Excel column name.
            </summary>
            <param name="index"> Index of column</param>
            <returns> Column name</returns>
        </member>
        <member name="T:FastReport.Export.Image.ImageExportFormat">
            <summary>
            Specifies the image export format.
            </summary>
        </member>
        <member name="F:FastReport.Export.Image.ImageExportFormat.Bmp">
            <summary>
            Specifies the .bmp format.
            </summary>
        </member>
        <member name="F:FastReport.Export.Image.ImageExportFormat.Png">
            <summary>
            Specifies the .png format.
            </summary>
        </member>
        <member name="F:FastReport.Export.Image.ImageExportFormat.Jpeg">
            <summary>
            Specifies the .jpg format.
            </summary>
        </member>
        <member name="F:FastReport.Export.Image.ImageExportFormat.Gif">
            <summary>
            Specifies the .gif format.
            </summary>
        </member>
        <member name="F:FastReport.Export.Image.ImageExportFormat.Tiff">
            <summary>
            Specifies the .tif format.
            </summary>
        </member>
        <member name="F:FastReport.Export.Image.ImageExportFormat.Metafile">
            <summary>
            Specifies the .emf format.
            </summary>
        </member>
        <member name="T:FastReport.Export.Image.ImageExport">
            <summary>
            Represents the image export filter.
            </summary>
        </member>
        <member name="P:FastReport.Export.Image.ImageExport.ImageFormat">
            <summary>
            Gets or sets the image format.
            </summary>
        </member>
        <member name="P:FastReport.Export.Image.ImageExport.SeparateFiles">
            <summary>
            Gets or sets a value that determines whether to generate separate image file 
            for each exported page.
            </summary>
            <remarks>
            If this property is set to <b>false</b>, the export filter will produce one big image
            containing all exported pages. Be careful using this property with a big report
            because it may produce out of memory error.
            </remarks>
        </member>
        <member name="P:FastReport.Export.Image.ImageExport.Resolution">
            <summary>
            Gets or sets image resolution, in dpi.
            </summary>
            <remarks>
            By default this property is set to 96 dpi. Use bigger values (300-600 dpi)
            if you going to print the exported images.
            </remarks>
        </member>
        <member name="P:FastReport.Export.Image.ImageExport.ResolutionX">
            <summary>
            Gets or sets horizontal image resolution, in dpi.
            </summary>
            <remarks>
            Separate horizontal and vertical resolution is used when exporting to TIFF. In other
            cases, use the <see cref="P:FastReport.Export.Image.ImageExport.Resolution"/> property instead.
            </remarks>
        </member>
        <member name="P:FastReport.Export.Image.ImageExport.ResolutionY">
            <summary>
            Gets or sets vertical image resolution, in dpi.
            </summary>
            <remarks>
            Separate horizontal and vertical resolution is used when exporting to TIFF. In other
            cases, use the <see cref="P:FastReport.Export.Image.ImageExport.Resolution"/> property instead.
            </remarks>
        </member>
        <member name="P:FastReport.Export.Image.ImageExport.JpegQuality">
            <summary>
            Gets or sets the jpg image quality.
            </summary>
            <remarks>
            This property is used if <see cref="P:FastReport.Export.Image.ImageExport.ImageFormat"/> is set to <b>Jpeg</b>. By default
            it is set to 100. Use lesser value to decrease the jpg file size.
            </remarks>
        </member>
        <member name="P:FastReport.Export.Image.ImageExport.MultiFrameTiff">
            <summary>
            Gets or sets the value determines whether to produce multi-frame tiff file.
            </summary>
        </member>
        <member name="P:FastReport.Export.Image.ImageExport.MonochromeTiff">
            <summary>
            Gets or sets a value that determines whether the Tiff export must produce monochrome image.
            </summary>
            <remarks>
            Monochrome tiff image is compressed using the compression method specified in the 
            <see cref="P:FastReport.Export.Image.ImageExport.MonochromeTiffCompression"/> property.
            </remarks>
        </member>
        <member name="P:FastReport.Export.Image.ImageExport.MonochromeTiffCompression">
            <summary>
            Gets or sets the compression method for a monochrome TIFF image.
            </summary>
            <remarks>
            This property is used only when exporting to TIFF image, and the <see cref="P:FastReport.Export.Image.ImageExport.MonochromeTiff"/> property
            is set to <b>true</b>. 
            <para/>The valid values for this property are: <b>EncoderValue.CompressionNone</b>, 
            <b>EncoderValue.CompressionLZW</b>, <b>EncoderValue.CompressionRle</b>, 
            <b>EncoderValue.CompressionCCITT3</b>, <b>EncoderValue.CompressionCCITT4</b>. 
            The default compression method is CCITT4.
            </remarks>
        </member>
        <member name="P:FastReport.Export.Image.ImageExport.PaddingNonSeparatePages">
            <summary>
            Sets padding in non separate pages
            </summary>
        </member>
        <member name="M:FastReport.Export.Image.ImageExport.GetFileFilter">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Image.ImageExport.Start">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Image.ImageExport.ExportPageBegin(FastReport.ReportPage)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Image.ImageExport.ExportBand(FastReport.BandBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Image.ImageExport.ExportPageEnd(FastReport.ReportPage)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Image.ImageExport.Finish">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Image.ImageExport.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Image.ImageExport.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Export.Image.ImageExport"/> class.
            </summary>
        </member>
        <member name="T:FastReport.HtmlObject">
            <summary>
            Represents the Text object that may display one or several text lines.
            </summary>
            <remarks>
            Specify the object's text in the <see cref="P:FastReport.TextObjectBase.Text">Text</see> property. 
            Text may contain expressions and data items, for example: "Today is [Date]". When report 
            is running, all expressions are calculated and replaced with actual values, so the text 
            would be "Today is 01.01.2008".
            <para/>The symbols used to find expressions in a text are set in the 
            <see cref="P:FastReport.TextObjectBase.Brackets">Brackets</see> property. You also may disable expressions 
            using the <see cref="P:FastReport.TextObjectBase.AllowExpressions">AllowExpressions</see> property.
            <para/>To format an expression value, use the <see cref="N:FastReport.Format"/> property.
            </remarks>
        </member>
        <member name="P:FastReport.HtmlObject.RightToLeft">
            <summary>
            Gets or sets a value that indicates whether the component should draw right-to-left for RTL languages.
            </summary>
        </member>
        <member name="M:FastReport.HtmlObject.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HtmlObject.DrawText(FastReport.Utils.FRPaintEventArgs)">
            <summary>
            Draws a text.
            </summary>
            <param name="e">Paint event data.</param>
        </member>
        <member name="M:FastReport.HtmlObject.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HtmlObject.ApplyStyle(FastReport.Style)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HtmlObject.SaveStyle">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HtmlObject.RestoreStyle">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HtmlObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HtmlObject.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HtmlObject.SaveState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HtmlObject.RestoreState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HtmlObject.CalcWidth">
            <summary>
            Calculates the object's width.
            </summary>
            <returns>The width, in pixels.</returns>
        </member>
        <member name="M:FastReport.HtmlObject.CalcHeight">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HtmlObject.GetData">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HtmlObject.Break(FastReport.BreakableComponent)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HtmlObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.HtmlObject"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Matrix.MatrixObject">
            <summary>
            Represents the matrix object that is used to print pivot table (also known as cross-tab).
            </summary>
            <remarks>
            The matrix consists of the following elements: columns, rows and data cells. Each element is
            represented by the <b>descriptor</b>. The <see cref="T:FastReport.Matrix.MatrixHeaderDescriptor"/> class is used
            for columns and rows; the <see cref="T:FastReport.Matrix.MatrixCellDescriptor"/> is used for data cells.
            The <see cref="P:FastReport.Matrix.MatrixObject.Data"/> property holds three collections of descriptors - <b>Columns</b>,
            <b>Rows</b> and <b>Cells</b>.
            <para/>To create the matrix in a code, you should perform the following actions:
            <list type="bullet">
              <item>
                <description>create an instance of the <b>MatrixObject</b> and add it to the report;</description>
              </item>
              <item>
                <description>create descriptors for columns, rows and cells and add it to the
                collections inside the <see cref="P:FastReport.Matrix.MatrixObject.Data"/> property;</description>
              </item>
              <item>
                <description>call the <see cref="M:FastReport.Matrix.MatrixObject.BuildTemplate"/> method to create the matrix template
                that will be used to create a result;</description>
              </item>
              <item>
                <description>modify the matrix template (change captions, set the visual appearance).</description>
              </item>
            </list>
            <para/>To connect the matrix to a datasource, use the <see cref="P:FastReport.Matrix.MatrixObject.DataSource"/> property. If
            this property is not set, the result matrix will be empty. In this case you may use 
            the <see cref="E:FastReport.Matrix.MatrixObject.ManualBuild"/> event handler to fill the matrix.
            </remarks>
            <example>This example demonstrates how to create a matrix in a code.
            <code>
            // create an instance of MatrixObject
            MatrixObject matrix = new MatrixObject();
            matrix.Name = "Matrix1";
            // add it to the report title band of the first report page
            matrix.Parent = (report.Pages[0] as ReportPage).ReportTitle;
            
            // create two column descriptors
            MatrixHeaderDescriptor column = new MatrixHeaderDescriptor("[MatrixDemo.Year]");
            matrix.Data.Columns.Add(column);
            column = new MatrixHeaderDescriptor("[MatrixDemo.Month]");
            matrix.Data.Columns.Add(column);
            
            // create one row descriptor
            MatrixHeaderDescriptor row = new MatrixHeaderDescriptor("[MatrixDemo.Name]");
            matrix.Data.Rows.Add(row);
            
            // create one data cell
            MatrixCellDescriptor cell = new MatrixCellDescriptor("[MatrixDemo.Revenue]", MatrixAggregateFunction.Sum);
            matrix.Data.Cells.Add(cell);
            
            // connect matrix to a datasource
            matrix.DataSource = Report.GetDataSource("MatrixDemo");
            
            // create the matrix template
            matrix.BuildTemplate();
            
            // change the style
            matrix.Style = "Green";
            
            // change the column and row total's text to "Grand Total"
            matrix.Data.Columns[0].TemplateTotalCell.Text = "Grand Total";
            matrix.Data.Rows[0].TemplateTotalCell.Text = "Grand Total";
            </code>
            </example>
        </member>
        <member name="E:FastReport.Matrix.MatrixObject.ManualBuild">
            <summary>
            Allows to fill the matrix in code.
            </summary>
            <remarks>
            In most cases the matrix is connected to a datasource via the <see cref="P:FastReport.Matrix.MatrixObject.DataSource"/> 
            property. When you run a report, the matrix is filled with datasource values automatically.
            <para/>Using this event, you can put additional values to the matrix or even completely fill it
            with own values (if <see cref="P:FastReport.Matrix.MatrixObject.DataSource"/> is set to <b>null</b>. To do this, call the
            <b>Data.AddValue</b> method. See the <see cref="M:FastReport.Matrix.MatrixData.AddValue(System.Object[],System.Object[],System.Object[])"/>
            method for more details.
            </remarks>
            <example>This example shows how to fill a matrix with own values.
            <code>
            // suppose we have a matrix with one column, row and data cell.
            // provide 3 one-dimensional arrays with one element in each to the AddValue method
            Matrix1.Data.AddValue(
              new object[] { 1996 },
              new object[] { "Andrew Fuller" }, 
              new object[] { 123.45f });
            Matrix1.Data.AddValue(
              new object[] { 1997 },
              new object[] { "Andrew Fuller" }, 
              new object[] { 21.35f });
            Matrix1.Data.AddValue(
              new object[] { 1997 },
              new object[] { "Nancy Davolio" }, 
              new object[] { 421.5f });
            
            // this code will produce the following matrix:
            //               |  1996  |  1997  |
            // --------------+--------+--------+
            // Andrew Fuller |  123.45|   21.35|
            // --------------+--------+--------+
            // Nancy Davolio |        |  421.50|
            // --------------+--------+--------+
            </code>
            </example>
        </member>
        <member name="E:FastReport.Matrix.MatrixObject.ModifyResult">
            <summary>
            Allows to modify the prepared matrix elements such as cells, rows, columns.
            </summary>
        </member>
        <member name="E:FastReport.Matrix.MatrixObject.AfterTotals">
            <summary>
            Allows to modify the prepared matrix elements such as cells, rows, columns.
            </summary>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.AutoSize">
            <summary>
            Gets or sets a value that determines whether the matrix must calculate column/row sizes automatically.
            </summary>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.CellsSideBySide">
            <summary>
            Gets or sets a value that determines how to print multiple data cells.
            </summary>
            <remarks>
            This property can be used if matrix has two or more data cells. Default property value
            is <b>false</b> - that means the data cells will be stacked.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.KeepCellsSideBySide">
            <summary>
            Gets or sets a value indicating that the side-by-side cells must be kept together on the same page.
            </summary>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.DataSource">
            <summary>
            Gets or sets a data source.
            </summary>
            <remarks>
            When you create the matrix in the designer by drag-drop data columns into it,
            this property will be set automatically. However you need to set it if you create 
            the matrix in code.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.Filter">
            <summary>
            Gets the row filter expression.
            </summary>
            <remarks>
            This property can contain any valid boolean expression. If the expression returns <b>false</b>,
            the corresponding data row will be skipped.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.ShowTitle">
            <summary>
            Gets or sets a value indicating whether to show a title row.
            </summary>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.Style">
            <summary>
            Gets or sets a matrix style.
            </summary>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.MatrixEvenStylePriority">
            <summary>
            Gets or sets even style priority for matrix cells.
            </summary>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.SplitRows">
            <summary>
            Gets or sets need split rows.
            </summary>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.PrintIfEmpty">
            <summary>
            Gets or sets a value indicating that empty matrix should be printed.
            </summary>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.ManualBuildEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Matrix.MatrixObject.ManualBuild"/> event.
            </summary>
            <remarks>
            See the <see cref="E:FastReport.Matrix.MatrixObject.ManualBuild"/> event for more details.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.ModifyResultEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Matrix.MatrixObject.ModifyResult"/> event.
            </summary>
            <remarks>
            See the <see cref="E:FastReport.Matrix.MatrixObject.ModifyResult"/> event for more details.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.AfterTotalsEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Matrix.MatrixObject.AfterTotals"/> event.
            </summary>
            <remarks>
            See the <see cref="E:FastReport.Matrix.MatrixObject.AfterTotals"/> event for more details.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.Data">
            <summary>
            Gets the object that holds the collection of descriptors used
            to build a matrix.
            </summary>
            <remarks>
            See the <see cref="T:FastReport.Matrix.MatrixData"/> class for more details.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.ColumnValues">
            <summary>
            Gets or sets array of values that describes the currently printing column.
            </summary>
            <remarks>
            Use this property when report is running. It can be used to highlight matrix elements
            depending on values of the currently printing column. To do this:
            <list type="bullet">
              <item>
                <description>select the cell that you need to highlight;</description>
              </item>
              <item>
                <description>click the "Highlight" button on the "Text" toolbar;</description>
              </item>
              <item>
                <description>add a new highlight condition. Use the <b>Matrix.ColumnValues</b> to 
                refer to the value you need to analyze. Note: these values are arrays of <b>System.Object</b>, 
                so you need to cast it to actual type before making any comparisons. Example of highlight
                condition: <c>(int)Matrix1.ColumnValues[0] == 2000</c>.
                </description>
              </item>
            </list>
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.RowValues">
            <summary>
            Gets or sets array of values that describes the currently printing row.
            </summary>
            <remarks>
            Use this property when report is running. It can be used to highlight matrix elements
            depending on values of the currently printing row. To do this:
            <list type="bullet">
              <item>
                <description>select the cell that you need to highlight;</description>
              </item>
              <item>
                <description>click the "Highlight" button on the "Text" toolbar;</description>
              </item>
              <item>
                <description>add a new highlight condition. Use the <b>Matrix.RowValues</b> to 
                refer to the value you need to analyze. Note: these values are arrays of <b>System.Object</b>, 
                so you need to cast it to actual type before making any comparisons. Example of highlight
                condition: <c>(string)Matrix1.RowValues[0] == "Andrew Fuller"</c>.
                </description>
              </item>
            </list>
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.ColumnIndex">
            <summary>
            Gets or sets the index of currently printing column.
            </summary>
            <remarks>
            This property may be used to print even columns with alternate color. To do this:
            <list type="bullet">
              <item>
                <description>select the cell that you need to highlight;</description>
              </item>
              <item>
                <description>click the "Highlight" button on the "Text" toolbar;</description>
              </item>
              <item>
                <description>add a new highlight condition that uses the <b>Matrix.ColumnIndex</b>,
                for example: <c>Matrix1.ColumnIndex % 2 == 1</c>.
                </description>
              </item>
            </list>
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.RowIndex">
            <summary>
            Gets or sets the index of currently printing row.
            </summary>
            <remarks>
            This property may be used to print even rows with alternate color. To do this:
            <list type="bullet">
              <item>
                <description>select the cell that you need to highlight;</description>
              </item>
              <item>
                <description>click the "Highlight" button on the "Text" toolbar;</description>
              </item>
              <item>
                <description>add a new highlight condition that uses the <b>Matrix.RowIndex</b>,
                for example: <c>Matrix1.RowIndex % 2 == 1</c>.
                </description>
              </item>
            </list>
            </remarks>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.DeserializeSubItems(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.BuildTemplate">
            <summary>
            Creates or updates the matrix template.
            </summary>
            <remarks>
            Call this method after you modify the matrix descriptors using the <see cref="P:FastReport.Matrix.MatrixObject.Data"/>
            object's properties. 
            </remarks>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.InitializeComponent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.FinalizeComponent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.SaveState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.GetData">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.OnAfterData(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.RestoreState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.OnManualBuild(System.EventArgs)">
            <summary>
            This method fires the <b>ManualBuild</b> event and the script code connected to the <b>ManualBuildEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.OnModifyResult(System.EventArgs)">
            <summary>
            This method fires the <b>ModifyResult</b> event and the script code connected to the <b>ModifyResultEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.OnAfterTotals(System.EventArgs)">
            <summary>
            This method fires the <b>AfterTotals</b> event and the script code connected to the <b>AfterTotalsEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.AddValue(System.Object[],System.Object[],System.Object[])">
            <summary>
            Adds a value in the matrix.
            </summary>
            <param name="columnValues">Array of column values.</param>
            <param name="rowValues">Array of row values.</param>
            <param name="cellValues">Array of data values.</param>
            <remarks>
            This is a shortcut method to call the matrix <b>Data.AddValue</b>.
            See the <see cref="M:FastReport.Matrix.MatrixData.AddValue(System.Object[],System.Object[],System.Object[])"/> method for more details.
            </remarks>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.Value(System.Int32)">
            <summary>
            Gets the value of the data cell with the specified index.
            </summary>
            <param name="index">Zero-based index of the data cell.</param>
            <returns>The cell's value.</returns>
            <remarks>
            Use this method in the cell's expression if the cell has custom totals 
            (the total function is set to "Custom"). The example:
            <para/>Matrix1.Value(0) / Matrix1.Value(1)
            <para/>will return the result of dividing the first data cell's value by the second one.
            </remarks>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Matrix.MatrixObject"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Matrix.MatrixAggregateFunction">
            <summary>
            Specifies the aggregate function used in the <see cref="T:FastReport.Matrix.MatrixObject"/>.
            </summary>
        </member>
        <member name="F:FastReport.Matrix.MatrixAggregateFunction.None">
            <summary>
            No aggregates are used.
            </summary>
        </member>
        <member name="F:FastReport.Matrix.MatrixAggregateFunction.Sum">
            <summary>
            Specifies the sum of values.
            </summary>
        </member>
        <member name="F:FastReport.Matrix.MatrixAggregateFunction.Min">
            <summary>
            Specifies the minimum of values.
            </summary>
        </member>
        <member name="F:FastReport.Matrix.MatrixAggregateFunction.Max">
            <summary>
            Specifies the maximum of values.
            </summary>
        </member>
        <member name="F:FastReport.Matrix.MatrixAggregateFunction.Avg">
            <summary>
            Specifies the average of values.
            </summary>
        </member>
        <member name="F:FastReport.Matrix.MatrixAggregateFunction.Count">
            <summary>
            Specifies the count of values.
            </summary>
        </member>
        <member name="F:FastReport.Matrix.MatrixAggregateFunction.CountDistinct">
            <summary>
            Specifies the count of distinct values.
            </summary>
        </member>
        <member name="F:FastReport.Matrix.MatrixAggregateFunction.Custom">
            <summary>
            Specifies the custom function.
            </summary>
        </member>
        <member name="T:FastReport.Matrix.MatrixPercent">
            <summary>
            Determines how matrix percents are calculated.
            </summary>
        </member>
        <member name="F:FastReport.Matrix.MatrixPercent.None">
            <summary>
            Do not calculate percent value.
            </summary>
        </member>
        <member name="F:FastReport.Matrix.MatrixPercent.ColumnTotal">
            <summary>
            Calculate percent of the column total value.
            </summary>
        </member>
        <member name="F:FastReport.Matrix.MatrixPercent.RowTotal">
            <summary>
            Calculate percent of the row total value.
            </summary>
        </member>
        <member name="F:FastReport.Matrix.MatrixPercent.GrandTotal">
            <summary>
            Calculate percent of the grand total value.
            </summary>
        </member>
        <member name="T:FastReport.Matrix.MatrixCellDescriptor">
            <summary>
            The descriptor that is used to describe one matrix data cell.
            </summary>
            <remarks>
            The <see cref="T:FastReport.Matrix.MatrixCellDescriptor"/> class is used to define one data cell of the matrix.
            The key properties are <see cref="P:FastReport.Matrix.MatrixDescriptor.Expression"/> and <see cref="P:FastReport.Matrix.MatrixCellDescriptor.Function"/>. 
            To set visual appearance of the data cell, use the <see cref="P:FastReport.Matrix.MatrixDescriptor.TemplateCell"/> 
            property.
            <para/>The collection of descriptors used to represent the matrix data cells is stored
            in the <b>MatrixObject.Data.Cells</b> property.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixCellDescriptor.Function">
            <summary>
            Gets or sets an aggregate function used to calculate totals for this cell.
            </summary>
        </member>
        <member name="P:FastReport.Matrix.MatrixCellDescriptor.Percent">
            <summary>
            Gets or sets a value that determines how to calculate the percent value for this cell.
            </summary>
        </member>
        <member name="M:FastReport.Matrix.MatrixCellDescriptor.Assign(FastReport.Matrix.MatrixDescriptor)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixCellDescriptor.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixCellDescriptor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Matrix.MatrixCellDescriptor"/> class
            with default settings.
            </summary>
        </member>
        <member name="M:FastReport.Matrix.MatrixCellDescriptor.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Matrix.MatrixCellDescriptor"/> class
            with specified expression.
            </summary>
            <param name="expression">The descriptor's expression.</param>
        </member>
        <member name="M:FastReport.Matrix.MatrixCellDescriptor.#ctor(System.String,FastReport.Matrix.MatrixAggregateFunction)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Matrix.MatrixCellDescriptor"/> class
            with specified expression and aggregate function.
            </summary>
            <param name="expression">The descriptor's expression.</param>
            <param name="function">The aggregate function.</param>
        </member>
        <member name="M:FastReport.Matrix.MatrixCellDescriptor.#ctor(System.String,FastReport.Matrix.MatrixAggregateFunction,FastReport.Matrix.MatrixPercent)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Matrix.MatrixCellDescriptor"/> class
            with specified expression, aggregate function, and a percent.
            </summary>
            <param name="expression">The descriptor's expression.</param>
            <param name="function">The aggregate function.</param>
            <param name="percent">The percent setting.</param>
        </member>
        <member name="T:FastReport.Matrix.MatrixCells">
            <summary>
            Represents a collection of matrix data descriptors used in the <see cref="T:FastReport.Matrix.MatrixObject"/>.
            </summary>
        </member>
        <member name="P:FastReport.Matrix.MatrixCells.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">Index of an element.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:FastReport.Matrix.MatrixCells.AddRange(FastReport.Matrix.MatrixCellDescriptor[])">
            <summary>
            Adds the specified descriptors to the end of this collection.
            </summary>
            <param name="range">Array of descriptors to add.</param>
        </member>
        <member name="M:FastReport.Matrix.MatrixCells.Add(FastReport.Matrix.MatrixCellDescriptor)">
            <summary>
            Adds a descriptor to the end of this collection.
            </summary>
            <param name="value">Descriptor to add.</param>
            <returns>Index of the added descriptor.</returns>
        </member>
        <member name="M:FastReport.Matrix.MatrixCells.Insert(System.Int32,FastReport.Matrix.MatrixCellDescriptor)">
            <summary>
            Inserts a descriptor into this collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The descriptor to insert.</param>
        </member>
        <member name="M:FastReport.Matrix.MatrixCells.Remove(FastReport.Matrix.MatrixCellDescriptor)">
            <summary>
            Removes the specified descriptor from the collection.
            </summary>
            <param name="value">Descriptor to remove.</param>
        </member>
        <member name="M:FastReport.Matrix.MatrixCells.IndexOf(FastReport.Matrix.MatrixCellDescriptor)">
            <summary>
            Returns the zero-based index of the first occurrence of a descriptor.
            </summary>
            <param name="value">The descriptor to locate in the collection.</param>
            <returns>The zero-based index of the first occurrence of descriptor within 
            the entire collection, if found; otherwise, -1.</returns>
        </member>
        <member name="M:FastReport.Matrix.MatrixCells.Contains(FastReport.Matrix.MatrixCellDescriptor)">
            <summary>
            Determines whether a descriptor is in the collection.
            </summary>
            <param name="value">The descriptor to locate in the collection.</param>
            <returns><b>true</b> if descriptor is found in the collection; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:FastReport.Matrix.MatrixCells.ToArray">
            <summary>
            Copies the elements of this collection to a new array. 
            </summary>
            <returns>An array containing copies of this collection elements. </returns>
        </member>
        <member name="M:FastReport.Matrix.MatrixCells.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixCells.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Matrix.MatrixData">
            <summary>
            Contains a set of properties and methods to hold and manipulate the matrix descriptors.
            </summary>
            <remarks>
            This class contains three collections of descriptors such as <see cref="P:FastReport.Matrix.MatrixData.Columns"/>,
            <see cref="P:FastReport.Matrix.MatrixData.Rows"/> and <see cref="P:FastReport.Matrix.MatrixData.Cells"/>. Use collections' methods to add/remove
            descriptors. When you are done, call the <see cref="M:FastReport.Matrix.MatrixObject.BuildTemplate"/>
            method to refresh the matrix.
            <para/>To fill a matrix in code, use the <b>AddValue</b> method.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixData.Columns">
            <summary>
            Gets a collection of column descriptors.
            </summary>
            <remarks>
            Note: after you change something in this collection, call the 
            <see cref="M:FastReport.Matrix.MatrixObject.BuildTemplate"/> method to refresh the matrix.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixData.Rows">
            <summary>
            Gets a collection of row descriptors.
            </summary>
            <remarks>
            Note: after you change something in this collection, call the 
            <see cref="M:FastReport.Matrix.MatrixObject.BuildTemplate"/> method to refresh the matrix.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixData.Cells">
            <summary>
            Gets a collection of data cell descriptors.
            </summary>
            <remarks>
            Note: after you change something in this collection, call the 
            <see cref="M:FastReport.Matrix.MatrixObject.BuildTemplate"/> method to refresh the matrix.
            </remarks>
        </member>
        <member name="M:FastReport.Matrix.MatrixData.Clear">
            <summary>
            Clears all descriptors.
            </summary>
        </member>
        <member name="M:FastReport.Matrix.MatrixData.AddValue(System.Object[],System.Object[],System.Object[])">
            <summary>
            Adds a value in the matrix.
            </summary>
            <param name="columnValues">Array of column values.</param>
            <param name="rowValues">Array of row values.</param>
            <param name="cellValues">Array of data values.</param>
            <remarks>
            The number of elements in an array passed to this method must be the same as
            a number of descriptors in the appropriate collection. That is, if your matrix
            has one column, two row and one cell descriptors (in <b>Columns</b>, <b>Rows</b> and
            <b>Cells</b> collections respectively), you have to pass one-element array for the
            <b>columnValues</b> param, two-element array for the <b>rowValues</b> and one-element
            array for the <b>cellValues</b>.
            </remarks>
            <example>This example demonstrates how to fill a simple matrix that contains one column,
            row and cell.
            <code>
            MatrixObject matrix;
            matrix.Data.AddValue(
              new object[] { 1996 },
              new object[] { "Andrew Fuller" }, 
              new object[] { 123.45f });
            
            // this will produce the following result:
            //               |   1996   |
            // --------------+----------+
            // Andrew Fuller |    123.45|
            // --------------+----------+
            </code>
            </example>
        </member>
        <member name="M:FastReport.Matrix.MatrixData.AddValue(System.Object[],System.Object[],System.Object[],System.Int32)">
            <summary>
            Adds a value in the matrix.
            </summary>
            <param name="columnValues">Array of column values.</param>
            <param name="rowValues">Array of row values.</param>
            <param name="cellValues">Array of data values.</param>
            <param name="dataRowNo">Datasource row index.</param>
            <remarks>
            See the <see cref="M:FastReport.Matrix.MatrixData.AddValue(System.Object[],System.Object[],System.Object[])"/> method for more details.
            </remarks>
        </member>
        <member name="M:FastReport.Matrix.MatrixData.GetValue(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets a value with specified column, row and cell indicies.
            </summary>
            <param name="columnIndex">Index of a column.</param>
            <param name="rowIndex">Index of a row.</param>
            <param name="cellIndex">Index of a cell.</param>
            <returns>The value of a cell.</returns>
        </member>
        <member name="M:FastReport.Matrix.MatrixData.SetValue(System.Int32,System.Int32,System.Object)">
            <summary>
            Sets the cell's value.
            </summary>
            <param name="columnIndex">Index of a column.</param>
            <param name="rowIndex">Index of a row.</param>
            <param name="cellValue">The new value.</param>
        </member>
        <member name="T:FastReport.Matrix.MatrixDescriptor">
            <summary>
            The base class for matrix element descriptors such as <see cref="T:FastReport.Matrix.MatrixHeaderDescriptor"/> and
            <see cref="T:FastReport.Matrix.MatrixCellDescriptor"/>.
            </summary>
        </member>
        <member name="P:FastReport.Matrix.MatrixDescriptor.Expression">
            <summary>
            Gets or sets an expression which value will be used to fill the matrix.
            </summary>
            <remarks>
            <b>Expression</b> may be any valid expression. Usually it's a data column:
            <c>[DataSource.Column]</c>.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixDescriptor.TemplateColumn">
            <summary>
            Gets or sets the template column bound to this descriptor.
            </summary>
            <remarks>
            This property is for internal use; usually you don't need to use it.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixDescriptor.TemplateRow">
            <summary>
            Gets or sets the template row bound to this descriptor.
            </summary>
            <remarks>
            This property is for internal use; usually you don't need to use it.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixDescriptor.TemplateCell">
            <summary>
            Gets or sets the template cell bound to this descriptor.
            </summary>
            <remarks>
            Using this property, you may access the matrix cell which is bound to
            this descriptor. It may be useful to change the cell's appearance. 
            <note>
            Before using this property, you must initialize the matrix descriptors by
            calling the <see cref="M:FastReport.Matrix.MatrixObject.BuildTemplate"/> method.
            </note>
            </remarks>
            <example>
            <code>
            MatrixObject matrix;
            // change the fill color of the first matrix cell
            matrix.Data.Cells[0].TemplateCell.Fill = new SolidFill(Color.Red);
            </code>
            </example>
        </member>
        <member name="M:FastReport.Matrix.MatrixDescriptor.Assign(FastReport.Matrix.MatrixDescriptor)">
            <summary>
            Assigns values from another descriptor.
            </summary>
            <param name="source">Descriptor to assign values from.</param>
        </member>
        <member name="M:FastReport.Matrix.MatrixDescriptor.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixDescriptor.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Matrix.MatrixHeader">
            <summary>
            Represents a collection of matrix header descriptors used in the <see cref="T:FastReport.Matrix.MatrixObject"/>.
            </summary>
        </member>
        <member name="P:FastReport.Matrix.MatrixHeader.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">Index of an element.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeader.AddRange(FastReport.Matrix.MatrixHeaderDescriptor[])">
            <summary>
            Adds the specified descriptors to the end of this collection.
            </summary>
            <param name="range">Array of descriptors to add.</param>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeader.Add(FastReport.Matrix.MatrixHeaderDescriptor)">
            <summary>
            Adds a descriptor to the end of this collection.
            </summary>
            <param name="value">Descriptor to add.</param>
            <returns>Index of the added descriptor.</returns>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeader.Insert(System.Int32,FastReport.Matrix.MatrixHeaderDescriptor)">
            <summary>
            Inserts a descriptor into this collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The descriptor to insert.</param>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeader.Remove(FastReport.Matrix.MatrixHeaderDescriptor)">
            <summary>
            Removes the specified descriptor from the collection.
            </summary>
            <param name="value">Descriptor to remove.</param>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeader.IndexOf(FastReport.Matrix.MatrixHeaderDescriptor)">
            <summary>
            Returns the zero-based index of the first occurrence of a descriptor.
            </summary>
            <param name="value">The descriptor to locate in the collection.</param>
            <returns>The zero-based index of the first occurrence of descriptor within 
            the entire collection, if found; otherwise, -1.</returns>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeader.Contains(FastReport.Matrix.MatrixHeaderDescriptor)">
            <summary>
            Determines whether a descriptor is in the collection.
            </summary>
            <param name="value">The descriptor to locate in the collection.</param>
            <returns><b>true</b> if descriptor is found in the collection; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeader.ToArray">
            <summary>
            Copies the elements of this collection to a new array. 
            </summary>
            <returns>An array containing copies of this collection elements. </returns>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeader.GetTerminalIndices">
            <summary>
            Gets the list of indices of terminal items of this header.
            </summary>
            <returns>The list of indices.</returns>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeader.GetTerminalIndices(System.Object[])">
            <summary>
            Gets the list of indices of terminal items of the header with specified address.
            </summary>
            <param name="address">The address of a header.</param>
            <returns>The list of indices.</returns>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeader.RemoveItem(System.Object[])">
            <summary>
            Removes a header item with the address specified. 
            </summary>
            <param name="address">The address of a header.</param>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeader.Find(System.Object[])">
            <summary>
            Gets an index of header with the address specified. 
            </summary>
            <param name="address">The address of a header.</param>
            <returns>The index of header.</returns>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeader.FindOrCreate(System.Object[])">
            <summary>
            Gets an index of header with the address specified. If there is no such header item, it will be created.
            </summary>
            <param name="address">The address of a header.</param>
            <returns>The index of header.</returns>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeader.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeader.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Matrix.MatrixHeaderDescriptor">
            <summary>
            The descriptor that is used to describe one element of the matrix header.
            </summary>
            <remarks>
            The <see cref="T:FastReport.Matrix.MatrixHeaderDescriptor"/> class is used to define one header element of the matrix
            (either the column element or row element). The key properties are 
            <see cref="P:FastReport.Matrix.MatrixDescriptor.Expression"/>, <see cref="P:FastReport.Matrix.MatrixHeaderDescriptor.Sort"/> and <see cref="P:FastReport.Matrix.MatrixHeaderDescriptor.Totals"/>. 
            <para/>To set visual appearance of the element, use the <see cref="P:FastReport.Matrix.MatrixDescriptor.TemplateCell"/> 
            property. To set visual appearance of the "total" element, use the <see cref="P:FastReport.Matrix.MatrixHeaderDescriptor.TemplateTotalCell"/> 
            property.
            <para/>The collection of descriptors used to represent the matrix header is stored
            in the <b>MatrixObject.Data.Columns</b> and <b>MatrixObject.Data.Rows</b> properties.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixHeaderDescriptor.Sort">
            <summary>
            Gets or sets the sort order of header values.
            </summary>
            <remarks>
            This property determines how the values displayed in this element are sorted. The default sort
            is ascending.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixHeaderDescriptor.Totals">
            <summary>
            Gets or sets a value indicating that this element has associated "total" element.
            </summary>
            <remarks>
            To access the matrix cell that is bound to the "Total" element, use the
            <see cref="P:FastReport.Matrix.MatrixHeaderDescriptor.TemplateTotalCell"/> property. It may be useful to change the
            "Total" text by something else.
            </remarks>
            <example>This example shows how to change the "Total" text of the total element.
            <code>
            MatrixObject matrix;
            matrix.Data.Rows[0].TemplateTotalCell.Text = "Grand Total";
            </code>
            </example>
        </member>
        <member name="P:FastReport.Matrix.MatrixHeaderDescriptor.TotalsFirst">
            <summary>
            Gets or sets the value indicating whether the total values must be printed before the data.
            </summary>
        </member>
        <member name="P:FastReport.Matrix.MatrixHeaderDescriptor.PageBreak">
            <summary>
            Gets or sets a value indicating that the page break must be printed before this element.
            </summary>
            <remarks>
            Page break is not printed before the very first element.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixHeaderDescriptor.SuppressTotals">
            <summary>
            Gets or sets a value that determines whether it is necessary to suppress totals
            if there is only one value in a group.
            </summary>
        </member>
        <member name="P:FastReport.Matrix.MatrixHeaderDescriptor.TemplateTotalColumn">
            <summary>
            Gets or sets the template column bound to the "total" element of this descriptor.
            </summary>
            <remarks>
            This property is for internal use; usually you don't need to use it.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixHeaderDescriptor.TemplateTotalRow">
            <summary>
            Gets or sets the template row bound to the "total" element of this descriptor.
            </summary>
            <remarks>
            This property is for internal use; usually you don't need to use it.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixHeaderDescriptor.TemplateTotalCell">
            <summary>
            Gets or sets the template cell bound to the "total" element of this descriptor.
            </summary>
            <remarks>
            This property may be useful to change the "Total" text by something else.
            <note>
            Before using this property, you must initialize the matrix descriptors by
            calling the <see cref="M:FastReport.Matrix.MatrixObject.BuildTemplate"/> method.
            </note>
            </remarks>
            <example>This example shows how to change the "Total" element.
            <code>
            MatrixObject matrix;
            matrix.Data.Rows[0].TemplateTotalCell.Text = "Grand Total";
            matrix.Data.Rows[0].TemplateTotalCell.Fill = new SolidFill(Color.Green);
            </code>
            </example>    
        </member>
        <member name="M:FastReport.Matrix.MatrixHeaderDescriptor.Assign(FastReport.Matrix.MatrixDescriptor)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeaderDescriptor.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeaderDescriptor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Matrix.MatrixHeaderDescriptor"/> class with
            default settings.
            </summary>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeaderDescriptor.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Matrix.MatrixHeaderDescriptor"/> class with
            specified expression.
            </summary>
            <param name="expression">The descriptor's expression.</param>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeaderDescriptor.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Matrix.MatrixHeaderDescriptor"/> class with
            specified expression and totals.
            </summary>
            <param name="expression">The descriptor's expression.</param>
            <param name="totals">Indicates whether to show the "total" element.</param>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeaderDescriptor.#ctor(System.String,FastReport.SortOrder,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Matrix.MatrixHeaderDescriptor"/> class with
            specified expression, sort order and totals.
            </summary>
            <param name="expression">The descriptor's expression.</param>
            <param name="sort">Sort order used to sort header values.</param>
            <param name="totals">Indicates whether to show the "total" element.</param>
        </member>
        <member name="M:FastReport.Matrix.MatrixHelper.UpdateTemplateSizes">
            <summary>
            Updates HeaderWidth, HeaderHeight, BodyWidth, BodyHeight properties.
            </summary>
        </member>
        <member name="T:FastReport.Matrix.MatrixEvenStylePriority">
            <summary>
            Describes how the even style is applied to a matrix.
            </summary>
        </member>
        <member name="F:FastReport.Matrix.MatrixEvenStylePriority.Rows">
            <summary>
            The even style is applied to matrix rows.
            </summary>
        </member>
        <member name="F:FastReport.Matrix.MatrixEvenStylePriority.Columns">
            <summary>
            The even style is applied to matrix columns.
            </summary>
        </member>
        <member name="T:FastReport.PictureObject">
            <summary>
            Represents a Picture object that can display pictures.
            </summary>
            <remarks>
            The Picture object can display the following kind of pictures:
            <list type="bullet">
              <item>
                <description>picture that is embedded in the report file. Use the <see cref="P:FastReport.PictureObject.Image"/>
                property to do this;</description>
              </item>
              <item>
                <description>picture that is stored in the database BLOb field. Use the <see cref="!:DataColumn"/>
                property to specify the name of data column you want to show;</description>
              </item>
              <item>
                <description>picture that is stored in the local disk file. Use the <see cref="!:ImageLocation"/>
                property to specify the name of the file;</description>
              </item>
              <item>
                <description>picture that is stored in the Web. Use the <see cref="!:ImageLocation"/>
                property to specify the picture's URL.</description>
              </item>
            </list>
            <para/>Use the <see cref="!:SizeMode"/> property to specify a size mode. The <see cref="!:MaxWidth"/>
            and <see cref="!:MaxHeight"/> properties can be used to restrict the image size if <b>SizeMode</b>
            is set to <b>AutoSize</b>.
            <para/>The <see cref="P:FastReport.PictureObject.TransparentColor"/> property can be used to display an image with
            transparent background. Use the <see cref="P:FastReport.PictureObject.Transparency"/> property if you want to display
            semi-transparent image.
            </remarks>
        </member>
        <member name="P:FastReport.PictureObject.Image">
            <summary>
            Gets or sets the image.
            </summary>
            <remarks>
            By default, image that you assign to this property is never disposed - you should
            take care about it. If you want to dispose the image when this <b>PictureObject</b> is disposed,
            set the <see cref="P:FastReport.PictureObject.ShouldDisposeImage"/> property to <b>true</b> right after you assign an image:
            <code>
            myPictureObject.Image = new Bitmap("file.bmp");
            myPictureObject.ShouldDisposeImage = true;
            </code>
            </remarks>
        </member>
        <member name="P:FastReport.PictureObject.ImageFormat">
            <summary>
            Gets or sets the expansion of image.
            </summary>
        </member>
        <member name="P:FastReport.PictureObject.Grayscale">
            <summary>
            Gets or sets a value indicating that the image should be displayed in grayscale mode.
            </summary>
        </member>
        <member name="P:FastReport.PictureObject.GrayscaleHash">
            <summary>
            Gets or sets a hash of grayscale svg image
            </summary>
        </member>
        <member name="P:FastReport.PictureObject.TransparentColor">
            <summary>
            Gets or sets the color of the image that will be treated as transparent.
            </summary>
        </member>
        <member name="P:FastReport.PictureObject.Transparency">
            <summary>
            Gets or sets the transparency of the PictureObject.
            </summary>
            <remarks>
            Valid range of values is 0..1. Default value is 0.
            </remarks>
        </member>
        <member name="P:FastReport.PictureObject.Tile">
            <summary>
            Gets or sets a value indicating that the image should be tiled.
            </summary>
        </member>
        <member name="P:FastReport.PictureObject.ShouldDisposeImage">
            <summary>
            Gets or sets a value indicating that the image stored in the <see cref="P:FastReport.PictureObject.Image"/> 
            property should be disposed when this object is disposed.
            </summary>
            <remarks>
            By default, image assigned to the <see cref="P:FastReport.PictureObject.Image"/> property is never disposed - you should
            take care about it. If you want to dispose the image when this <b>PictureObject</b> is disposed,
            set this property to <b>true</b> right after you assign an image to the <see cref="P:FastReport.PictureObject.Image"/> property.
            </remarks>
        </member>
        <member name="P:FastReport.PictureObject.TransparentImage">
            <summary>
            Gets or sets a bitmap transparent image
            </summary>
        </member>
        <member name="P:FastReport.PictureObject.ImageWidth">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.PictureObject.ImageHeight">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PictureObject.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PictureObject.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PictureObject.DrawImage(FastReport.Utils.FRPaintEventArgs)">
            <summary>
            Draws the image.
            </summary>
            <param name="e">Paint event args.</param>
        </member>
        <member name="M:FastReport.PictureObject.SetImageData(System.Byte[])">
            <summary>
            Sets image data to FImageData
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:FastReport.PictureObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PictureObject.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PictureObject.LoadImage">
            <summary>
            Loads image
            </summary>
        </member>
        <member name="M:FastReport.PictureObject.DisposeImage">
            <summary>
            Disposes image
            </summary>
        </member>
        <member name="M:FastReport.PictureObject.InitializeComponent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PictureObject.FinalizeComponent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PictureObject.GetData">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PictureObject.ForceLoadImage">
            <summary>
            Forces loading the image from a data column.
            </summary>
            <remarks>
            Call this method in the <b>AfterData</b> event handler to force loading an image 
            into the <see cref="P:FastReport.PictureObject.Image"/> property. Normally, the image is stored internally as byte[] array 
            and never loaded into the <b>Image</b> property, to save the time. The side effect is that you 
            can't analyze the image properties such as width and height. If you need this, call this method
            before you access the <b>Image</b> property. Note that this will significantly slow down the report.
            </remarks>
        </member>
        <member name="M:FastReport.PictureObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.PictureObject"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.PictureObjectBase">
            <summary>
            the base class for all picture objects
            </summary>
        </member>
        <member name="M:FastReport.PictureObjectBase.DrawErrorImage(FastReport.IGraphics,FastReport.Utils.FRPaintEventArgs)">
            <summary>
            Does nothing
            </summary>
            <param name="g"></param>
            <param name="e"></param>
        </member>
        <member name="P:FastReport.PictureObjectBase.Angle">
            <summary>
            Gets or sets the image rotation angle, in degrees. Possible values are 0, 90, 180, 270.
            </summary>
        </member>
        <member name="P:FastReport.PictureObjectBase.DataColumn">
            <summary>
            Gets or sets the data column name to get the image from.
            </summary>
        </member>
        <member name="P:FastReport.PictureObjectBase.Grayscale">
            <summary>
            Gets or sets a value indicating that the image should be displayed in grayscale mode.
            </summary>
        </member>
        <member name="P:FastReport.PictureObjectBase.Height">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.PictureObjectBase.ImageLocation">
            <summary>
            Gets or sets the path for the image to display in the PictureObject.
            </summary>
            <remarks>
            This property may contain the path to the image file as well as external URL.
            </remarks>
        </member>
        <member name="P:FastReport.PictureObjectBase.ImageSourceExpression">
            <summary>
            Gets or sets the expression that determines the source for the image to display in the PictureObject.
            </summary>
            <remarks>
            The result of the expression should be data column name or path to the image file.
            The data column name will be saved to the <see cref="P:FastReport.PictureObjectBase.DataColumn"/> property.
            The path will be savetd to the <see cref="P:FastReport.PictureObjectBase.ImageLocation"/> property.
            </remarks>
        </member>
        <member name="P:FastReport.PictureObjectBase.IsDataColumn">
            <summary>
            Gets a value indicating that the image stored in the databases column
            </summary>
        </member>
        <member name="P:FastReport.PictureObjectBase.IsFileLocation">
            <summary>
            Gets a value indicating that the image stored in the separate file
            </summary>
        </member>
        <member name="P:FastReport.PictureObjectBase.IsWebLocation">
            <summary>
            Gets a value indicating that the image stored in the Web
            </summary>
        </member>
        <member name="P:FastReport.PictureObjectBase.MaxHeight">
            <summary>
            Gets or sets the maximum height of a Picture object, in pixels.
            </summary>
            <remarks>
            Use this property to restrict the object size if the <see cref="P:FastReport.PictureObjectBase.SizeMode"/> property
            is set to <b>AutoSize</b>.
            </remarks>
        </member>
        <member name="P:FastReport.PictureObjectBase.MaxWidth">
            <summary>
            Gets or sets the maximum width of a Picture object, in pixels.
            </summary>
            <remarks>
            Use this property to restrict the object size if the <see cref="P:FastReport.PictureObjectBase.SizeMode"/> property
            is set to <b>AutoSize</b>.
            </remarks>
        </member>
        <member name="P:FastReport.PictureObjectBase.Padding">
            <summary>
            Gets or sets padding within the PictureObject.
            </summary>
        </member>
        <member name="P:FastReport.PictureObjectBase.ShowErrorImage">
            <summary>
            Gets or sets a value indicating whether the PictureObject should display
            the error indicator if there is no image in it.
            </summary>
        </member>
        <member name="P:FastReport.PictureObjectBase.SizeMode">
            <summary>
            Gets or sets a value that specifies how an image is positioned within a PictureObject.
            </summary>
        </member>
        <member name="P:FastReport.PictureObjectBase.Width">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.PictureObjectBase.ImageAlign">
            <summary>
            Gets or sets the alignment of a image in the border.
            </summary>
        </member>
        <member name="P:FastReport.PictureObjectBase.ImageHeight">
            <summary>
            Return base size of image, internal use only
            </summary>
        </member>
        <member name="P:FastReport.PictureObjectBase.ImageWidth">
            <summary>
            Return base size of image, internal use only
            </summary>
        </member>
        <member name="M:FastReport.PictureObjectBase.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PictureObjectBase.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PictureObjectBase.CalculateUri">
            <summary>
            Calculates URI from ImageLocation
            </summary>
            <returns></returns>
        </member>
        <member name="M:FastReport.PictureObjectBase.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PictureObjectBase.GetImageAngleTransform(System.Drawing.RectangleF,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@)">
            <summary>
            gets points for transform this image
            </summary>
            <param name="drawRect">the box where to draw image</param>
            <param name="imageWidth">image width</param>
            <param name="imageHeight">image height</param>
            <param name="scaleX">scale horizontal</param>
            <param name="scaleY">scale vertical</param>
            <param name="offsetX">offset of left</param>
            <param name="offsetY">offset of top</param>
            <param name="upperLeft">out start of vectors</param>
            <param name="upperRight">out end of frist vector</param>
            <param name="lowerLeft">out end of second vector</param>
        </member>
        <member name="M:FastReport.PictureObjectBase.LoadImage">
            <summary>
            Loads image
            </summary>
        </member>
        <member name="M:FastReport.PictureObjectBase.MovePointOnAngle(System.Drawing.PointF,System.Drawing.SizeF,System.Single)">
            <summary>
            Moves the point on specified angle
            </summary>
            <param name="p"></param>
            <param name="size"></param>
            <param name="fangle"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.PictureObjectBase.RestoreState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PictureObjectBase.rotateVector(System.Drawing.PointF,System.Single)">
            <summary>
            Rotates vector on specified angle
            </summary>
            <param name="p"></param>
            <param name="fangle"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.PictureObjectBase.SaveState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PictureObjectBase.DrawImageInternal(FastReport.Utils.FRPaintEventArgs,System.Drawing.RectangleF)">
            <summary>
            Draws not tiled image
            </summary>
            <param name="e"></param>
            <param name="drawRect"></param>
            <param name="image"></param>
        </member>
        <member name="M:FastReport.PictureObjectBase.ResetImageIndex">
            <summary>
            Reset index of image
            </summary>
        </member>
        <member name="M:FastReport.PictureObjectBase.UpdateAutoSize">
            <summary>
            When auto size was updated, internal use only
            </summary>
        </member>
        <member name="M:FastReport.PictureObjectBase.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.PolyLineObject">
            <summary>
            Represents a poly line object.
            </summary>
            <remarks>
            Use the <b>Border.Width</b>, <b>Border.Style</b> and <b>Border.Color</b> properties to set
            the line width, style and color.
            </remarks>
        </member>
        <member name="F:FastReport.PolyLineObject.polygonSelectionMode">
            <summary>
            do not set this value, internal use only
            </summary>
        </member>
        <member name="P:FastReport.PolyLineObject.Points">
            <summary>
            Return points collection.
            You can modify the collection for change this object.
            </summary>
        </member>
        <member name="P:FastReport.PolyLineObject.CenterX">
            <summary>
            Returns origin of coordinates relative to the top left corner
            </summary>
        </member>
        <member name="P:FastReport.PolyLineObject.CenterY">
            <summary>
            Returns origin of coordinates relative to the top left corner
            </summary>
        </member>
        <member name="P:FastReport.PolyLineObject.PointsArray">
            <summary>
            Return points array of line
            deprecated
            </summary>
        </member>
        <member name="P:FastReport.PolyLineObject.PointTypesArray">
            <summary>
            Return point types array. 0 - Start of line, 1 - Keep on line
            deprecated
            </summary>
        </member>
        <member name="M:FastReport.PolyLineObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.LineObject"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.PolyLineObject.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PolyLineObject.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PolyLineObject.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PolyLineObject.GetPath(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Calculate GraphicsPath for draw to page
            </summary>
            <param name="pen">Pen for lines</param>
            <param name="left">Left boundary</param>
            <param name="top">Top boundary</param>
            <param name="right">Right boundary</param>
            <param name="bottom">Bottom boundary</param>
            <param name="scaleX">scale by width</param>
            <param name="scaleY">scale by height</param>
            <returns>Always returns a non-empty path</returns>
        </member>
        <member name="M:FastReport.PolyLineObject.RecalculateBounds">
            <summary>
            Recalculate position and size of element
            </summary>
        </member>
        <member name="M:FastReport.PolyLineObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PolyLineObject.addPoint(System.Single,System.Single,System.Byte)">
            <summary>
            Add point to end of polyline, need to recalculate bounds after add
            First point must have zero coordinate and zero type.
            Recalculate bounds.
            Method is slow do not use this.
            </summary>
            <param name="localX">local x - relative to left-top point</param>
            <param name="localY">local y - relative to left-top point</param>
            <param name="pointType">depreceted</param>
        </member>
        <member name="M:FastReport.PolyLineObject.deletePoint(System.Int32)">
            <summary>
            Delete point from polyline by index.
            Recalculate bounds.
            Method is slow do not use this.
            </summary>
            <param name="index">Index of point in polyline</param>
        </member>
        <member name="M:FastReport.PolyLineObject.drawPoly(FastReport.Utils.FRPaintEventArgs)">
            <summary>
            Draw polyline path to graphics
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:FastReport.PolyLineObject.insertPoint(System.Int32,System.Single,System.Single,System.Byte)">
            <summary>
            Insert point to desired place of polyline
            recalculateBounds();
            Method is slow do not use this
            </summary>
            <param name="index">Index of place from zero to count</param>
            <param name="localX">local x - relative to left-top point</param>
            <param name="localY">local y - relative to left-top point</param>
            <param name="pointType">deprecated</param>
        </member>
        <member name="T:FastReport.PolyLineObject.PolyPoint">
            <summary>
            Represent a point for polygon object
            </summary>
        </member>
        <member name="T:FastReport.Preview.AddPageAction">
            <summary>
            Specifies an action that will be performed on <b>PreparedPages.AddPage</b> method call.
            </summary>
        </member>
        <member name="F:FastReport.Preview.AddPageAction.WriteOver">
            <summary>
            Do not add the new prepared page if possible, increment the <b>CurPage</b> instead.
            </summary>
        </member>
        <member name="F:FastReport.Preview.AddPageAction.Add">
            <summary>
            Add the new prepared page.
            </summary>
        </member>
        <member name="T:FastReport.Preview.PreparedPages">
            <summary>
            Represents the pages of a prepared report.
            </summary>
            <remarks>
            <para>Prepared page is a page that you can see in the preview window. Prepared pages can be
            accessed via <see cref="P:FastReport.Report.PreparedPages"/> property.</para>
            <para>The common scenarios of using this object are:
            <list type="bullet">
              <item>
                <description>Working with prepared pages after the report is finished: load 
                (<see cref="M:FastReport.Preview.PreparedPages.Load(System.String)"/>) or save (<see cref="M:FastReport.Preview.PreparedPages.Save(System.String)"/>) pages 
                from/to a .fpx file, get a page with specified index to work with its objects 
                (<see cref="M:FastReport.Preview.PreparedPages.GetPage(System.Int32)"/>); modify specified page (<see cref="M:FastReport.Preview.PreparedPages.ModifyPage(System.Int32,FastReport.ReportPage)"/>).
                </description>
              </item>
              <item>
                <description>Using the <see cref="M:FastReport.Preview.PreparedPages.AddPage(FastReport.ReportPage)"/>, <see cref="M:FastReport.Preview.PreparedPages.AddSourcePage(FastReport.ReportPage)"/>, <see cref="M:FastReport.Preview.PreparedPages.AddBand(FastReport.BandBase)"/>
                methods while report is generating to produce an output.
                </description>
              </item>
            </list>
            </para>
            </remarks>
        </member>
        <member name="P:FastReport.Preview.PreparedPages.Count">
            <summary>
            Gets the number of pages in the prepared report.
            </summary>
        </member>
        <member name="P:FastReport.Preview.PreparedPages.AddPageAction">
            <summary>
            Specifies an action that will be performed on <see cref="M:FastReport.Preview.PreparedPages.AddPage(FastReport.ReportPage)"/> method call.
            </summary>
        </member>
        <member name="P:FastReport.Preview.PreparedPages.CanUploadToCache">
            <summary>
            Gets or sets a value indicating whether the prepared pages can be uploaded to the file cache.
            </summary>
            <remarks>
            <para>This property is used while report is generating.</para>
            <para>Default value for this property is <b>true</b>. That means the prepared pages may be uploaded to
            the file cache if needed. To prevent this (for example, if you need to access some objects
            on previously generated pages), set the property value to <b>false</b>.</para>
            </remarks>
        </member>
        <member name="M:FastReport.Preview.PreparedPages.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Preview.PreparedPages.AddSourcePage(FastReport.ReportPage)">
            <summary>
            Adds a source page to the prepared pages dictionary.
            </summary>
            <param name="page">The template page to add.</param>
            <remarks>
            Call this method before using <b>AddPage</b> and <b>AddBand</b> methods. This method adds
            a page to the dictionary that will be used to decrease size of the prepared report.
            </remarks>
        </member>
        <member name="M:FastReport.Preview.PreparedPages.AddPage(FastReport.ReportPage)">
            <summary>
            Adds a new page.
            </summary>
            <param name="page">The original (template) page to add.</param>
            <remarks>
            Call the <see cref="M:FastReport.Preview.PreparedPages.AddSourcePage(FastReport.ReportPage)"/> method before adding a page. This method creates 
            a new output page with settings based on <b>page</b> parameter.
            </remarks>
        </member>
        <member name="M:FastReport.Preview.PreparedPages.AddBand(FastReport.BandBase)">
            <summary>
            Prints a band with all its child objects.
            </summary>
            <param name="band">The band to print.</param>
            <returns><b>true</b> if band was printed; <b>false</b> if it can't be printed 
            on current page due to its <b>PrintOn</b> property value.</returns>
            <remarks>
            Call the <see cref="M:FastReport.Preview.PreparedPages.AddPage(FastReport.ReportPage)"/> method before adding a band.
            </remarks>
        </member>
        <member name="M:FastReport.Preview.PreparedPages.GetPage(System.Int32)">
            <summary>
            Gets a page with specified index.
            </summary>
            <param name="index">Zero-based index of page.</param>
            <returns>The page with specified index.</returns>
        </member>
        <member name="M:FastReport.Preview.PreparedPages.GetPageSize(System.Int32)">
            <summary>
            Gets the size of specified page, in pixels.
            </summary>
            <param name="index">Index of page.</param>
            <returns>the size of specified page, in pixels.</returns>
        </member>
        <member name="M:FastReport.Preview.PreparedPages.ModifyPage(System.Int32,FastReport.ReportPage)">
            <summary>
            Replaces the prepared page with specified one.
            </summary>
            <param name="index">The index of prepared page to replace.</param>
            <param name="newPage">The new page to replace with.</param>
        </member>
        <member name="M:FastReport.Preview.PreparedPages.ModifyPageSize(System.String)">
            <summary>
            Modify the prepared page with new sizes.
            </summary>
            <param name="name">The name of prepared page to reSize.</param>
        </member>
        <member name="M:FastReport.Preview.PreparedPages.RemovePage(System.Int32)">
            <summary>
            Removes a page with the specified index.
            </summary>
            <param name="index">The zero-based index of page to remove.</param>
        </member>
        <member name="M:FastReport.Preview.PreparedPages.CopyPage(System.Int32)">
            <summary>
            Creates a copy of a page with specified index and inserts it after original one.
            </summary>
            <param name="index">The zero-based index of original page.</param>
        </member>
        <member name="M:FastReport.Preview.PreparedPages.Save(System.IO.Stream)">
            <summary>
            Saves prepared pages to a stream.
            </summary>
            <param name="stream">The stream to save to.</param>
        </member>
        <member name="M:FastReport.Preview.PreparedPages.Save(System.String)">
            <summary>
            Saves prepared pages to a .fpx file.
            </summary>
            <param name="fileName">The name of the file to save to.</param>
        </member>
        <member name="M:FastReport.Preview.PreparedPages.Load(System.IO.Stream)">
            <summary>
            Loads prepared pages from a stream.
            </summary>
            <param name="stream">The stream to load from.</param>
        </member>
        <member name="M:FastReport.Preview.PreparedPages.Load(System.String)">
            <summary>
            Loads prepared pages from a .fpx file.
            </summary>
            <param name="fileName">The name of the file to load from.</param>
        </member>
        <member name="M:FastReport.Preview.PreparedPages.Clear">
            <summary>
            Clears the prepared report's pages.
            </summary>
        </member>
        <member name="M:FastReport.Preview.PreparedPages.#ctor(FastReport.Report)">
            <summary>
            Creates the pages of a prepared report
            </summary>
            <param name="report"></param>
        </member>
        <member name="T:FastReport.Report">
            <summary>
            Represents a report object.
            </summary>
            <remarks>
            <para>The instance of this class contains a report. Here are some common
            actions that can be performed with this object:</para>
            <list type="bullet">
              <item>
                <description>To load a report, use the <see cref="M:FastReport.Report.Load(System.String)"/>
                method or call static <see cref="M:FastReport.Report.FromFile(System.String)"/> method. </description>
              </item>
              <item>
                <description>To save a report, call the <see cref="M:FastReport.Report.Save(System.String)"/> method.</description>
              </item>
              <item>
                <description>To register application dataset for use it in a report, call one of the
                <b>RegisterData</b> methods.</description>
              </item>
              <item>
                <description>To pass some parameter to a report, use the
                <see cref="M:FastReport.Report.SetParameterValue(System.String,System.Object)"/> method.</description>
              </item>
              <item>
                <description>To design a report, call the <see cref="!:Design()"/> method.</description>
              </item>
              <item>
                <description>To run a report and preview it, call the <see cref="!:Show()"/> method.
                Another way is to call the <see cref="M:FastReport.Report.Prepare"/> method, then call the
                <see cref="!:ShowPrepared()"/> method.</description>
              </item>
              <item>
                <description>To run a report and print it, call the <see cref="!:Print"/> method.
                Another way is to call the <see cref="M:FastReport.Report.Prepare"/> method, then call the
                <see cref="!:PrintPrepared()"/> method.</description>
              </item>
              <item>
                <description>To load/save prepared report, use one of the <b>LoadPrepared</b> and
                <b>SavePrepared</b> methods.</description>
              </item>
              <item>
                <description>To set up some global properties, use the <see cref="T:FastReport.Utils.Config"/> static class
                or <see cref="!:EnvironmentSettings"/> component that you can use in the Visual Studio IDE.
                </description>
              </item>
            </list>
            <para/>The report consists of one or several report pages (pages of the
            <see cref="T:FastReport.ReportPage"/> type) and/or dialog forms (pages of the <see cref="T:FastReport.Dialog.DialogPage"/> type).
            They are stored in the <see cref="P:FastReport.Report.Pages"/> collection. In turn, each page may contain report
            objects. See the example below how to create a simple report in code.
            </remarks>
            <example>This example shows how to create a report instance, load it from a file,
            register the application data, run and preview.
            <code>
            Report report = new Report();
            report.Load("reportfile.frx");
            report.RegisterData(application_dataset);
            report.Show();
            </code>
            <para/>This example shows how to create simple report in code.
            <code>
            Report report = new Report();
            // create the report page
            ReportPage page = new ReportPage();
            page.Name = "ReportPage1";
            // set paper width and height. Note: these properties are measured in millimeters.
            page.PaperWidth = 210;
            page.PaperHeight = 297;
            // add a page to the report
            report.Pages.Add(page);
            // create report title
            page.ReportTitle = new ReportTitleBand();
            page.ReportTitle.Name = "ReportTitle1";
            page.ReportTitle.Height = Units.Millimeters * 10;
            // create Text object and put it to the title
            TextObject text = new TextObject();
            text.Name = "Text1";
            text.Bounds = new RectangleF(0, 0, Units.Millimeters * 100, Units.Millimeters * 5);
            page.ReportTitle.Objects.Add(text);
            // create data band
            DataBand data = new DataBand();
            data.Name = "Data1";
            data.Height = Units.Millimeters * 10;
            // add data band to a page
            page.Bands.Add(data);
            </code>
            </example>
        </member>
        <member name="M:FastReport.Report.ShowPaswordForm(System.String)">
            <summary>
            Does nothing
            </summary>
            <param name="password"></param>
            <returns>password</returns>
        </member>
        <member name="E:FastReport.Report.CustomCalc">
            <summary>
            Occurs when calc execution is started.
            </summary>
        </member>
        <member name="E:FastReport.Report.LoadBaseReport">
            <summary>
            Occurs when report is inherited and trying to load a base report.
            </summary>
            <remarks>
            Typical use of this event is to load the base report from a database instead of a file.
            </remarks>
        </member>
        <member name="E:FastReport.Report.StartReport">
            <summary>
            Occurs when report execution is started.
            </summary>
        </member>
        <member name="E:FastReport.Report.FinishReport">
            <summary>
            Occurs when report execution is finished.
            </summary>
        </member>
        <member name="E:FastReport.Report.ExportParameters">
            <summary>
            Occurs before export to set custom export parameters.
            </summary>
        </member>
        <member name="P:FastReport.Report.Pages">
            <summary>
            Gets the pages contained in this report.
            </summary>
            <remarks>
            This property contains pages of all types (report and dialog). Use the <b>is/as</b> operators
            if you want to work with pages of <b>ReportPage</b> type.
            </remarks>
            <example>The following code demonstrates how to access the first report page:
            <code>
            ReportPage page1 = report1.Pages[0] as ReportPage;
            </code>
            </example>
        </member>
        <member name="P:FastReport.Report.Dictionary">
            <summary>
            Gets the report's data.
            </summary>
            <remarks>
            The dictionary contains all data items such as connections, data sources, parameters,
            system variables.
            </remarks>
        </member>
        <member name="P:FastReport.Report.Parameters">
            <summary>
            Gets the collection of report parameters.
            </summary>
            <remarks>
            <para>Parameters are displayed in the "Data" window under the "Parameters" node.</para>
            <para>Typical use of parameters is to pass some static data from the application to the report.
            You can print such data, use it in the data row filter, script etc. </para>
            <para>Another way to use parameters is to define some reusable piece of code, for example,
            to define an expression that will return the concatenation of first and second employee name.
            In this case, you set the parameter's <b>Expression</b> property to something like this:
            [Employees.FirstName] + " " + [Employees.LastName]. Now this parameter may be used in the report
            to print full employee name. Each time you access such parameter, it will calculate the expression
            and return its value. </para>
            <para>You can create nested parameters. To do this, add the new <b>Parameter</b> to the
            <b>Parameters</b> collection of the root parameter. To access the nested parameter, you may use the
            <see cref="M:FastReport.Report.GetParameter(System.String)"/> method.</para>
            <para>To get or set the parameter's value, use the <see cref="M:FastReport.Report.GetParameterValue(System.String)"/> and
            <see cref="M:FastReport.Report.SetParameterValue(System.String,System.Object)"/> methods. To set the parameter's expression, use the
            <see cref="M:FastReport.Report.GetParameter(System.String)"/> method that returns a <b>Parameter</b> object and set its
            <b>Expression</b> property.</para>
            </remarks>
        </member>
        <member name="P:FastReport.Report.ReportInfo">
            <summary>
            Gets or sets the report information such as report name, author, description etc.
            </summary>
        </member>
        <member name="P:FastReport.Report.BaseReport">
            <summary>
            Gets or sets the base report file name.
            </summary>
            <remarks>
            This property contains the name of a report file this report is inherited from.
            <b>Note:</b> setting this property to non-empty value will clear the report and
            load the base file into it.
            </remarks>
        </member>
        <member name="P:FastReport.Report.BaseReportAbsolutePath">
            <summary>
            Gets or sets the absolute path to the parent report.
            </summary>
            <remarks>
            This property contains the absolute path to the parent report.
            </remarks>
        </member>
        <member name="P:FastReport.Report.FileName">
            <summary>
            Gets or sets the name of a file the report was loaded from.
            </summary>
            <remarks>
            This property is used to support the FastReport.Net infrastructure;
            typically you don't need to use it.
            </remarks>
        </member>
        <member name="P:FastReport.Report.ScriptText">
            <summary>
            Gets or sets the report script.
            </summary>
            <remarks>
            <para>The script contains the <b>ReportScript</b> class that contains all report objects'
            event handlers and own items such as private fields, properties, methods etc. The script
            contains only items written by you. Unlike other report generators, the script does not
            contain report objects declarations, initialization code. It is added automatically when
            you run the report.</para>
            <para>By default this property contains an empty script text. You may see it in the designer
            when you switch to the Code window.</para>
            <para>If you set this property programmatically, you have to declare the <b>FastReport</b>
            namespace and the <b>ReportScript</b> class in it. Do not declare report items (such as bands,
            objects, etc) in the <b>ReportScript</b> class: the report engine does this automatically when
            you run the report.</para>
            <para><b>Security note:</b> since the report script is compiled into .NET assembly, it allows
            you to do ANYTHING. For example, you may create a script that will read/write files from/to a disk.
            To restrict such operations, use the <see cref="P:FastReport.Report.ScriptRestrictions"/> property.</para>
            </remarks>
        </member>
        <member name="P:FastReport.Report.ScriptLanguage">
            <summary>
            Gets or sets the script language of this report.
            </summary>
            <remarks>
            Note: changing this property will reset the report script to default empty script.
            </remarks>
        </member>
        <member name="P:FastReport.Report.ConvertNulls">
            <summary>
            Gets or sets a value indicating whether the null DB value must be converted to zero, false or
            empty string depending on the data column type.
            </summary>
            <remarks>
            This property is <b>true</b> by default. If you set it to <b>false</b>, you should check
            the DB value before you do something with it (for example, typecast it to any type, use it
            in a expression etc.)
            </remarks>
        </member>
        <member name="P:FastReport.Report.DoublePass">
            <summary>
            Gets or sets a value that specifies whether the report engine should perform the second pass.
            </summary>
            <remarks>
            <para>Typically the second pass is necessary to print the number of total pages. It also
            may be used to perform some calculations on the first pass and print its results on the
            second pass.</para>
            <para>Use the <b>Engine.FirstPass</b>, <b>Engine.FinalPass</b> properties to determine which
            pass the engine is performing now.</para>
            </remarks>
        </member>
        <member name="P:FastReport.Report.Compressed">
            <summary>
            Gets or sets a value that specifies whether to compress the report file.
            </summary>
            <remarks>
            The report file is compressed using the Gzip algorithm. So you can open the
            compressed report in any zip-compatible archiver.
            </remarks>
        </member>
        <member name="P:FastReport.Report.UseFileCache">
            <summary>
            Gets or sets a value that specifies whether to use the file cache rather than memory
            to store the prepared report pages.
            </summary>
        </member>
        <member name="P:FastReport.Report.TextQuality">
            <summary>
            Gets or sets a value that specifies the quality of text rendering.
            </summary>
            <remarks>
            <b>Note:</b> the default property value is <b>TextQuality.Default</b>. That means the report
            may look different depending on OS settings. This property does not affect the printout.
            </remarks>
        </member>
        <member name="P:FastReport.Report.SmoothGraphics">
            <summary>
            Gets or sets a value that specifies if the graphic objects such as bitmaps
            and shapes should be displayed smoothly.
            </summary>
        </member>
        <member name="P:FastReport.Report.Password">
            <summary>
            Gets or sets the report password.
            </summary>
            <remarks>
            <para>When you try to load the password-protected report, you will be asked
            for a password. You also may specify the password in this property before loading
            the report. In this case the report will load silently.</para>
            <para>Password-protected report file is crypted using Rijndael algorithm.
            Do not forget your password! It will be hard or even impossible to open
            the protected file in this case.</para>
            </remarks>
        </member>
        <member name="P:FastReport.Report.AutoFillDataSet">
            <summary>
            Gets or sets a value indicating whether it is necessary to automatically fill
            DataSet registered with <b>RegisterData</b> call.
            </summary>
            <remarks>
            If this property is <b>true</b> (by default), FastReport will automatically fill
            the DataSet with data when you trying to run a report. Set it to <b>false</b> if
            you want to fill the DataSet by yourself.
            </remarks>
        </member>
        <member name="P:FastReport.Report.MaxPages">
            <summary>
            Gets or sets the maximum number of generated pages in a prepared report.
            </summary>
            <remarks>
            Use this property to limit the number of pages in a prepared report.
            </remarks>
        </member>
        <member name="P:FastReport.Report.Styles">
            <summary>
            Gets or sets the collection of styles used in this report.
            </summary>
        </member>
        <member name="P:FastReport.Report.ReferencedAssemblies">
            <summary>
            Gets or sets an array of assembly names that will be used to compile the report script.
            </summary>
            <remarks>
            By default this property contains the following assemblies: "System.dll", "System.Drawing.dll",
            "System.Windows.Forms.dll", "System.Data.dll", "System.Xml.dll". If your script uses some types
            from another assemblies, you have to add them to this property.
            </remarks>
        </member>
        <member name="P:FastReport.Report.StartReportEvent">
            <summary>
            Gets or sets a script event name that will be fired when the report starts.
            </summary>
        </member>
        <member name="P:FastReport.Report.FinishReportEvent">
            <summary>
            Gets or sets a script event name that will be fired when the report is finished.
            </summary>
        </member>
        <member name="P:FastReport.Report.Aborted">
            <summary>
            Gets a value indicating that report execution was aborted.
            </summary>
        </member>
        <member name="P:FastReport.Report.StoreInResources">
            <summary>
            Gets or sets a value that determines whether to store the report in the application resources.
            Use this property in the MS Visual Studio IDE only.
            </summary>
            <remarks>
            By default this property is <b>true</b>. When set to <b>false</b>, you should store your report
            in a file.
            </remarks>
        </member>
        <member name="P:FastReport.Report.ReportResourceString">
            <summary>
            Gets or sets the resource string that contains the report.
            </summary>
            <remarks>
            This property is used by the MS Visual Studio to store the report. Do not use it directly.
            </remarks>
        </member>
        <member name="P:FastReport.Report.HasDialogs">
            <summary>
            Gets a value indicating that this report contains dialog forms.
            </summary>
        </member>
        <member name="P:FastReport.Report.ScriptRestrictions">
            <summary>
            Gets or sets a set of permissions that will be restricted for the script code.
            </summary>
            <remarks>
            Since the report script is compiled into .NET assembly, it allows you to do ANYTHING.
            For example, you may create a script that will read/write files from/to a disk. This property
            is used to restrict such operations.
            <example>This example shows how to restrict the file IO operations in a script:
            <code>
            using System.Security;
            using System.Security.Permissions;
            ...
            PermissionSet ps = new PermissionSet(PermissionState.None);
            ps.AddPermission(new FileIOPermission(PermissionState.Unrestricted));
            report1.ScriptRestrictions = ps;
            report1.Prepare();
            </code>
            </example>
            </remarks>
        </member>
        <member name="P:FastReport.Report.GraphicCache">
            <summary>
            Gets a reference to the graphics cache for this report.
            </summary>
            <remarks>
            This property is used to support the FastReport.Net infrastructure. Do not use it directly.
            </remarks>
        </member>
        <member name="P:FastReport.Report.PreparedPages">
            <summary>
            Gets a pages of the prepared report.
            </summary>
        </member>
        <member name="P:FastReport.Report.Engine">
            <summary>
            Gets a reference to the report engine.
            </summary>
            <remarks>
            This property can be used when report is running. In other cases it returns <b>null</b>.
            </remarks>
        </member>
        <member name="P:FastReport.Report.InitialPageNumber">
            <summary>
            Gets or sets the initial page number for PageN/PageNofM system variables.
            </summary>
        </member>
        <member name="P:FastReport.Report.Name">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Report.Restrictions">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Report.Operation">
            <summary>
            Gets the report operation that is currently performed.
            </summary>
        </member>
        <member name="P:FastReport.Report.Tag">
            <summary>
            Gets or sets the Tag object of the report.
            </summary>
        </member>
        <member name="P:FastReport.Report.NeedRefresh">
            <summary>
            Gets or sets the flag for refresh.
            </summary>
        </member>
        <member name="M:FastReport.Report.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Report.DeserializeSubItems(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Report.CanContain(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Report.GetChildObjects(FastReport.ObjectCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Report.AddChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Report.RemoveChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Report.GetChildOrder(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Report.SetChildOrder(FastReport.Base,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Report.UpdateLayout(System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Report.BeginInit">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Report.EndInit">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Report.InternalInit">
            <summary>
            Initializes the report's fields.
            </summary>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.Report.GenerateReportAssembly(System.String)">
            <summary>
            Generates the file (.cs or .vb) that contains the report source code.
            </summary>
            <param name="fileName">Name of the file.</param>
            <remarks>
            Use this method to generate the report source code. This code can be attached to your project.
            In this case, you will need to call the following code to run a report:
            <code>
            SimpleListReport report = new SimpleListReport();
            report.RegisterData(your_dataset);
            report.Show();
            </code>
            </remarks>
        </member>
        <member name="M:FastReport.Report.Calc(System.String)">
            <summary>
            Calculates an expression and returns the result.
            </summary>
            <param name="expression">The expression to calculate.</param>
            <returns>If report is running, returns the result of calculation.
            Otherwise returns <b>null</b>.</returns>
            <remarks>
            <para>The expression may be any valid expression such as "1 + 2". The expression
            is calculated in the report script's <b>ReportScript</b> class instance context,
            so you may refer to any objects available in this context: private fields,
            methods, report objects.</para>
            </remarks>
        </member>
        <member name="M:FastReport.Report.Calc(System.String,FastReport.Variant)">
            <summary>
            Calculates an expression and returns the result.
            </summary>
            <param name="expression">The expression to calculate.</param>
            <param name="value">The value of currently printing object.</param>
            <returns>If report is running, returns the result of calculation.
            Otherwise returns <b>null</b>.</returns>
            <remarks>
            Do not call this method directly. Use the <b>Calc(string expression)</b> method instead.
            </remarks>
        </member>
        <member name="M:FastReport.Report.CalcExpression(System.String,FastReport.Variant)">
            <summary>
            Returns an expression value.
            </summary>
            <param name="expression">The expression.</param>
            <param name="value">The value of currently printing object.</param>
            <returns>Returns the result of calculation.</returns>
            <remarks>
            This method is for internal use only, do not call it directly.
            </remarks>
        </member>
        <member name="M:FastReport.Report.InvokeMethod(System.String,System.Object[])">
            <summary>
            Invokes the script method with given name.
            </summary>
            <param name="name">The name of the script method.</param>
            <param name="parms">The method parameters.</param>
        </member>
        <member name="M:FastReport.Report.GetColumnValue(System.String)">
            <summary>
            Gets the data column's value. Automatically converts null value to 0, false or ""
            depending on the column type.
            </summary>
            <param name="complexName">The name of the data column including the datasource name.</param>
            <returns>If report is running, returns the column value. Otherwise returns <b>null</b>.</returns>
            <remarks>
            The return value of this method does not depend on the <see cref="P:FastReport.Report.ConvertNulls"/> property.
            </remarks>
            <example>
            <code>
            string employeeName = (string)report.GetColumnValue("Employees.FirstName");
            </code>
            </example>
        </member>
        <member name="M:FastReport.Report.GetColumnValueNullable(System.String)">
            <summary>
            Gets the data column's value. This method does not convert null values.
            </summary>
            <param name="complexName">The name of the data column including the datasource name.</param>
            <returns>If report is running, returns the column value.
            Otherwise returns <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Report.GetParameter(System.String)">
            <summary>
            Gets the report parameter with given name.
            </summary>
            <param name="complexName">The name of the parameter.</param>
            <returns>The <see cref="T:FastReport.Data.Parameter"/> object if found, otherwise <b>null</b>.</returns>
            <remarks>
            To find nested parameter, use the "." separator: "MainParameter.NestedParameter"
            </remarks>
        </member>
        <member name="M:FastReport.Report.GetParameterValue(System.String)">
            <summary>
            Gets a value of the parameter with given name.
            </summary>
            <param name="complexName">The name of the parameter.</param>
            <returns>The parameter's value if found, otherwise <b>null</b>.</returns>
            <remarks>
            To find nested parameter, use the "." separator: "MainParameter.NestedParameter"
            </remarks>
        </member>
        <member name="M:FastReport.Report.SetParameterValue(System.String,System.Object)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="complexName">The name of the parameter.</param>
            <param name="value">Value to set.</param>
            <remarks>
            Use this method to pass a value to the parameter that you've created in the "Data" window.
            Such parameter may be used everythere in a report; for example, you can print its value
            or use it in expressions.
            <para/>You should call this method <b>after</b> the report was loaded and <b>before</b> you run it.
            <para/>To access a nested parameter, use the "." separator: "MainParameter.NestedParameter"
            <note type="caution">
            This method will create the parameter if it does not exist.
            </note>
            </remarks>
            <example>This example shows how to pass a value to the parameter with "MyParam" name:
            <code>
            // load the report
            report1.Load("report.frx");
            // setup the parameter
            report1.SetParameterValue("MyParam", 10);
            // show the report
            report1.Show();
            </code>
            </example>
        </member>
        <member name="M:FastReport.Report.GetVariableValue(System.String)">
            <summary>
            Gets a value of the system variable with specified name.
            </summary>
            <param name="complexName">Name of a variable.</param>
            <returns>The variable's value if found, otherwise <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Report.GetTotalValue(System.String)">
            <summary>
            Gets a value of the total with specified name.
            </summary>
            <param name="name">Name of total.</param>
            <returns>The total's value if found, otherwise <b>0</b>.</returns>
            <remarks>This method converts null values to 0 if the <see cref="P:FastReport.Report.ConvertNulls"/> property is set to true.
            Use the <see cref="M:FastReport.Report.GetTotalValueNullable(System.String)"/> method if you don't want the null conversion.
            </remarks>
        </member>
        <member name="M:FastReport.Report.GetTotalValueNullable(System.String)">
            <summary>
            Gets a value of the total with specified name.
            </summary>
            <param name="name">Name of total.</param>
            <returns>The total's value if found, otherwise <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Report.GetDataSource(System.String)">
            <summary>
            Gets the datasource with specified name.
            </summary>
            <param name="alias">Alias name of a datasource.</param>
            <returns>The datasource object if found, otherwise <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Report.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Report.Abort">
            <summary>
            Aborts the report execution.
            </summary>
        </member>
        <member name="M:FastReport.Report.FindObject(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Report.Clear">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Report.ApplyStyles">
            <summary>
            Updates the report component's styles.
            </summary>
            <remarks>
            Call this method if you change the <see cref="P:FastReport.Report.Styles"/> collection.
            </remarks>
        </member>
        <member name="M:FastReport.Report.SetPreparedPages(FastReport.Preview.PreparedPages)">
            <summary>
            Sets prepared pages.
            </summary>
            <param name="pages"></param>
        </member>
        <member name="M:FastReport.Report.OnStartReport(System.EventArgs)">
            <summary>
            This method fires the <b>StartReport</b> event and the script code connected
            to the <b>StartReportEvent</b>.
            </summary>
        </member>
        <member name="M:FastReport.Report.OnFinishReport(System.EventArgs)">
            <summary>
            This method fires the <b>FinishReport</b> event and the script code connected
            to the <b>FinishReportEvent</b>.
            </summary>
        </member>
        <member name="M:FastReport.Report.OnExportParameters(FastReport.ExportParametersEventArgs)">
            <summary>
            Runs the Export event.
            </summary>
            <param name="e">ExportReportEventArgs object.</param>
        </member>
        <member name="M:FastReport.Report.AddReferencedAssembly(System.String)">
            <summary>
            Add the name of the assembly (in addition to the default) that will be used to compile the report script
            </summary>
            <param name="assembly_name">Assembly name</param>
            <remarks>
            For example: <code>report.AddReferencedAssembly("Newtonsoft.Json.dll")</code>
            </remarks>
        </member>
        <member name="M:FastReport.Report.AddReferencedAssembly(System.Collections.Generic.IList{System.String})">
            <summary>
            Add the names of the assembly (in addition to the default) that will be used to compile the report script
            </summary>
            <param name="assembly_names">Assembly's names</param>
        </member>
        <member name="M:FastReport.Report.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Report.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Report.Save(System.IO.Stream)">
            <summary>
            Saves the report to a stream.
            </summary>
            <param name="stream">The stream to save to.</param>
        </member>
        <member name="M:FastReport.Report.Save(System.String)">
            <summary>
            Saves the report to a file.
            </summary>
            <param name="fileName">The name of the file to save to.</param>
        </member>
        <member name="M:FastReport.Report.SaveWithRandomData(System.IO.Stream)">
            <summary>
            Saves the report to a stream with randomized values in data sources.
            </summary>
            <param name="stream">The stream to save to.</param>
        </member>
        <member name="M:FastReport.Report.SaveWithRandomData(System.String)">
            <summary>
            Saves the report to a file with randomized values in data sources.
            </summary>
            <param name="fileName">The name of the file to save to.</param>
        </member>
        <member name="M:FastReport.Report.Load(System.IO.Stream)">
            <summary>
            Loads report from a stream.
            </summary>
            <param name="stream">The stream to load from.</param>
            <remarks>
            When you try to load the password-protected report, you will be asked
            for a password. You also may specify the password in the <see cref="P:FastReport.Report.Password"/>
            property before loading the report. In this case the report will load silently.
            </remarks>
        </member>
        <member name="M:FastReport.Report.Load(System.String)">
            <summary>
            Loads the report from a file.
            </summary>
            <param name="fileName">The name of the file to load from.</param>
            <remarks>
            When you try to load the password-protected report, you will be asked
            for a password. You also may specify the password in the <see cref="P:FastReport.Report.Password"/>
            property before loading the report. In this case the report will load silently.
            </remarks>
        </member>
        <member name="M:FastReport.Report.LoadFromString(System.String)">
            <summary>
            Loads the report from a string.
            </summary>
            <param name="s">The string that contains a stream in UTF8 or Base64 encoding.</param>
        </member>
        <member name="M:FastReport.Report.SaveToString">
            <summary>
            Saves the report to a string.
            </summary>
            <returns>The string that contains a stream.</returns>
        </member>
        <member name="M:FastReport.Report.SaveToStringBase64">
            <summary>
            Saves the report to a string using the Base64 encoding.
            </summary>
            <returns>The string that contains a stream.</returns>
        </member>
        <member name="M:FastReport.Report.FromStream(System.IO.Stream)">
            <summary>
            Creates the report instance and loads the report from a stream.
            </summary>
            <param name="stream">The stream to load from.</param>
            <returns>The new report instance.</returns>
        </member>
        <member name="M:FastReport.Report.FromFile(System.String)">
            <summary>
            Creates the report instance and loads the report from a file.
            </summary>
            <param name="fileName">The name of the file to load from.</param>
            <returns>The new report instance.</returns>
        </member>
        <member name="M:FastReport.Report.FromString(System.String)">
            <summary>
            Creates the report instance and loads the report from a string.
            </summary>
            <param name="utf8String">The string that contains a stream in UTF8 encoding.</param>
            <returns>The new report instance.</returns>
        </member>
        <member name="M:FastReport.Report.RegisterData(System.Data.DataSet)">
            <summary>
            Registers the application dataset with all its tables and relations to use it in the report.
            </summary>
            <param name="data">The application data.</param>
            <remarks>
            If you register more than one dataset, use the <see cref="M:FastReport.Report.RegisterData(System.Data.DataSet,System.String)"/> method.
            </remarks>
            <example>
            <code>
            report1.Load("report.frx");
            report1.RegisterData(dataSet1);
            </code>
            </example>
        </member>
        <member name="M:FastReport.Report.RegisterData(System.Data.DataSet,System.Boolean)">
            <summary>
            Registers the application dataset with all its tables and relations to use it in the report and enables all its tables.
            </summary>
            <param name="data">The application data.</param>
            <param name="enableAllTables">The boolean value indicating whether all tables should be enabled.</param>
            <remarks>
            If you register more than one dataset, use the <see cref="M:FastReport.Report.RegisterData(System.Data.DataSet,System.String)"/> method.
            </remarks>
            <example>
            <code>
            report1.Load("report.frx");
            report1.RegisterData(dataSet1, true);
            </code>
            </example>
        </member>
        <member name="M:FastReport.Report.RegisterData(System.Data.DataSet,System.String)">
            <summary>
            Registers the application dataset with specified name.
            </summary>
            <param name="data">The application data.</param>
            <param name="name">The name of the data.</param>
            <remarks>
            Use this method if you register more than one dataset. You may specify any value
            for the <b>name</b> parameter: it is not displayed anywhere in the designer and used only
            to load/save a report. The name must be persistent and unique for each registered dataset.
            </remarks>
            <example>
            <code>
            report1.Load("report.frx");
            report1.RegisterData(dataSet1, "NorthWind");
            </code>
            </example>
        </member>
        <member name="M:FastReport.Report.RegisterData(System.Data.DataSet,System.String,System.Boolean)">
            <summary>
            Registers the application dataset with specified name and enables all its tables.
            </summary>
            <param name="data">The application data.</param>
            <param name="name">The name of the data.</param>
            <param name="enableAllTables">The boolean value indicating whether all tables should be enabled.</param>
            <remarks>
            Use this method if you register more than one dataset. You may specify any value
            for the <b>name</b> parameter: it is not displayed anywhere in the designer and used only
            to load/save a report. The name must be persistent and unique for each registered dataset.
            </remarks>
            <example>
            <code>
            report1.Load("report.frx");
            report1.RegisterData(dataSet1, "NorthWind", true);
            </code>
            </example>
        </member>
        <member name="M:FastReport.Report.RegisterData(System.Data.DataTable,System.String)">
            <summary>
            Registers the application data table to use it in the report.
            </summary>
            <param name="data">The application data.</param>
            <param name="name">The name of the data.</param>
            <example>
            <code>
            report1.Load("report.frx");
            report1.RegisterData(dataSet1.Tables["Orders"], "Orders");
            </code>
            </example>
        </member>
        <member name="M:FastReport.Report.RegisterData(System.Data.DataView,System.String)">
            <summary>
            Registers the application data view to use it in the report.
            </summary>
            <param name="data">The application data.</param>
            <param name="name">The name of the data.</param>
            <example>
            <code>
            report1.Load("report.frx");
            report1.RegisterData(myDataView, "OrdersView");
            </code>
            </example>
        </member>
        <member name="M:FastReport.Report.RegisterData(System.Data.DataRelation,System.String)">
            <summary>
            Registers the application data relation to use it in the report.
            </summary>
            <param name="data">The application data.</param>
            <param name="name">The name of the data.</param>
            <remarks>
            You may specify any value for the <b>name</b> parameter: it is not displayed anywhere
            in the designer and used only to load/save a report. The name must be persistent
            and unique for each registered relation.
            </remarks>
            <example>
            <code>
            report1.Load("report.frx");
            report1.RegisterData(myDataRelation, "myRelation");
            </code>
            </example>
        </member>
        <member name="M:FastReport.Report.RegisterData(System.Collections.IEnumerable,System.String,FastReport.Data.BOConverterFlags,System.Int32)">
            <summary>
            <b>Obsolete</b>. Registers the application business object to use it in the report.
            </summary>
            <param name="data">Application data.</param>
            <param name="name">Name of the data.</param>
            <param name="flags">Not used.</param>
            <param name="maxNestingLevel">Maximum nesting level of business objects.</param>
            <remarks>
            This method is obsolete. Use the <see cref="M:FastReport.Report.RegisterData(System.Collections.IEnumerable,System.String)"/> method instead.
            </remarks>
        </member>
        <member name="M:FastReport.Report.RegisterData(System.Collections.IEnumerable,System.String)">
            <summary>
            Registers the application business object to use it in the report.
            </summary>
            <param name="data">Application data.</param>
            <param name="name">Name of the data.</param>
            <example>
            <code>
            report1.Load("report.frx");
            report1.RegisterData(myBusinessObject, "Customers");
            </code>
            </example>
        </member>
        <member name="M:FastReport.Report.RegisterData(System.Collections.IEnumerable,System.String,System.Int32)">
            <summary>
            Registers the application business object to use it in the report.
            </summary>
            <param name="data">Application data.</param>
            <param name="name">Name of the data.</param>
            <param name="maxNestingLevel">Maximum nesting level of business objects.</param>
            <remarks>
            This method creates initial datasource with specified nesting level. It is useful if
            you create a report in code. In most cases, you don't need to specify the nesting level
            because it may be selected in the designer's "Choose Report Data" dialog.
            </remarks>
        </member>
        <member name="M:FastReport.Report.RegisterData(FastReport.CrossView.IBaseCubeLink,System.String)">
            <summary>
            Registers the application cube link to use it in the report.
            </summary>
            <param name="data">The application data.</param>
            <param name="name">The name of the data.</param>
            <example>
            <code>
            report1.Load("report.frx");
            report1.RegisterData(myCubeLink, "Orders");
            </code>
            </example>
        </member>
        <member name="M:FastReport.Report.Prepare">
            <summary>
            Prepares the report.
            </summary>
            <returns><b>true</b> if report was prepared succesfully.</returns>
        </member>
        <member name="M:FastReport.Report.Prepare(System.Boolean)">
            <summary>
            Prepares the report.
            </summary>
            <param name="append">Specifies whether the new report should be added to a
            report that was prepared before.</param>
            <returns><b>true</b> if report was prepared succesfully.</returns>
            <remarks>
            Use this method to merge prepared reports.
            </remarks>
            <example>This example shows how to merge two reports and preview the result:
            <code>
            Report report = new Report();
            report.Load("report1.frx");
            report.Prepare();
            report.Load("report2.frx");
            report.Prepare(true);
            report.ShowPrepared();
            </code>
            </example>
        </member>
        <member name="M:FastReport.Report.Prepare(System.Int32)">
            <summary>
            Prepares the report with pages limit.
            </summary>
            <param name="pagesLimit">Pages limit. The number of pages equal or less will be prepared.</param>
            <returns><b>true</b> if report was prepared succesfully.</returns>
        </member>
        <member name="M:FastReport.Report.PreparePhase1">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Report.PreparePhase2(System.Nullable{System.Int32})">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Report.Refresh">
            <summary>
            Refresh the current report.
            </summary>
            <remarks>
            Call this method in the Click or MouseUp event handler of a report object to refresh
            the currently previewed report. Report will be generated again, but without dialog forms.
            </remarks>
        </member>
        <member name="M:FastReport.Report.InteractiveRefresh">
            <summary>
             Refresh prepared report after intercative actions.
            </summary>
        </member>
        <member name="M:FastReport.Report.PreparePage(FastReport.ReportPage)">
            <summary>
            Prepare page
            </summary>
            <param name="page"></param>
        </member>
        <member name="M:FastReport.Report.Export(FastReport.Export.ExportBase,System.IO.Stream)">
            <summary>
            Exports a report. Report should be prepared using the <see cref="M:FastReport.Report.Prepare"/> method.
            </summary>
            <param name="export">The export filter.</param>
            <param name="stream">Stream to save export result to.</param>
        </member>
        <member name="M:FastReport.Report.Export(FastReport.Export.ExportBase,System.String)">
            <summary>
            Exports a report. Report should be prepared using the <see cref="M:FastReport.Report.Prepare"/> method.
            </summary>
            <param name="export">The export filter.</param>
            <param name="fileName">File name to save export result to.</param>
        </member>
        <member name="M:FastReport.Report.SavePrepared(System.String)">
            <summary>
            Saves the prepared report. Report should be prepared using the <see cref="M:FastReport.Report.Prepare"/> method.
            </summary>
            <param name="fileName">File name to save to.</param>
        </member>
        <member name="M:FastReport.Report.SavePrepared(System.IO.Stream)">
            <summary>
            Saves the prepared report. Report should be prepared using the <see cref="M:FastReport.Report.Prepare"/> method.
            </summary>
            <param name="stream">Stream to save to.</param>
        </member>
        <member name="M:FastReport.Report.LoadPrepared(System.String)">
            <summary>
            Loads the prepared report from a .fpx file.
            </summary>
            <param name="fileName">File name to load form.</param>
        </member>
        <member name="M:FastReport.Report.LoadPrepared(System.IO.Stream)">
            <summary>
            Loads the prepared report from a .fpx file.
            </summary>
            <param name="stream">Stream to load from.</param>
        </member>
        <member name="M:FastReport.Report.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Report"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.Report.EnsureInit">
            <summary>
            Ensure that static constructor is called.
            </summary>
        </member>
        <member name="M:FastReport.Report.PostNameProcess(System.String,System.Int32)">
            <summary>
            Create name for all unnamed elements with prefix and start with number
            </summary>
            <param name="prefix">Prefix for name</param>
            <param name="number">Number from which to start</param>
        </member>
        <member name="T:FastReport.ReportComponentBase">
            <summary>
            Base class for all report objects.
            </summary>
        </member>
        <member name="M:FastReport.ReportComponentBase.DrawMarkers(FastReport.Utils.FRPaintEventArgs)">
            <summary>
            Does nothing
            </summary>
            <param name="e">Draw event arguments.</param>
        </member>
        <member name="M:FastReport.ReportComponentBase.AssignPreviewEvents(FastReport.Base)">
            <summary>
            Does nothing
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:FastReport.ReportComponentBase.DrawIntersectBackground(FastReport.Utils.FRPaintEventArgs)">
            <summary>
            Does nothing
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="E:FastReport.ReportComponentBase.BeforePrint">
            <summary>
            This event occurs before the object is added to the preview pages.
            </summary>
        </member>
        <member name="E:FastReport.ReportComponentBase.AfterPrint">
            <summary>
            This event occurs after the object was added to the preview pages.
            </summary>
        </member>
        <member name="E:FastReport.ReportComponentBase.AfterData">
            <summary>
            This event occurs after the object was filled with data.
            </summary>
        </member>
        <member name="E:FastReport.ReportComponentBase.Click">
            <summary>
            This event occurs when the user clicks the object in the preview window.
            </summary>
        </member>
        <member name="P:FastReport.ReportComponentBase.Exportable">
            <summary>
            Gets or sets a value that determines if the object can be exported.
            </summary>
        </member>
        <member name="P:FastReport.ReportComponentBase.IsIntersectingWithOtherObject">
            <summary>
            Gets or sets a value that determines if the object is intersecting with other object.
            </summary>
        </member>
        <member name="P:FastReport.ReportComponentBase.ExportableExpression">
            <summary>
            Gets or sets a string containing expression that determines should be object exported.
            </summary>
        </member>
        <member name="P:FastReport.ReportComponentBase.Border">
            <summary>
            Gets or sets an object's border.
            </summary>
        </member>
        <member name="P:FastReport.ReportComponentBase.Fill">
            <summary>
            Gets or sets an object's fill.
            </summary>
            <remarks>
            The fill can be one of the following types: <see cref="T:FastReport.SolidFill"/>, <see cref="T:FastReport.LinearGradientFill"/>, 
            <see cref="T:FastReport.PathGradientFill"/>, <see cref="T:FastReport.HatchFill"/>.
            <para/>To set the solid fill color, use the simpler <see cref="P:FastReport.ReportComponentBase.FillColor"/> property.
            </remarks>
            <example>This example shows how to set the new fill and change its properties:
            <code>
            textObject1.Fill = new SolidFill(Color.Green);
            (textObject1.Fill as SolidFill).Color = Color.Red;
            </code>
            </example>          
        </member>
        <member name="P:FastReport.ReportComponentBase.FillColor">
            <summary>
            Gets or sets the fill color in a simple manner.
            </summary>
            <remarks>
            This property can be used in a report script to change the fill color of the object. It is 
            equivalent to: <code>reportComponent1.Fill = new SolidFill(color);</code>
            </remarks>
        </member>
        <member name="P:FastReport.ReportComponentBase.Bookmark">
            <summary>
            Gets or sets a bookmark expression.
            </summary>
            <remarks>
            This property can contain any valid expression that returns a bookmark name. This can be, for example,
            a data column. To navigate to a bookmark, you have to use the <see cref="P:FastReport.ReportComponentBase.Hyperlink"/> property.
            </remarks>
        </member>
        <member name="P:FastReport.ReportComponentBase.Hyperlink">
            <summary>
            Gets or sets a hyperlink.
            </summary>
            <remarks>
            <para>The hyperlink is used to define clickable objects in the preview. 
            When you click such object, you may navigate to the external url, the page number, 
            the bookmark defined by other report object, or display the external report. 
            Set the <b>Kind</b> property of the hyperlink to select appropriate behavior.</para>
            <para>Usually you should set the <b>Expression</b> property of the hyperlink to
            any valid expression that will be calculated when this object is about to print.
            The value of an expression will be used for navigation.</para>
            <para>If you want to navigate to
            something fixed (URL or page number, for example) you also may set the <b>Value</b>
            property instead of <b>Expression</b>.</para>
            </remarks>
        </member>
        <member name="P:FastReport.ReportComponentBase.CanGrow">
            <summary>
            Determines if the object can grow.
            </summary>
            <remarks>
            This property is applicable to the bands or text objects that can contain several text lines.
            If the property is set to <b>true</b>, object will grow to display all the information that it contains.
            </remarks>
        </member>
        <member name="P:FastReport.ReportComponentBase.CanShrink">
            <summary>
            Determines if the object can shrink.
            </summary>
            <remarks>
            This property is applicable to the bands or text objects that can contain several text lines.
            If the property is set to true, object can shrink to remove the unused space.
            </remarks>
        </member>
        <member name="P:FastReport.ReportComponentBase.GrowToBottom">
            <summary>
            Determines if the object must grow to the band's bottom side.
            </summary>
            <remarks>
            If the property is set to true, object grows to the bottom side of its parent. This is useful if
            you have several objects on a band, and some of them can grow or shrink.
            </remarks>
        </member>
        <member name="P:FastReport.ReportComponentBase.ShiftMode">
            <summary>
            Gets or sets a shift mode of the object.
            </summary>
            <remarks>
            See <see cref="T:FastReport.ShiftMode"/> enumeration for details.
            </remarks>
        </member>
        <member name="P:FastReport.ReportComponentBase.Style">
            <summary>
            Gets or sets the style name.
            </summary>
            <remarks>
            Style is a set of common properties such as border, fill, font, text color. The <b>Report</b>
            has a set of styles in the <see cref="P:FastReport.Report.Styles"/> property. 
            </remarks>
        </member>
        <member name="P:FastReport.ReportComponentBase.EvenStyle">
            <summary>
            Gets or sets a style name that will be applied to even band rows.
            </summary>
            <remarks>
            Style with this name must exist in the <see cref="P:FastReport.Report.Styles"/> collection.
            </remarks>
        </member>
        <member name="P:FastReport.ReportComponentBase.HoverStyle">
            <summary>
            Gets or sets a style name that will be applied to this object when the mouse pointer is over it.
            </summary>
            <remarks>
            Style with this name must exist in the <see cref="P:FastReport.Report.Styles"/> collection.
            </remarks>
        </member>
        <member name="P:FastReport.ReportComponentBase.EvenStylePriority">
            <summary>
            Gets or sets a value that determines which properties of the even style to use.
            </summary>
            <remarks>
            Usually you will need only the Fill property of the even style to be applied. If you want to 
            apply all style settings, set this property to <b>StylePriority.UseAll</b>.
            </remarks>
        </member>
        <member name="P:FastReport.ReportComponentBase.PrintOn">
            <summary>
            Gets or sets a value that determines where to print the object.
            </summary>
            <remarks>
            See the <see cref="T:FastReport.PrintOn"/> enumeration for details.
            </remarks>
        </member>
        <member name="P:FastReport.ReportComponentBase.BeforePrintEvent">
            <summary>
            Gets or sets a script event name that will be fired before the object will be printed in the preview page.
            </summary>
        </member>
        <member name="P:FastReport.ReportComponentBase.AfterPrintEvent">
            <summary>
            Gets or sets a script event name that will be fired after the object was printed in the preview page.
            </summary>
        </member>
        <member name="P:FastReport.ReportComponentBase.AfterDataEvent">
            <summary>
            Gets or sets a script event name that will be fired after the object was filled with data.
            </summary>
        </member>
        <member name="P:FastReport.ReportComponentBase.ClickEvent">
            <summary>
            Gets or sets a script event name that will be fired when the user click the object in the preview window.
            </summary>
        </member>
        <member name="P:FastReport.ReportComponentBase.FlagSimpleBorder">
            <summary>
            Determines if the object has custom border and use only <b>Border.Width</b>, <b>Border.Style</b> and 
            <b>Border.Color</b> properties.
            </summary>
            <remarks>
            This flag is used to disable some toolbar buttons when such object is selected. Applicable to the
            ShapeObject and LineObject.
            </remarks>
        </member>
        <member name="P:FastReport.ReportComponentBase.FlagUseBorder">
            <summary>
            Determines if the object uses the <b>Border</b>.
            </summary>
            <remarks>
            This flag is used to disable some toolbar buttons when such object is selected.
            </remarks>
        </member>
        <member name="P:FastReport.ReportComponentBase.FlagUseFill">
            <summary>
            Determines if the object uses the fill.
            </summary>
            <remarks>
            This flag is used to disable some toolbar buttons when such object is selected.
            </remarks>
        </member>
        <member name="P:FastReport.ReportComponentBase.FlagPreviewVisible">
            <summary>
            Gets or sets a value indicates that object should not be added to the preview.
            </summary>
        </member>
        <member name="P:FastReport.ReportComponentBase.FlagSerializeStyle">
            <summary>
            Determines if serializing the Style property is needed.
            </summary>
            <remarks>
            The <b>Style</b> property must be serialized last. Some ancestor classes may turn off the standard Style 
            serialization and serialize it by themselves.
            </remarks>
        </member>
        <member name="P:FastReport.ReportComponentBase.FlagProvidesHyperlinkValue">
            <summary>
            Determines if an object can provide the hyperlink value automatically.
            </summary>
            <remarks>
            This flag is used in complex objects such as Matrix or Chart. These objects can provide
            a hyperlink value automatically, depending on where you click.
            </remarks>
        </member>
        <member name="P:FastReport.ReportComponentBase.Band">
            <summary>
            Gets an object's parent band.
            </summary>
        </member>
        <member name="P:FastReport.ReportComponentBase.DataBand">
            <summary>
            Gets an object's parent data band.
            </summary>
        </member>
        <member name="P:FastReport.ReportComponentBase.Cursor">
            <summary>
            Gets or sets an object's cursor shape.
            </summary>
            <remarks>
            This property is used in the preview mode.
            </remarks>
        </member>
        <member name="P:FastReport.ReportComponentBase.MouseMoveEvent">
            <summary>
            Gets or sets a script event name that will be fired when the user 
            moves the mouse over the object in the preview window.
            </summary>
        </member>
        <member name="P:FastReport.ReportComponentBase.MouseUpEvent">
            <summary>
            Gets or sets a script event name that will be fired when the user 
            releases the mouse button in the preview window.
            </summary>
        </member>
        <member name="P:FastReport.ReportComponentBase.MouseDownEvent">
            <summary>
            Gets or sets a script event name that will be fired when the user 
            clicks the mouse button in the preview window.
            </summary>
        </member>
        <member name="P:FastReport.ReportComponentBase.MouseEnterEvent">
            <summary>
            Gets or sets a script event name that will be fired when the
            mouse enters the object's bounds in the preview window.
            </summary>
        </member>
        <member name="P:FastReport.ReportComponentBase.MouseLeaveEvent">
            <summary>
            Gets or sets a script event name that will be fired when the
            mouse leaves the object's bounds in the preview window.
            </summary>
        </member>
        <member name="M:FastReport.ReportComponentBase.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportComponentBase.ApplyStyle(FastReport.Style)">
            <summary>
            Applies the style settings.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:FastReport.ReportComponentBase.SaveStyle">
            <summary>
            Saves the current style.
            </summary>
        </member>
        <member name="M:FastReport.ReportComponentBase.RestoreStyle">
            <summary>
            Restores the current style.
            </summary>
        </member>
        <member name="M:FastReport.ReportComponentBase.DrawBackground(FastReport.Utils.FRPaintEventArgs)">
            <summary>
            Draws the object's background.
            </summary>
            <param name="e">Draw event arguments.</param>
        </member>
        <member name="M:FastReport.ReportComponentBase.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportComponentBase.IsVisible(FastReport.Utils.FRPaintEventArgs)">
            <summary>
            Determines if the object is visible on current drawing surface.
            </summary>
            <param name="e">Draw event arguments.</param>
        </member>
        <member name="M:FastReport.ReportComponentBase.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportComponentBase.Deserialize(FastReport.Utils.FRReader)">
            <summary>
            
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FastReport.ReportComponentBase.OnClick(System.EventArgs)">
            <summary>
            This method fires the <b>Click</b> event and the script code connected to the <b>ClickEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.ReportComponentBase.OnAfterLoad">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportComponentBase.HasClickListeners">
            <summary>
            Checks if there are any listeners to the Click event.
            </summary>
        </member>
        <member name="M:FastReport.ReportComponentBase.InitializeComponent">
            <summary>
            Initializes the object before running a report.
            </summary>
            <remarks>
            This method is used by the report engine, do not call it directly.
            </remarks>
        </member>
        <member name="M:FastReport.ReportComponentBase.FinalizeComponent">
            <summary>
            Performs a finalization after the report is finished.
            </summary>
            <remarks>
            This method is used by the report engine, do not call it directly.
            </remarks>
        </member>
        <member name="M:FastReport.ReportComponentBase.SaveState">
            <summary>
            Saves the object's state before printing it.
            </summary>
            <remarks>
            This method is called by the report engine before processing the object. 
            <para/>Do not call it directly. You may override it if you are developing a new FastReport component. 
            In this method you should save any object properties that may be changed during the object printing. 
            The standard implementation saves the object's bounds, visibility, bookmark and hyperlink.
            </remarks>
        </member>
        <member name="M:FastReport.ReportComponentBase.RestoreState">
            <summary>
            Restores the object's state after printing it.
            </summary>
            <remarks>
            This method is called by the report engine after processing the object.
            <para/>Do not call it directly. You may override it if you are developing a new FastReport component. 
            In this method you should restore the object properties that were saved by the <see cref="M:FastReport.ReportComponentBase.SaveState"/> method.
            </remarks>
        </member>
        <member name="M:FastReport.ReportComponentBase.CalcHeight">
            <summary>
            Calculates the object's height.
            </summary>
            <returns>Actual object's height, in pixels.</returns>
            <remarks>
            Applicable to objects that contain several text lines, such as TextObject. Returns the height needed
            to display all the text lines.
            </remarks>
        </member>
        <member name="M:FastReport.ReportComponentBase.GetData">
            <summary>
            Gets the data from a datasource that the object is connected to.
            </summary>
            <remarks>
            This method is called by the report engine before processing the object.
            <para/>Do not call it directly. You may override it if you are developing a new FastReport component. 
            In this method you should get the data from a datasource that the object is connected to.
            </remarks>
        </member>
        <member name="M:FastReport.ReportComponentBase.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportComponentBase.OnBeforePrint(System.EventArgs)">
            <summary>
            This method fires the <b>BeforePrint</b> event and the script code connected to the <b>BeforePrintEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.ReportComponentBase.OnAfterPrint(System.EventArgs)">
            <summary>
            This method fires the <b>AfterPrint</b> event and the script code connected to the <b>AfterPrintEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.ReportComponentBase.OnAfterData(System.EventArgs)">
            <summary>
            This method fires the <b>AfterData</b> event and the script code connected to the <b>AfterDataEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.ReportComponentBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.ReportComponentBase"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.ReportPage">
            <summary>
            Represents a report page.
            </summary>
            <remarks>
            To get/set a paper size and orientation, use the <see cref="P:FastReport.ReportPage.PaperWidth"/>, <see cref="P:FastReport.ReportPage.PaperHeight"/>
            and <see cref="P:FastReport.ReportPage.Landscape"/> properties. Note that paper size is measured in millimeters.
            <para/>Report page can contain one or several bands with report objects. Use the <see cref="P:FastReport.ReportPage.ReportTitle"/>, 
            <see cref="P:FastReport.ReportPage.ReportSummary"/>, <see cref="P:FastReport.ReportPage.PageHeader"/>, <see cref="P:FastReport.ReportPage.PageFooter"/>, 
            <see cref="P:FastReport.ReportPage.ColumnHeader"/>, <see cref="P:FastReport.ReportPage.ColumnFooter"/>, <see cref="P:FastReport.ReportPage.Overlay"/> properties
            to get/set the page bands. The <see cref="P:FastReport.ReportPage.Bands"/> property holds the list of data bands or groups. 
            Thus you may add several databands to this property to create master-master reports, for example.
            <note type="caution">
            Report page can contain bands only. You cannot place report objects such as <b>TextObject</b> on a page.
            </note>
            </remarks>
            <example>
            This example shows how to create a page with one <b>ReportTitleBand</b> and <b>DataBand</b> bands and add
            it to the report.
            <code>
            ReportPage page = new ReportPage();
            // set the paper in millimeters
            page.PaperWidth = 210;
            page.PaperHeight = 297;
            // create report title
            page.ReportTitle = new ReportTitleBand();
            page.ReportTitle.Name = "ReportTitle1";
            page.ReportTitle.Height = Units.Millimeters * 10;
            // create data band
            DataBand data = new DataBand();
            data.Name = "Data1";
            data.Height = Units.Millimeters * 10;
            // add data band to the page
            page.Bands.Add(data);
            // add page to the report
            report.Pages.Add(page);
            </code>
            </example>
        </member>
        <member name="E:FastReport.ReportPage.StartPage">
            <summary>
            This event occurs when the report engine starts this page.
            </summary>
        </member>
        <member name="E:FastReport.ReportPage.FinishPage">
            <summary>
            This event occurs when the report engine finished this page.
            </summary>
        </member>
        <member name="E:FastReport.ReportPage.ManualBuild">
            <summary>
            This event occurs when the report engine is about to print databands in this page.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.PaperWidth">
            <summary>
            Gets or sets a width of the paper, in millimeters.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.ExportAlias">
            <summary>
            Gets or sets the page name on export
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.PaperHeight">
            <summary>
            Gets or sets a height of the paper, in millimeters.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.RawPaperSize">
            <summary>
            Gets or sets the raw index of a paper size.
            </summary>
            <remarks>
            This property stores the RawKind value of a selected papersize. It is used to distiguish
            between several papers with the same size (for ex. "A3" and "A3 with no margins") used in some
            printer drivers. 
            <para/>It is not obligatory to set this property. FastReport will select the
            necessary paper using the <b>PaperWidth</b> and <b>PaperHeight</b> values.
            </remarks>
        </member>
        <member name="P:FastReport.ReportPage.UnlimitedHeight">
            <summary>
            Gets or sets a value indicating whether the page has unlimited height.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.PrintOnRollPaper">
            <summary>
            Gets or sets the value indicating whether the unlimited page should be printed on roll paper.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.UnlimitedWidth">
            <summary>
            Gets or sets a value indicating whether the page has unlimited width.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.UnlimitedHeightValue">
            <summary>
            Get or set the current height of unlimited page.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.UnlimitedWidthValue">
            <summary>
            Get or set the current width of unlimited page.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.HeightInPixels">
            <summary>
            Gets the current page height in pixels.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.WidthInPixels">
            <summary>
            Gets the current page width in pixels.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.Landscape">
            <summary>
            Gets or sets a value indicating that page should be in landscape orientation.
            </summary>
            <remarks>
            When you change this property, it will automatically swap paper width and height, as well as paper margins.
            </remarks>
        </member>
        <member name="P:FastReport.ReportPage.LeftMargin">
            <summary>
            Gets or sets the left page margin, in millimeters.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.TopMargin">
            <summary>
            Gets or sets the top page margin, in millimeters.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.RightMargin">
            <summary>
            Gets or sets the right page margin, in millimeters.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.BottomMargin">
            <summary>
            Gets or sets the bottom page margin, in millimeters.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.MirrorMargins">
            <summary>
            Gets or sets a value indicating that even pages should swap its left and right margins when
            previewed or printed.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.Columns">
            <summary>
            Gets the page columns settings.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.Border">
            <summary>
            Gets or sets the page border that will be printed inside the page printing area.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.Fill">
            <summary>
            Gets or sets the page background fill.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.Watermark">
            <summary>
            Gets or sets the page watermark.
            </summary>
            <remarks>
            To enabled watermark, set its <b>Enabled</b> property to <b>true</b>.
            </remarks>
        </member>
        <member name="P:FastReport.ReportPage.TitleBeforeHeader">
            <summary>
            Gets or sets a value indicating that <b>ReportTitle</b> band should be printed before the 
            <b>PageHeader</b> band.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.OutlineExpression">
            <summary>
            Gets or sets an outline expression.
            </summary>
            <remarks>
            For more information, see <see cref="P:FastReport.BandBase.OutlineExpression"/> property.
            </remarks>
        </member>
        <member name="P:FastReport.ReportPage.PrintOnPreviousPage">
            <summary>
            Gets or sets a value indicating whether to start to print this page on a free space of the previous page.
            </summary>
            <remarks>
            This property can be used if you have two or more pages in the report template.
            </remarks>
        </member>
        <member name="P:FastReport.ReportPage.ResetPageNumber">
            <summary>
            Gets or sets a value indicating that FastReport engine must reset page numbers before printing this page.
            </summary>
            <remarks>
            This property can be used if you have two or more pages in the report template.
            </remarks>
        </member>
        <member name="P:FastReport.ReportPage.ExtraDesignWidth">
            <summary>
            Gets or sets a value indicating whether the page has extra width in the report designer.
            </summary>
            <remarks>
            This property may be useful if you work with such objects as Matrix and Table.
            </remarks>
        </member>
        <member name="P:FastReport.ReportPage.StartOnOddPage">
            <summary>
            Gets or sets a value indicating whether this page will start on an odd page only.
            </summary>
            <remarks>
            This property is useful to print booklet-type reports. Setting this property to <b>true</b>
            means that this page will start to print on an odd page only. If necessary, an empty page
            will be added to the prepared report before this page will be printed.
            </remarks>
        </member>
        <member name="P:FastReport.ReportPage.BackPage">
            <summary>
            Uses this page as a back page for previously printed pages.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.ReportTitle">
            <summary>
            Gets or sets a report title band.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.ReportSummary">
            <summary>
            Gets or sets a report summary band.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.PageHeader">
            <summary>
            Gets or sets a page header band.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.PageFooter">
            <summary>
            Gets or sets a page footer band.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.ColumnHeader">
            <summary>
            Gets or sets a column header band.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.ColumnFooter">
            <summary>
            Gets or sets a column footer band.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.Overlay">
            <summary>
            Gets or sets an overlay band.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.Bands">
            <summary>
            Gets the collection of data bands or group header bands.
            </summary>
            <remarks>
            The <b>Bands</b> property holds the list of data bands or group headers. 
            Thus you may add several databands to this property to create master-master reports, for example.
            </remarks>
        </member>
        <member name="P:FastReport.ReportPage.Guides">
            <summary>
            Gets or sets the page guidelines.
            </summary>
            <remarks>
            This property hold all vertical guidelines. The horizontal guidelines are owned by the bands (see
            <see cref="P:FastReport.BandBase.Guides"/> property).
            </remarks>
        </member>
        <member name="P:FastReport.ReportPage.Subreport">
            <summary>
            Gets or sets the reference to a parent <b>SubreportObject</b> that owns this page.
            </summary>
            <remarks>
            This property is <b>null</b> for regular report pages. See the <see cref="T:FastReport.SubreportObject"/> for details.
            </remarks>
        </member>
        <member name="P:FastReport.ReportPage.StartPageEvent">
            <summary>
            Gets or sets a script event name that will be fired when the report engine starts this page.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.FinishPageEvent">
            <summary>
            Gets or sets a script event name that will be fired when the report engine finished this page.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.ManualBuildEvent">
            <summary>
            Gets or sets a script event name that will be fired when the report engine is about 
            to print databands in this page.
            </summary>
        </member>
        <member name="M:FastReport.ReportPage.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportPage.GetChildObjects(FastReport.ObjectCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportPage.CanContain(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportPage.AddChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportPage.RemoveChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportPage.GetChildOrder(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportPage.SetChildOrder(FastReport.Base,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportPage.UpdateLayout(System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportPage.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportPage.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportPage.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportPage.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportPage.ExtractMacros">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportPage.OnStartPage(System.EventArgs)">
            <summary>
            This method fires the <b>StartPage</b> event and the script code connected to the <b>StartPageEvent</b>.
            </summary>
        </member>
        <member name="M:FastReport.ReportPage.OnFinishPage(System.EventArgs)">
            <summary>
            This method fires the <b>FinishPage</b> event and the script code connected to the <b>FinishPageEvent</b>.
            </summary>
        </member>
        <member name="M:FastReport.ReportPage.OnManualBuild(System.EventArgs)">
            <summary>
            This method fires the <b>ManualBuild</b> event and the script code connected to the <b>ManualBuildEvent</b>.
            </summary>
        </member>
        <member name="M:FastReport.ReportPage.UpdateBandsWidth">
            <summary>
            Updates width of all bands on this page according to page's paper settings.
            </summary>
        </member>
        <member name="M:FastReport.ReportPage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.ReportPage"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.ReportSettings">
            <summary>
            This class contains settings that will be applied to the Report component.
            </summary>
        </member>
        <member name="M:FastReport.ReportSettings.OnFinishProgress(FastReport.Report)">
            <summary>
            Does nothing
            </summary>
            <param name="report"></param>
        </member>
        <member name="M:FastReport.ReportSettings.OnProgress(FastReport.Report,System.String)">
            <summary>
            Does nothing
            </summary>
            <param name="report"></param>
            <param name="str"></param>
        </member>
        <member name="M:FastReport.ReportSettings.OnProgress(FastReport.Report,System.String,System.Int32,System.Int32)">
            <summary>
            Does nothing
            </summary>
            <param name="report"></param>
        </member>
        <member name="M:FastReport.ReportSettings.OnStartProgress(FastReport.Report)">
            <summary>
            Does nothing
            </summary>
            <param name="report"></param>
        </member>
        <member name="E:FastReport.ReportSettings.DatabaseLogin">
            <!-- Failed to insert some or all of included XML --><include file="Resources/doc.xml" path="//CodeDoc/Topics/EnvironmentSettings/DatabaseLogin/*" />
        </member>
        <member name="E:FastReport.ReportSettings.AfterDatabaseLogin">
            <summary>
            Occurs after the database connection is established.
            </summary>
        </member>
        <member name="E:FastReport.ReportSettings.FilterBusinessObjectProperties">
            <summary>
            Occurs when discovering the business object's structure.
            </summary>
        </member>
        <member name="E:FastReport.ReportSettings.GetBusinessObjectPropertyKind">
            <summary>
            Occurs when determining the kind of business object's property.
            </summary>
        </member>
        <member name="E:FastReport.ReportSettings.GetBusinessObjectTypeInstance">
            <summary>
            Occurs when discovering the structure of business object of ICustomTypeDescriptor type 
            with no instance specified.
            </summary>
            <remarks>
            The event handler must return an instance of that type.
            </remarks>
        </member>
        <member name="P:FastReport.ReportSettings.DefaultLanguage">
            <summary>
            Gets or sets the default script language.
            </summary>
        </member>
        <member name="P:FastReport.ReportSettings.DefaultPaperSize">
            <summary>
            Gets or sets the default paper size used when creating a new report.
            </summary>
        </member>
        <member name="P:FastReport.ReportSettings.UsePropValuesToDiscoverBO">
            <summary>
            Gets or sets a value indicating that the business object engine will use property values 
            when possible to discover the BO structure.
            </summary>
        </member>
        <member name="P:FastReport.ReportSettings.ImageLocationRoot">
            <summary>
            Gets or sets the default path for root of PictureObject.ImageLocation path.
            </summary>
        </member>
        <member name="M:FastReport.ReportSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.ReportSettings"/> class.
            </summary>
        </member>
        <member name="T:FastReport.StyleBase">
            <summary>
            Represents the base class for the report style or the highlight condition.
            </summary>
        </member>
        <member name="P:FastReport.StyleBase.ApplyBorder">
            <summary>
            Gets or sets a value determines that the border must be applied.
            </summary>
        </member>
        <member name="P:FastReport.StyleBase.ApplyFill">
            <summary>
            Gets or sets a value determines that the fill must be applied.
            </summary>
        </member>
        <member name="P:FastReport.StyleBase.ApplyFont">
            <summary>
            Gets or sets a value determines that the font must be applied.
            </summary>
        </member>
        <member name="P:FastReport.StyleBase.ApplyTextFill">
            <summary>
            Gets or sets a value determines that the text fill must be applied.
            </summary>
        </member>
        <member name="P:FastReport.StyleBase.Border">
            <summary>
            Gets or sets a border.
            </summary>
        </member>
        <member name="P:FastReport.StyleBase.Fill">
            <summary>
            Gets or sets a fill.
            </summary>
        </member>
        <member name="P:FastReport.StyleBase.Font">
            <summary>
            Gets or sets a font.
            </summary>
        </member>
        <member name="P:FastReport.StyleBase.TextFill">
            <summary>
            Gets or sets a text fill.
            </summary>
        </member>
        <member name="M:FastReport.StyleBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.StyleBase"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.StyleBase.Assign(FastReport.StyleBase)">
            <summary>
            Assigns values from another source.
            </summary>
            <param name="source">Source to assign from.</param>
        </member>
        <member name="M:FastReport.StyleBase.Deserialize(FastReport.Utils.FRReader)">
            <summary>
            Deserializes the style.
            </summary>
            <param name="reader">Reader object.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.StyleBase.Serialize(FastReport.Utils.FRWriter)">
            <summary>
            Serializes the style.
            </summary>
            <param name="writer">Writer object.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="T:FastReport.Table.TableBase">
            <summary>
            The base class for table-type controls such as <see cref="T:FastReport.Table.TableObject"/> and 
            <see cref="T:FastReport.Matrix.MatrixObject"/>.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableBase.Rows">
            <summary>
            Gets a collection of table rows.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableBase.Columns">
            <summary>
            Gets a collection of table columns.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableBase.FixedRows">
            <summary>
            Gets or sets the number of fixed rows that will be repeated on each page.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableBase.FixedColumns">
            <summary>
            Gets or sets the number of fixed columns that will be repeated on each page.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableBase.RepeatHeaders">
            <summary>
            Gets or sets a value that determines whether is necessary to repeat table header on each page.
            </summary>
            <remarks>
            To define a table header, set the <see cref="P:FastReport.Table.TableBase.FixedRows"/> and <see cref="P:FastReport.Table.TableBase.FixedColumns"/>
            properties.
            </remarks>
        </member>
        <member name="P:FastReport.Table.TableBase.RepeatRowHeaders">
            <summary>
            Gets or sets a value that determines whether is necessary to repeat table Row header on each page.
            </summary>
            <remarks>
            To define a table Row header, set the <see cref="P:FastReport.Table.TableBase.FixedRows"/>
            properties.
            </remarks>
        </member>
        <member name="P:FastReport.Table.TableBase.RepeatColumnHeaders">
            <summary>
            Gets or sets a value that determines whether is necessary to repeat table Column header on each page.
            </summary>
            <remarks>
            To define a table Column header, set the <see cref="P:FastReport.Table.TableBase.FixedColumns"/>
            properties.
            </remarks>
        </member>
        <member name="P:FastReport.Table.TableBase.Layout">
            <summary>
            Gets or sets the table layout.
            </summary>
            <remarks>
            This property affects printing the big table that breaks across pages.
            </remarks>
        </member>
        <member name="P:FastReport.Table.TableBase.WrappedGap">
            <summary>
            Gets or sets gap between parts of the table in wrapped layout mode.
            </summary>
            <remarks>
            This property is used if you set the <see cref="P:FastReport.Table.TableBase.Layout"/> property to <b>Wrapped</b>.
            </remarks>
        </member>
        <member name="P:FastReport.Table.TableBase.AdjustSpannedCellsWidth">
            <summary>
            Gets or sets a value that determines whether to adjust the spanned cell's width when breaking the table across pages.
            </summary>
            <remarks>
            If set to <b>true</b>, the spanned cell's width will be adjusted to accomodate all contained text.
            </remarks>
        </member>
        <member name="P:FastReport.Table.TableBase.Item(System.Int32,System.Int32)">
            <summary>
            Gets or sets the table cell.
            </summary>
            <param name="col">Column index.</param>
            <param name="row">Row index.</param>
            <returns>The <b>TableCell</b> object that represents a cell.</returns>
        </member>
        <member name="P:FastReport.Table.TableBase.ColumnCount">
            <summary>
            Gets or sets a number of columns in the table.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableBase.RowCount">
            <summary>
            Gets or sets a number of rows in the table.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableBase.ResultTable">
            <summary>
            Gets a table which contains the result of rendering dynamic table.
            </summary>
            <remarks>
            Use this property to access the result of rendering your table in dynamic mode.
            It may be useful if you want to center or right-align the result table on a page. 
            In this case, you need to add the following code at the end of your ManualBuild event handler:
            <code>
            // right-align the table
            Table1.ResultTable.Left = Engine.PageWidth - Table1.ResultTable.CalcWidth() - 1;
            </code>
            </remarks>
        </member>
        <member name="M:FastReport.Table.TableBase.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.IsVisible(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.GetCellData(System.Int32,System.Int32)">
            <summary>
            Gets data of the table cell with specified column and row numbers.
            </summary>
            <param name="col">The column number.</param>
            <param name="row">The row number.</param>
            <returns>TableCellData instance containing data of the table cell.</returns>
        </member>
        <member name="M:FastReport.Table.TableBase.CreateUniqueNames">
            <summary>
            Creates unique names for all table elements such as rows, columns, cells.
            </summary>
        </member>
        <member name="M:FastReport.Table.TableBase.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.CanContain(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.GetChildObjects(FastReport.ObjectCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.AddChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.RemoveChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.GetChildOrder(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.SetChildOrder(FastReport.Base,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.UpdateLayout(System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.SaveState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.RestoreState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.CalcWidth">
            <summary>
            Calculates and returns the table width, in pixels.
            </summary>
        </member>
        <member name="M:FastReport.Table.TableBase.CalcHeight">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.Break(FastReport.BreakableComponent)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.Sum(FastReport.Table.TableCell)">
            <summary>
            Calculates a sum of values in a specified cell.
            </summary>
            <param name="aggregateCell">The cell.</param>
            <returns>The <b>object</b> that contains calculated value.</returns>
            <remarks>
            This method can be called from the <b>ManualBuild</b> event handler only.
            </remarks>
        </member>
        <member name="M:FastReport.Table.TableBase.Min(FastReport.Table.TableCell)">
            <summary>
            Calculates a minimum of values in a specified cell.
            </summary>
            <param name="aggregateCell">The cell.</param>
            <returns>The <b>object</b> that contains calculated value.</returns>
            <remarks>
            This method can be called from the <b>ManualBuild</b> event handler only.
            </remarks>
        </member>
        <member name="M:FastReport.Table.TableBase.Max(FastReport.Table.TableCell)">
            <summary>
            Calculates a maximum of values in a specified cell.
            </summary>
            <param name="aggregateCell">The cell.</param>
            <returns>The <b>object</b> that contains calculated value.</returns>
            <remarks>
            This method can be called from the <b>ManualBuild</b> event handler only.
            </remarks>
        </member>
        <member name="M:FastReport.Table.TableBase.Avg(FastReport.Table.TableCell)">
            <summary>
            Calculates an average of values in a specified cell.
            </summary>
            <param name="aggregateCell">The cell.</param>
            <returns>The <b>object</b> that contains calculated value.</returns>
            <remarks>
            This method can be called from the <b>ManualBuild</b> event handler only.
            </remarks>
        </member>
        <member name="M:FastReport.Table.TableBase.Count(FastReport.Table.TableCell)">
            <summary>
            Calculates number of repeats of a specified cell.
            </summary>
            <param name="aggregateCell">The cell.</param>
            <returns>The <b>object</b> that contains calculated value.</returns>
            <remarks>
            This method can be called from the <b>ManualBuild</b> event handler only.
            </remarks>
        </member>
        <member name="M:FastReport.Table.TableBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Table.TableBase"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Table.TableLayout">
            <summary>
            Specifies the layout that will be used when printing a big table.
            </summary>
        </member>
        <member name="F:FastReport.Table.TableLayout.AcrossThenDown">
            <summary>
            The table is printed across a pages then down.
            </summary>
        </member>
        <member name="F:FastReport.Table.TableLayout.DownThenAcross">
            <summary>
            The table is printed down then across a pages.
            </summary>
        </member>
        <member name="F:FastReport.Table.TableLayout.Wrapped">
            <summary>
            The table is wrapped.
            </summary>
        </member>
        <member name="T:FastReport.Table.CellDuplicates">
            <summary>
            Specifies how to display the duplicate values.
            </summary>
        </member>
        <member name="F:FastReport.Table.CellDuplicates.Show">
            <summary>
            The <b>TableCell</b> can show duplicate values.
            </summary>
        </member>
        <member name="F:FastReport.Table.CellDuplicates.Clear">
            <summary>
            The <b>TableCell</b> with duplicate value will be shown but with no text.
            </summary>
        </member>
        <member name="F:FastReport.Table.CellDuplicates.Merge">
            <summary>
            Several <b>TableCell</b> objects with the same value will be merged into one object.
            </summary>
        </member>
        <member name="F:FastReport.Table.CellDuplicates.MergeNonEmpty">
            <summary>
            Several <b>TableCell</b> objects with the same non-empty value will be merged into one object.
            </summary>
        </member>
        <member name="T:FastReport.Table.TableCell">
            <summary>
            Represents a table cell.
            </summary>
            <remarks>
            Use <see cref="P:FastReport.Table.TableCell.ColSpan"/>, <see cref="P:FastReport.Table.TableCell.RowSpan"/> properties to set the cell's 
            column and row spans. To put an object inside the cell, use its <see cref="P:FastReport.Table.TableCell.Objects"/> property:
            <code>
            TableCell cell1;
            PictureObject picture1 = new PictureObject();
            picture1.Bounds = new RectangleF(0, 0, 32, 32);
            picture1.Name = "Picture1";
            cell1.Objects.Add(picture1);
            </code>
            </remarks>
        </member>
        <member name="P:FastReport.Table.TableCell.Objects">
            <summary>
            Gets a collection of objects contained in this cell.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCell.ColSpan">
            <summary>
            Gets or sets the column span for this cell.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCell.RowSpan">
            <summary>
            Gets or sets the row span for this cell.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCell.Text">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Table.TableCell.CellDuplicates">
            <summary>
            Gets or sets a value that determines how to display duplicate values in the cells of the same group.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCell.CellData">
            <summary>
            Ges or sets data associated with this cell. For internal use only.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCell.Address">
            <summary>
            Gets the address of this cell.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCell.Width">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCell.Height">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCell.AbsLeft">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Table.TableCell.AbsTop">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Table.TableCell.Table">
            <summary>
            Gets the <b>TableBase</b> object which this cell belongs to.
            </summary>
        </member>
        <member name="M:FastReport.Table.TableCell.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableCell.Clone">
            <summary>
            Creates the exact copy of this cell.
            </summary>
            <returns>The copy of this cell.</returns>
        </member>
        <member name="M:FastReport.Table.TableCell.Equals(FastReport.Table.TableCell)">
            <summary>
            Determines if two cells have identical settings.
            </summary>
            <param name="cell">Cell to compare with.</param>
            <returns><b>true</b> if cells are equal.</returns>
        </member>
        <member name="M:FastReport.Table.TableCell.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableCell.SetStyle(FastReport.Table.TableCell)">
            <summary>
            Changes the cell's style.
            </summary>
            <param name="style">The new style.</param>
            <remarks>
            Each cell in a dynamic table object (or in a matrix) has associated style. 
            Several cells may share one style. If you try to change the cell's appearance directly 
            (like setting cell.TextColor), it may affect other cells in the table. 
            To change the single cell, use this method.
            </remarks>
        </member>
        <member name="M:FastReport.Table.TableCell.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableCell.SaveState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableCell.RestoreState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableCell.GetData">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableCell.CanContain(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableCell.GetChildObjects(FastReport.ObjectCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableCell.AddChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableCell.RemoveChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableCell.GetChildOrder(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableCell.SetChildOrder(FastReport.Base,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableCell.UpdateLayout(System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableCell.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Table.TableCell"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Table.TableCellData">
            <summary>
            Represents data of the table cell.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCellData.Table">
            <summary>
            Gets or sets parent table of the cell.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCellData.Objects">
            <summary>
            Gets or sets objects collection of the cell.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCellData.Text">
            <summary>
            Gets or sets text of the table cell.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCellData.Value">
            <summary>
            Gets or sets value of the table cell.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCellData.HyperlinkValue">
            <summary>
            Gets or sets hyperlink value of the table cell.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCellData.ColSpan">
            <summary>
            Gets or sets column span of the table cell.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCellData.RowSpan">
            <summary>
            Gets or sets row span of the table cell.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCellData.Address">
            <summary>
            Gets or sets the address of the table cell.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCellData.Cell">
            <summary>
            Gets the table cell.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCellData.Style">
            <summary>
            Gets style of table cell.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCellData.OriginalCell">
            <summary>
            Gets original the table cell.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCellData.Width">
            <summary>
            Gets width of the table cell.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCellData.Height">
            <summary>
            Gets height of the table cell.
            </summary>
        </member>
        <member name="M:FastReport.Table.TableCellData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Table.TableCellData"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Table.TableCellData.AttachCell(FastReport.Table.TableCell)">
            <summary>
            Attaches the specified table cell.
            </summary>
            <param name="cell">The table cell instance.</param>
            <remarks>This method is called when we load the table.</remarks>
        </member>
        <member name="M:FastReport.Table.TableCellData.Assign(FastReport.Table.TableCellData)">
            <summary>
            Assigns another <see cref="T:FastReport.Table.TableCellData"/> instance.
            </summary>
            <param name="source">The table cell data that used as a source.</param>
            <remarks>This method is called when we copy cells or clone columns/rows in a designer.</remarks>
        </member>
        <member name="M:FastReport.Table.TableCellData.RunTimeAssign(FastReport.Table.TableCell,System.Boolean)">
            <summary>
            Assigns another <see cref="T:FastReport.Table.TableCellData"/> instance at run time.
            </summary>
            <param name="cell">The table cell data that used as a source.</param>
            <param name="copyChildren">This flag shows should children be copied or not.</param>
            <remarks>This method is called when we print a table. We should create a copy of the cell and set the style.</remarks>
        </member>
        <member name="M:FastReport.Table.TableCellData.SetStyle(FastReport.Table.TableCell)">
            <summary>
            Sets style of the table cell.
            </summary>
            <param name="style">The new style of the table cell.</param>
        </member>
        <member name="M:FastReport.Table.TableCellData.Dispose">
            <summary>
            Disposes the <see cref="T:FastReport.Table.TableCellData"/> instance.
            </summary>
        </member>
        <member name="M:FastReport.Table.TableCellData.CalcWidth">
            <summary>
            Calculates width of the table cell.
            </summary>
            <returns>The value of the table cell width.</returns>
        </member>
        <member name="M:FastReport.Table.TableCellData.CalcHeight(System.Single)">
            <summary>
            Calculates height of the table cell.
            </summary>
            <param name="width">The width of the table cell.</param>
            <returns>The value of the table cell height.</returns>
        </member>
        <member name="T:FastReport.Table.TableColumn">
            <summary>
            Represents a table column.
            </summary>
            <remarks>
            Use the <see cref="P:FastReport.Table.TableColumn.Width"/> property to set the width of a column. If <see cref="P:FastReport.Table.TableColumn.AutoSize"/>
            property is <b>true</b>, the column will calculate its width automatically.
            <para/>You can also set the <see cref="P:FastReport.Table.TableColumn.MinWidth"/> and <see cref="P:FastReport.Table.TableColumn.MaxWidth"/> properties
            to restrict the column's width.
            </remarks>
        </member>
        <member name="P:FastReport.Table.TableColumn.Width">
            <summary>
            Gets or sets a width of the column, in pixels.
            </summary>
            <remarks>
            The column width cannot exceed the range defined by the <see cref="P:FastReport.Table.TableColumn.MinWidth"/> 
            and <see cref="P:FastReport.Table.TableColumn.MaxWidth"/> properties.
            <note>To convert between pixels and report units, use the constants defined 
            in the <see cref="T:FastReport.Utils.Units"/> class.</note>
            </remarks>
        </member>
        <member name="P:FastReport.Table.TableColumn.MinWidth">
            <summary>
            Gets or sets the minimal width for this column, in pixels.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableColumn.MaxWidth">
            <summary>
            Gets or sets the maximal width for this column, in pixels.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableColumn.AutoSize">
            <summary>
            Gets or sets a value determines if the column should calculate its width automatically.
            </summary>
            <remarks>
            The column width cannot exceed the range defined by the <see cref="P:FastReport.Table.TableColumn.MinWidth"/> 
            and <see cref="P:FastReport.Table.TableColumn.MaxWidth"/> properties.
            </remarks>
        </member>
        <member name="P:FastReport.Table.TableColumn.Index">
            <summary>
            Gets the index of this column.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableColumn.Left">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Table.TableColumn.PageBreak">
            <summary>
            Gets or sets the page break flag for this column.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableColumn.KeepColumns">
            <summary>
            Gets or sets the number of columns to keep on the same page.
            </summary>
        </member>
        <member name="M:FastReport.Table.TableColumn.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableColumn.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableColumn.Clear">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Table.TableColumn"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Table.TableColumnCollection">
            <summary>
            Represents a collection of <see cref="T:FastReport.Table.TableColumn"/> objects.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableColumnCollection.Item(System.Int32)">
            <summary>
            Gets a column with specified index.
            </summary>
            <param name="index">Index of a column.</param>
            <returns>The column with specified index.</returns>
        </member>
        <member name="M:FastReport.Table.TableColumnCollection.OnInsert(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableColumnCollection.OnRemove(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Table.TableObject">
            <summary>
            Represents a table object that consists of several rows and columns.
            </summary>
            <remarks>
            <para/>To add/remove columns, use the <see cref="P:FastReport.Table.TableBase.Columns"/> collection. To add/remove 
            rows, use the <see cref="P:FastReport.Table.TableBase.Rows"/> collection. To initialize a table with specified number of
            columns and rows, use <see cref="P:FastReport.Table.TableObject.ColumnCount"/> and <see cref="P:FastReport.Table.TableObject.RowCount"/> properties.
            <para/>To print a table in code, use the <see cref="E:FastReport.Table.TableObject.ManualBuild"/> event. In the manual build
            mode, you can use aggregate functions. The following functions available:
            <list type="table">
              <listheader>
                <term>Aggregate function</term>
                <description>Description</description>
              </listheader>
              <item>
                <term>Sum(cell)</term>
                <description>Calculates the sum of values in specified table cell.</description>
              </item>
              <item>
                <term>Min(cell)</term>
                <description>Calculates the minimum of values in specified table cell.</description>
              </item>
              <item>
                <term>Max(cell)</term>
                <description>Calculates the maximum of values in specified table cell.</description>
              </item>
              <item>
                <term>Avg(cell)</term>
                <description>Calculates the average of values in specified table cell.</description>
              </item>
              <item>
                <term>Count(cell)</term>
                <description>Calculates the number of repeats of a specified table cell.</description>
              </item>
            </list>
            <para/>To print aggregate value, place the aggregate function call in the table cell:
            <c>[Count(Cell2)]</c>. 
            </remarks>
        </member>
        <member name="E:FastReport.Table.TableObject.ManualBuild">
            <summary>
            Allows to print table rows/columns dynamically.
            </summary>
            <remarks>
            This event is used to handle the table print process in a code. Using special methods
            like <see cref="M:FastReport.Table.TableObject.PrintRow(System.Int32)"/>, <see cref="M:FastReport.Table.TableObject.PrintColumn(System.Int32)"/> you can print specified rows/columns.
            
            <para/>First way is to repeat specified row(s) to get a table that will grow downwards. 
            To do this, you have to call the <b>PrintRow</b> method followed by the <b>PrintColumns</b> method.
            
            <para/>Another way is to repeat the specified column(s) to get a table that grows sidewards.
            To do this, call the <b>PrintColumn</b> method followed by the <b>PrintRows</b> method.
            
            <para/>Finally, the third way is to repeat rows and columns. The table will grow downwards and
            sidewards. To do this, call the <b>PrintRow</b> method followed by the <b>PrintColumn</b>
            method (or vice versa).
            
            <para/>
            <note type="caution">
            When you print a table row-by-row, you must call one of the <b>PrintColumn</b>,
            <b>PrintColumns</b> methods right after the <b>PrintRow</b> method. 
            In the same manner, when you print a table column-by-column, call one of the 
            <b>PrintRow</b>, <b>PrintRows</b> methods right after the <b>PrintColumn</b> method. 
            If you ignore this rule you will get an exception.
            </note>
            </remarks>
            <example>
            In this example, we will consider all three ways to print a table which has 3 rows and 3 columns.
            <para/>Case 1: print a table downwards.
            <code>
            // print table header (the first row)
            Table1.PrintRow(0);
            Table1.PrintColumns();
            // print table body (the second row)
            for (int i = 0; i &lt; 10; i++)
            {
              Table1.PrintRow(1);
              Table1.PrintColumns();
            }
            // print table footer (the third row)
            Table1.PrintRow(2);
            Table1.PrintColumns();
            </code>
            
            <para/>Case 2: print a table sidewards.
            <code>
            // print table header (the first column)
            Table1.PrintColumn(0);
            Table1.PrintRows();
            // print table body (the second column)
            for (int i = 0; i &lt; 10; i++)
            {
              Table1.PrintColumn(1);
              Table1.PrintRows();
            }
            // print table footer (the third column)
            Table1.PrintColumn(2);
            Table1.PrintRows();
            </code>
            
            <para/>Case 3: print a table downwards and sidewards.
            <code>
            // print the first row with all its columns
            Table1.PrintRow(0);
            // print header column
            Table1.PrintColumn(0);
            // print 10 data columns
            for (int i = 0; i &lt; 10; i++)
            {
              Table1.PrintColumn(1);
            }
            // print footer column
            Table1.PrintColumn(2);
            
            // print table body (the second row)
            for (int i = 0; i &lt; 10; i++)
            {
              // print data row with all its columns
              Table1.PrintRow(1);
              Table1.PrintColumn(0);
              for (int j = 0; j &lt; 10; j++)
              {
                Table1.PrintColumn(1);
              }
              Table1.PrintColumn(2);
            }
            
            // print table footer (the third row)
            Table1.PrintRow(2);
            // again print all columns in the table footer
            Table1.PrintColumn(0);
            for (int i = 0; i &lt; 10; i++)
            {
              Table1.PrintColumn(1);
            }
            Table1.PrintColumn(2);
            </code>
            </example>
        </member>
        <member name="P:FastReport.Table.TableObject.ManualBuildEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Table.TableObject.ManualBuild"/> event.
            </summary>
            <remarks>
            If you use this event, you must handle the table print process manually.
            See the <see cref="E:FastReport.Table.TableObject.ManualBuild"/> event for details.
            </remarks>
        </member>
        <member name="P:FastReport.Table.TableObject.ManualBuildAutoSpans">
            <summary>
            Determines whether to manage cell spans automatically during manual build.
            </summary>
            <remarks>
            The default value for this property is <b>true</b>. If you set it to <b>false</b>, you need to manage
            spans in your ManualBuild event handler.
            </remarks>
        </member>
        <member name="P:FastReport.Table.TableObject.ColumnCount">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Table.TableObject.RowCount">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableObject.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableObject.GetCustomScript">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableObject.SaveState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableObject.RestoreState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableObject.GetData">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableObject.OnManualBuild(System.EventArgs)">
            <summary>
            This method fires the <b>ManualBuild</b> event and the script code connected to the <b>ManualBuildEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Table.TableObject.PrintRow(System.Int32)">
            <summary>
            Prints a row with specified index.
            </summary>
            <param name="index">Index of a row to print.</param>
            <remarks>
            See the <see cref="E:FastReport.Table.TableObject.ManualBuild"/> event for more details.
            </remarks>
        </member>
        <member name="M:FastReport.Table.TableObject.PrintRows(System.Int32[])">
            <summary>
            Prints rows with specified indices.
            </summary>
            <param name="indices">Indices of rows to print.</param>
            <remarks>
            See the <see cref="E:FastReport.Table.TableObject.ManualBuild"/> event for more details.
            </remarks>
        </member>
        <member name="M:FastReport.Table.TableObject.PrintRows">
            <summary>
            Prints all rows.
            </summary>
            <remarks>
            See the <see cref="E:FastReport.Table.TableObject.ManualBuild"/> event for more details.
            </remarks>
        </member>
        <member name="M:FastReport.Table.TableObject.PrintColumn(System.Int32)">
            <summary>
            Prints a column with specified index.
            </summary>
            <param name="index">Index of a column to print.</param>
            <remarks>
            See the <see cref="E:FastReport.Table.TableObject.ManualBuild"/> event for more details.
            </remarks>
        </member>
        <member name="M:FastReport.Table.TableObject.PrintColumns(System.Int32[])">
            <summary>
            Prints columns with specified indices.
            </summary>
            <param name="indices">Indices of columns to print.</param>
            <remarks>
            See the <see cref="E:FastReport.Table.TableObject.ManualBuild"/> event for more details.
            </remarks>
        </member>
        <member name="M:FastReport.Table.TableObject.PrintColumns">
            <summary>
            Prints all columns.
            </summary>
            <remarks>
            See the <see cref="E:FastReport.Table.TableObject.ManualBuild"/> event for more details.
            </remarks>
        </member>
        <member name="M:FastReport.Table.TableObject.PageBreak">
            <summary>
            Adds a page before rows or columns.
            </summary>
            <remarks>
            Call this method to insert a page break before the next row or column that you intend to print
            using <b>PrintRow(s)</b> or <b>PrintColumn(s)</b> methods.
            See the <see cref="E:FastReport.Table.TableObject.ManualBuild"/> event for more details.
            </remarks>
        </member>
        <member name="M:FastReport.Table.TableObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Table.TableObject"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Table.TableResult">
            <summary>
            Represents a result table.
            </summary>
            <remarks>
            Do not use this class directly. It is used by the <see cref="T:FastReport.Table.TableObject"/> and 
            <see cref="T:FastReport.Matrix.MatrixObject"/> objects to render a result.
            </remarks>
        </member>
        <member name="E:FastReport.Table.TableResult.AfterCalcBounds">
            <summary>
            Occurs after calculation of table bounds.
            </summary>
            <remarks>
            You may use this event to change automatically calculated rows/column sizes. It may be useful
            if you need to fit dynamically printed table on a page.
            </remarks>
        </member>
        <member name="M:FastReport.Table.TableResult.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableResult.GetChildObjects(FastReport.ObjectCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableResult.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:FastReport.Table.TableResult"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Table.TableRow">
            <summary>
            Represents a table row.
            </summary>
            <remarks>
            Use the <see cref="P:FastReport.Table.TableRow.Height"/> property to set the height of a row. If <see cref="P:FastReport.Table.TableRow.AutoSize"/>
            property is <b>true</b>, the row will calculate its height automatically.
            <para/>You can also set the <see cref="P:FastReport.Table.TableRow.MinHeight"/> and <see cref="P:FastReport.Table.TableRow.MaxHeight"/> properties
            to restrict the row's height.
            </remarks>
        </member>
        <member name="P:FastReport.Table.TableRow.Height">
            <summary>
            Gets or sets a height of the row, in pixels.
            </summary>
            <remarks>
            The row height cannot exceed the range defined by the <see cref="P:FastReport.Table.TableRow.MinHeight"/> 
            and <see cref="P:FastReport.Table.TableRow.MaxHeight"/> properties.
            <note>To convert between pixels and report units, use the constants defined 
            in the <see cref="T:FastReport.Utils.Units"/> class.</note>
            </remarks>
        </member>
        <member name="P:FastReport.Table.TableRow.MinHeight">
            <summary>
            Gets or sets the minimal height for this row, in pixels.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableRow.MaxHeight">
            <summary>
            Gets or sets the maximal height for this row, in pixels.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableRow.AutoSize">
            <summary>
            Gets or sets a value determines if the row should calculate its height automatically.
            </summary>
            <remarks>
            The row height cannot exceed the range defined by the <see cref="P:FastReport.Table.TableRow.MinHeight"/> 
            and <see cref="P:FastReport.Table.TableRow.MaxHeight"/> properties.
            </remarks>
        </member>
        <member name="P:FastReport.Table.TableRow.CanBreak">
            <summary>
            Gets or sets a value that determines if the component can break its contents across pages.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableRow.Index">
            <summary>
            Gets the index of this row.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableRow.Top">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Table.TableRow.Item(System.Int32)">
            <summary>
            Gets or sets the cell with specified index.
            </summary>
            <param name="col">Column index.</param>
            <returns>The <b>TableCell</b> object.</returns>
        </member>
        <member name="P:FastReport.Table.TableRow.PageBreak">
            <summary>
            Gets or sets the page break flag for this row.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableRow.KeepRows">
            <summary>
            Gets or sets the number of rows to keep on the same page.
            </summary>
        </member>
        <member name="M:FastReport.Table.TableRow.CanContain(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableRow.GetChildObjects(FastReport.ObjectCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableRow.AddChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableRow.RemoveChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableRow.GetChildOrder(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableRow.SetChildOrder(FastReport.Base,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableRow.UpdateLayout(System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableRow.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableRow.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableRow.Clear">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableRow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Table.TableRow"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Table.TableRowCollection">
            <summary>
            Represents a collection of <see cref="T:FastReport.Table.TableRow"/> objects.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableRowCollection.Item(System.Int32)">
            <summary>
            Gets a row with specified index.
            </summary>
            <param name="index">Index of a row.</param>
            <returns>The row with specified index.</returns>
        </member>
        <member name="M:FastReport.Table.TableRowCollection.OnInsert(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableRowCollection.OnRemove(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.TextObject">
            <summary>
            Represents the Text object that may display one or several text lines.
            </summary>
            <remarks>
            Specify the object's text in the <see cref="P:FastReport.TextObjectBase.Text">Text</see> property. 
            Text may contain expressions and data items, for example: "Today is [Date]". When report 
            is running, all expressions are calculated and replaced with actual values, so the text 
            would be "Today is 01.01.2008".
            <para/>The symbols used to find expressions in a text are set in the 
            <see cref="P:FastReport.TextObjectBase.Brackets">Brackets</see> property. You also may disable expressions 
            using the <see cref="P:FastReport.TextObjectBase.AllowExpressions">AllowExpressions</see> property.
            <para/>To format an expression value, use the <see cref="N:FastReport.Format"/> property.
            </remarks>
        </member>
        <member name="P:FastReport.TextObject.ParagraphFormat">
            <summary>
            Gets or sets a paragraph format for a new html rendering type, not for others rendering
            </summary>
        </member>
        <member name="P:FastReport.TextObject.AutoWidth">
            <summary>
            Gets or sets a value that determines if the text object should handle its width automatically.
            </summary>
        </member>
        <member name="P:FastReport.TextObject.AutoShrink">
            <summary>
            Gets or sets a value that indicates whether the font size should shrink to
            display the longest text line without word wrap.
            </summary>
            <remarks>
            To limit the minimum size, use the <see cref="P:FastReport.TextObject.AutoShrinkMinSize"/> property.
            </remarks>
        </member>
        <member name="P:FastReport.TextObject.AutoShrinkMinSize">
            <summary>
            Gets or sets the minimum size of font (or minimum width ratio) if the <see cref="P:FastReport.TextObject.AutoShrink"/>
            mode is on.
            </summary>
            <remarks>
            This property determines the minimum font size (in case the <see cref="P:FastReport.TextObject.AutoShrink"/> property is set to
            <b>FontSize</b>), or the minimum font width ratio (if <b>AutoShrink</b> is set to <b>FontWidth</b>).
            <para/>The default value is 0, that means no limits.
            </remarks>
        </member>
        <member name="P:FastReport.TextObject.HorzAlign">
            <summary>
            Gets or sets the horizontal alignment of a text in the TextObject object.
            </summary>
        </member>
        <member name="P:FastReport.TextObject.VertAlign">
            <summary>
            Gets or sets the vertical alignment of a text in the TextObject object.
            </summary>
        </member>
        <member name="P:FastReport.TextObject.Angle">
            <summary>
            Gets or sets the text angle, in degrees.
            </summary>
        </member>
        <member name="P:FastReport.TextObject.RightToLeft">
            <summary>
            Gets or sets a value that indicates whether the component should draw right-to-left for RTL languages.
            </summary>
        </member>
        <member name="P:FastReport.TextObject.WordWrap">
            <summary>
            Gets or sets a value that indicates if lines are automatically word-wrapped.
            </summary>
        </member>
        <member name="P:FastReport.TextObject.Underlines">
            <summary>
            Gets or sets a value that determines if the text object will underline each text line.
            </summary>
        </member>
        <member name="P:FastReport.TextObject.Font">
            <summary>
            Gets or sets the font settings for this object.
            </summary>
        </member>
        <member name="P:FastReport.TextObject.TabPositions">
            <summary>
            Gets or sets a collection of TAB symbol positions, in pixels.
            </summary>
            <remarks>Use collection methods to add or remove TAB positions.</remarks>
        </member>
        <member name="P:FastReport.TextObject.TextFill">
            <summary>
            Gets or sets the fill color used to draw a text.
            </summary>
            <remarks>
            Default fill is <see cref="T:FastReport.SolidFill"/>. You may specify other fill types, for example:
            <code>
            text1.TextFill = new HatchFill(Color.Black, Color.White, HatchStyle.Cross);
            </code>
            Use the <see cref="P:FastReport.TextObject.TextColor"/> property to set the solid text color.
            </remarks>
        </member>
        <member name="P:FastReport.TextObject.TextOutline">
            <summary>
            Gets or sets the text outline.
            </summary>
        </member>
        <member name="P:FastReport.TextObject.TextColor">
            <summary>
            Gets or sets the text color in a simple manner.
            </summary>
            <remarks>
            This property can be used in a report script to change the text color of the object. It is 
            equivalent to: <code>textObject1.TextFill = new SolidFill(color);</code>
            </remarks>
        </member>
        <member name="P:FastReport.TextObject.Trimming">
            <summary>
            Gets or sets the string trimming options.
            </summary>
        </member>
        <member name="P:FastReport.TextObject.FontWidthRatio">
            <summary>
            Gets or sets the width ratio of the font. 
            </summary>
            <remarks>
            Default value is 1. To make a font wider, set a value grether than 1; to make a font narrower,
            set a value less than 1.
            </remarks>
        </member>
        <member name="P:FastReport.TextObject.LineHeight">
            <summary>
            Gets or sets the height of single text line, in pixels.
            </summary>
        </member>
        <member name="P:FastReport.TextObject.FirstTabOffset">
            <summary>
            Gets or sets the offset of the first TAB symbol.
            </summary>
        </member>
        <member name="P:FastReport.TextObject.TabWidth">
            <summary>
            Gets or sets the width of TAB symbol, in pixels.
            </summary>
        </member>
        <member name="P:FastReport.TextObject.Clip">
            <summary>
            Gets or sets a value that indicates if text should be clipped inside the object's bounds.
            </summary>
        </member>
        <member name="P:FastReport.TextObject.Highlight">
            <summary>
            Gets the collection of conditional highlight attributes.
            </summary>
            <remarks>
            Conditional highlight is used to change the visual appearance of the Text object
            depending on some condition(s). For example, you may highlight negative values displayed by
            the Text object with red color. To do this, add the highlight condition:
            <code>
            TextObject text1;
            HighlightCondition highlight = new HighlightCondition();
            highlight.Expression = "Value &lt; 0";
            highlight.Fill = new SolidFill(Color.Red);
            highlight.ApplyFill = true;
            text1.Highlight.Add(highlight);
            </code>
            </remarks>
        </member>
        <member name="P:FastReport.TextObject.Wysiwyg">
            <summary>
            Gets or sets a value that indicates if the text object should display its contents similar to the printout.
            </summary>
        </member>
        <member name="P:FastReport.TextObject.ForceJustify">
            <summary>
            Forces justify for the last text line.
            </summary>
        </member>
        <member name="P:FastReport.TextObject.HtmlTags">
            <summary>
            Allows handling html tags in the text.
            </summary>
            <remarks>
            The following html tags can be used in the object's text: &lt;b&gt;, &lt;i&gt;, &lt;u&gt;,
            &lt;strike&gt;, &lt;sub&gt;, &lt;sup&gt;, &lt;/b&gt;, &lt;/i&gt;, &lt;/u&gt;,
            &lt;/strike&gt;, &lt;/sub&gt;, &lt;/sup&gt;,
            &lt;font color=&amp;...&amp;&gt;, &lt;/font&gt;. Font size cannot
            be changed due to limitations in the rendering engine.
            </remarks>
        </member>
        <member name="P:FastReport.TextObject.HasHtmlTags">
            <summary>
            Indicates handling html tags in the text.
            </summary>
            <remarks>To set the value use the TextRenderer property.</remarks>
        </member>
        <member name="P:FastReport.TextObject.TextRenderType">
            <summary>
            The type of text render
            </summary>
                /// <remarks>
            The following html tags can be used in the object's text: &lt;b&gt;, &lt;i&gt;, &lt;u&gt;,
            &lt;strike&gt;, &lt;sub&gt;, &lt;sup&gt;, &lt;/b&gt;, &lt;/i&gt;, &lt;/u&gt;,
            &lt;/strike&gt;, &lt;/sub&gt;, &lt;/sup&gt;,
            &lt;font color=&amp;...&amp;&gt;, &lt;/font&gt;. Font size cannot
            be changed due to limitations in the rendering engine.
            </remarks>
        </member>
        <member name="P:FastReport.TextObject.ParagraphOffset">
            <summary>
            Gets or sets the paragraph offset, in pixels. For HtmlParagraph use ParagraphFormat.FirstLineIndent.
            </summary>
        </member>
        <member name="P:FastReport.TextObject.InlineImageCache">
            <summary>
            Cache for inline images
            </summary>
        </member>
        <member name="M:FastReport.TextObject.DeserializeSubItems(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.GetStringFormat(FastReport.GraphicCache,System.Drawing.StringFormatFlags)">
            <summary>
            Returns StringFormat object.
            </summary>
            <param name="cache">Report graphic cache.</param>
            <param name="flags">StringFormat flags.</param>
            <returns>StringFormat object.</returns>
        </member>
        <member name="M:FastReport.TextObject.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.GetHtmlTextRenderer(System.Single,System.Single)">
            <summary>
            Returns an instance of html text renderer.
            </summary>
            <param name="scale">Scale ratio.</param>
            <param name="fontScale">Font scale ratio.</param>
            <returns>The html text renderer.</returns>
        </member>
        <member name="M:FastReport.TextObject.DrawText(FastReport.Utils.FRPaintEventArgs)">
            <summary>
            Draws a text.
            </summary>
            <param name="e">Paint event data.</param>
        </member>
        <member name="M:FastReport.TextObject.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.ApplyStyle(FastReport.Style)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.SaveStyle">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.RestoreStyle">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.SaveState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.RestoreState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.CalcWidth">
            <summary>
            Calculates the object's width.
            </summary>
            <returns>The width, in pixels.</returns>
        </member>
        <member name="M:FastReport.TextObject.CalcHeight">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.GetData">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.Break(FastReport.BreakableComponent)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.TextObject"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Utils.Config">
            <summary>
            Contains some configuration properties and settings that will be applied to the FastReport.Net
            environment, including Report, Designer and Preview components.
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.FullTrust">
            <summary>
            Gets a value indicating that the ASP.NET hosting permission level is set to full trust.
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.WebMode">
            <summary>
            Gets a value that determines whether to disable some functionality to run in web mode.
            </summary>
            <remarks>
            Use this property if you use FastReport in ASP.Net. Set this property to <b>true</b> <b>before</b>
            you access any FastReport.Net objects.
            </remarks>
        </member>
        <member name="P:FastReport.Utils.Config.IsRunningOnMono">
            <summary>
            Gets a value indicating that the Mono runtime is used.
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.ForbidLocalData">
            <summary>
            Gets or sets a value indicating is it impossible to specify a local data path in Xml and Csv.
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.IsStringOptimization">
            <summary>
            Gets or sets the optimization of strings. Is experimental feature.
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.PreparedCompressed">
            <summary>
            Enable or disable the compression in files with prepared reports (fpx).
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.ApplicationFolder">
            <summary>
            Gets the application folder.
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.EngCultureInfo">
            <summary>
            Gets an english culture information for localization purposes
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.Folder">
            <summary>
            Gets or sets the path used to load/save the configuration file.
            </summary>
            <remarks>
            By default, the configuration file is saved to the application local data folder
            (C:\Documents and Settings\User_Name\Local Settings\Application Data\FastReport\).
            Set this property to "" if you want to store the configuration file in the application folder.
            </remarks>
        </member>
        <member name="P:FastReport.Utils.Config.FontListFolder">
            <summary>
            Gets or sets the path used to font.list file.
            </summary>
            <remarks>
            By default, the font.list file is saved to the FastReport.config folder
            If WebMode enabled (or config file path is null), then file is saved in the application folder.
            </remarks>
        </member>
        <member name="P:FastReport.Utils.Config.ReportSettings">
            <summary>
            Gets or sets the settings for the Report component.
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.RightToLeft">
            <summary>
            Gets or sets a value indicating whether RTL layout should be used.
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.DisableHotkeys">
            <summary>
            Gets or sets a value indicating whether hotkeys should be disabled.
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.Root">
            <summary>
            Gets the root item of config xml.
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.TempFolder">
            <summary>
            Gets or sets the path to the temporary folder used to store temporary files.
            </summary>
            <remarks>
            The default value is <b>null</b>, so the system temp folder will be used.
            </remarks>
        </member>
        <member name="P:FastReport.Utils.Config.SystemTempFolder">
            <summary>
            Gets the path to the system temporary folder used to store temporary files.
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.Version">
            <summary>
            Gets FastReport version.
            </summary>
        </member>
        <member name="E:FastReport.Utils.Config.ScriptCompile">
            <summary>
            Called on script compile
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.PrivateFontCollection">
            <summary>
            Gets a PrivateFontCollection instance.
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.EnableScriptSecurity">
            <summary>
            Enable report script validation. For WebMode only
            </summary>
        </member>
        <member name="E:FastReport.Utils.Config.OnEnableScriptSecurityChanged">
            <summary>
            Throws when property EnableScriptSecurity has been changed
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.ScriptSecurityProps">
            <summary>
            Properties of report script validation
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.CompilerSettings">
            <summary>
            Settings of report compiler.
            </summary>
        </member>
        <member name="T:FastReport.Utils.Config.ScriptSecurityProperties">
            <summary>
            Properties of ScriptSecurity
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.ScriptSecurityProperties.AddStubClasses">
            <summary>
            Add stubs for the most dangerous classes (in System.IO, System.Reflection etc) 
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.ScriptSecurityProperties.StopList">
            <summary>
            List of keywords that shouldn't be declared in the report script
            </summary>
        </member>
        <member name="E:FastReport.Utils.Config.ScriptSecurityProperties.OnStopListChanged">
            <summary>
            Throws when <see cref="P:FastReport.Utils.Config.ScriptSecurityProperties.StopList"/> has changed
            </summary>
        </member>
        <member name="M:FastReport.Utils.Config.ScriptSecurityProperties.SetDefaultStopList">
            <summary>
            Sets default value for <see cref="P:FastReport.Utils.Config.ScriptSecurityProperties.StopList"/>
            </summary>
        </member>
        <member name="T:FastReport.Utils.ExportsOptions">
            <summary>
            Class for handling Exports visibility in the Preview control.
            </summary>
        </member>
        <member name="P:FastReport.Utils.ExportsOptions.ExportsMenu">
            <summary>
            All exports available in the Preview control.
            </summary>
        </member>
        <member name="M:FastReport.Utils.ExportsOptions.GetInstance">
            <summary>
            Gets an instance of ExportOptions.
            </summary>
            <returns></returns>
        </member>
        <member name="T:FastReport.Utils.ExportsOptions.ExportsTreeNode">
            <summary>
            Exports menu node.
            </summary>
        </member>
        <member name="P:FastReport.Utils.ExportsOptions.ExportsTreeNode.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:FastReport.Utils.ExportsOptions.ExportsTreeNode.Nodes">
            <summary>
            Gets nodes.
            </summary>
        </member>
        <member name="P:FastReport.Utils.ExportsOptions.ExportsTreeNode.ExportType">
            <summary>
            Gets type of the export.
            </summary>
        </member>
        <member name="P:FastReport.Utils.ExportsOptions.ExportsTreeNode.ImageIndex">
            <summary>
            Gets index of the image.
            </summary>
        </member>
        <member name="P:FastReport.Utils.ExportsOptions.ExportsTreeNode.Tag">
            <summary>
            Gets or sets the tag.
            </summary>
        </member>
        <member name="P:FastReport.Utils.ExportsOptions.ExportsTreeNode.Enabled">
            <summary>
            Gets or sets a value that indicates is node enabled.
            </summary>
        </member>
        <member name="P:FastReport.Utils.ExportsOptions.ExportsTreeNode.IsExport">
            <summary>
            Gets true if node is export, otherwise false.
            </summary>
        </member>
        <member name="M:FastReport.Utils.ExportsOptions.SaveExportOptions">
            <summary>
            Saves current visible exports in config file.
            </summary>
        </member>
        <member name="M:FastReport.Utils.ExportsOptions.RestoreExportOptions">
            <summary>
            Restores visible exports from config file.
            </summary>
        </member>
        <member name="M:FastReport.Utils.ExportsOptions.RegisterExports">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.Utils.ExportsOptions.SetExportCategoryEnabled(System.String,System.Boolean)">
            <summary>
            Sets Export category visibility.
            </summary>
            <param name="name">Export category name.</param>
            <param name="enabled">Visibility state.</param>
        </member>
        <member name="M:FastReport.Utils.ExportsOptions.SetExportEnabled(System.Type,System.Boolean)">
            <summary>
            Sets Export visibility.
            </summary>
            <param name="exportType">Export type.</param>
            <param name="enabled">Visibility state.</param>
        </member>
        <member name="T:FastReport.Utils.ObjectInfo">
            <summary>
            Holds the information about the registered object.
            </summary>
        </member>
        <member name="P:FastReport.Utils.ObjectInfo.Name">
            <summary>
            Name of object or category.
            </summary>
        </member>
        <member name="P:FastReport.Utils.ObjectInfo.Object">
            <summary>
            The registered object.
            </summary>
        </member>
        <member name="P:FastReport.Utils.ObjectInfo.Function">
            <summary>
            The registered function.
            </summary>
        </member>
        <member name="P:FastReport.Utils.ObjectInfo.Text">
            <summary>
            Tooltip text.
            </summary>
        </member>
        <member name="P:FastReport.Utils.ObjectInfo.Flags">
            <summary>
            Flags that will be used to create an object instance in the designer.
            </summary>
        </member>
        <member name="P:FastReport.Utils.ObjectInfo.MultiInsert">
            <summary>
            Indicates whether this object can be inserted several times simultaneously.
            </summary>
            <remarks>
            This is applied to Line object only.
            </remarks>
        </member>
        <member name="P:FastReport.Utils.ObjectInfo.Enabled">
            <summary>
            Gets or sets the enabled flag for the object.
            </summary>
        </member>
        <member name="P:FastReport.Utils.ObjectInfo.Items">
            <summary>
            List of subitems.
            </summary>
        </member>
        <member name="M:FastReport.Utils.ObjectInfo.EnumItems(System.Collections.Generic.ICollection{FastReport.Utils.ObjectInfo})">
            <summary>
            Enumerates all objects.
            </summary>
            <param name="list">List that will contain enumerated items.</param>
        </member>
        <member name="T:FastReport.Utils.AssemblyInitializerBase">
            <summary>
            Base class for plugin's assembly initializer.
            </summary>
            <remarks>
            FastReport has an open architecture. That means you can extend it with own classes
            such as report objects, wizards, export filters. Usually such classes are
            placed in separate dlls (plugins). FastReport has mechanism to load plugin dlls. You can specify 
            which plugins to load at first start, in the FastReport configuration file (by default it is located in the
            C:\Documents and Settings\User_Name\Local Settings\Application Data\FastReport\FastReport.config file).
            To do this, add an xml item with your plugin name inside the &lt;Plugins&gt; item:
            <code>
            &lt;?xml version="1.0" encoding="utf-8"?&gt;
            &lt;Config&gt;
              &lt;Plugins&gt;
                &lt;Plugin Name="c:\Program Files\MyProgram\MyPlugin.dll"/&gt;
              &lt;/Plugins&gt;
            &lt;/Config&gt;
            </code>
            When you run your application and use the <b>Report</b> object first time, all plugins will be loaded. 
            To register objects contained in a plugin, FastReport searches for classes of type 
            <b>AssemblyInitializerBase</b> and instantiates them.
            <para>Use this class to register custom report objects, controls, wizards, exports that
            are contained in the assembly. To do this, make your own class of the <b>AssemblyInitializerBase</b>
            type and override its default constructor. In the constructor, call <b>RegisteredObjects.Add</b>
            methods to register all necessary items.</para>
            </remarks>
        </member>
        <member name="M:FastReport.Utils.AssemblyInitializerBase.#ctor">
            <summary>
            Registers plugins contained in this assembly.
            </summary>
            <remarks>
            This constructor is called automatically when the assembly is loaded.
            </remarks>
            <example>This example show how to create own assembly initializer to register own items.
            <code>
            public class MyAssemblyInitializer : AssemblyInitializerBase
            {
              public MyAssemblyInitializer()
              {
                // register own wizard
                RegisteredObjects.AddWizard(typeof(MyWizard), myWizBmp, "My Wizard", true);
                // register own export filter
                RegisteredObjects.AddExport(typeof(MyExport), "My Export");
                // register own report object
                RegisteredObjects.Add(typeof(MyObject), "ReportPage", myObjBmp, "My Object");
              }
            }
            </code>
            </example>
        </member>
        <member name="P:FastReport.Utils.BlobStore.BlobItem.Source">
            <summary>
            Source of image, only for inline img tag
            </summary>
        </member>
        <member name="T:FastReport.Utils.CompileHelper">
            <summary>
            Class helper for compile source code with path of assemblies 
            </summary>
        </member>
        <member name="M:FastReport.Utils.CompileHelper.GenerateAssemblyInMemory(System.String,System.String[])">
            <summary>
            Generate a assembly in memory with some source code and several path for additional assemblies
            </summary>
            <param name="sourceCode"></param>
            <param name="assemblyPaths"></param>
            <returns></returns>
        </member>
        <member name="T:FastReport.Utils.CompilerExceptionBehaviour">
            <summary>
            Specifies the behaviour of compiler when exception is thrown.
            </summary>
        </member>
        <member name="F:FastReport.Utils.CompilerExceptionBehaviour.Default">
            <summary>
            Default behaviour. Throw exception.
            </summary>
        </member>
        <member name="F:FastReport.Utils.CompilerExceptionBehaviour.ShowExceptionMessage">
            <summary>
            Show exception message and replace incorrect expression by <b>Placeholder</b>.
            </summary>
        </member>
        <member name="F:FastReport.Utils.CompilerExceptionBehaviour.ReplaceExpressionWithExceptionMessage">
            <summary>
            Replace expression with exception message. Don't show any messages.
            </summary>
        </member>
        <member name="F:FastReport.Utils.CompilerExceptionBehaviour.ReplaceExpressionWithPlaceholder">
            <summary>
            Replace exception with <b>Placeholder</b> value. Don't show any messages.
            </summary>
        </member>
        <member name="T:FastReport.Utils.CompilerSettings">
            <summary>
            Contains compiler settings.
            </summary>
        </member>
        <member name="P:FastReport.Utils.CompilerSettings.Placeholder">
            <summary>
            Gets or set the string that will be used for replacing incorrect expressions.
            </summary>
        </member>
        <member name="P:FastReport.Utils.CompilerSettings.ExceptionBehaviour">
            <summary>
            Gets or sets the behaviour of compiler when exception is thrown.
            </summary>
        </member>
        <member name="M:FastReport.Utils.CompilerSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Utils.CompilerSettings"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Utils.Converter">
            <summary>
            Contains methods that peform string to object and vice versa conversions.
            </summary>
        </member>
        <member name="M:FastReport.Utils.Converter.ToString(System.Object)">
            <summary>
            Converts an object to a string.
            </summary>
            <param name="value">The object to convert.</param>
            <returns>The string that contains the converted value.</returns>
        </member>
        <member name="M:FastReport.Utils.Converter.ToString(System.Object,System.Type)">
            <summary>
            Converts a value to a string using the specified converter.
            </summary>
            <param name="value">The object to convert.</param>
            <param name="converterType">The type of converter.</param>
            <returns>The string that contains the converted value.</returns>
        </member>
        <member name="M:FastReport.Utils.Converter.FromString(System.Type,System.String)">
            <summary>
            Converts a string value to the specified data type.
            </summary>
            <param name="type">The data type to convert to.</param>
            <param name="value">The string to convert from.</param>
            <returns>The object of type specified in the <b>type</b> parameter that contains 
            a converted value.</returns>
        </member>
        <member name="M:FastReport.Utils.Converter.FromString(System.String,System.Type)">
            <summary>
            Converts a string to an object using the specified converter.
            </summary>
            <param name="value">The string to convert.</param>
            <param name="converterType">The type of converter.</param>
            <returns>The object that contains the converted value.</returns>
        </member>
        <member name="M:FastReport.Utils.Converter.ToXml(System.String)">
            <summary>
            Converts a string containing special symbols to the xml-compatible string.
            </summary>
            <param name="s">The string to convert.</param>
            <returns>The result string.</returns>
            <remarks>
            This method replaces some special symbols like &lt;, &gt; into xml-compatible 
            form: &amp;lt;, &amp;gt;. To convert such string back to original form, use the
            <see cref="M:FastReport.Utils.Converter.FromXml(System.String)"/> method.
            </remarks>
        </member>
        <member name="M:FastReport.Utils.Converter.ToXml(System.String,System.Boolean)">
            <summary>
            Converts a string containing special symbols to the xml-compatible string.
            </summary>
            <param name="s">The string to convert.</param>
            <param name="convertCrlf">Determines whether it is necessary to convert cr-lf symbols to xml form.</param>
            <returns>The result string.</returns>
        </member>
        <member name="M:FastReport.Utils.Converter.ToXml(System.Object)">
            <summary>
            Converts a value to xml-compatible string.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The result string.</returns>
        </member>
        <member name="M:FastReport.Utils.Converter.FromXml(System.String)">
            <summary>
            Convert the xml-compatible string to the regular one.
            </summary>
            <param name="s">The string to convert.</param>
            <returns>The result string.</returns>
            <remarks>
            This is counterpart to the <see cref="M:FastReport.Utils.Converter.ToXml(System.String)"/> method.
            </remarks>
        </member>
        <member name="M:FastReport.Utils.Converter.DecreasePrecision(System.Single,System.Int32)">
            <summary>
            Decreases the precision of floating-point value.
            </summary>
            <param name="value">The initial value.</param>
            <param name="precision">The number of decimal digits in the fraction.</param>
            <returns>The value with lesser precision.</returns>
        </member>
        <member name="M:FastReport.Utils.Converter.StringToFloat(System.String)">
            <summary>
            Converts a string value to the float.
            </summary>
            <param name="value">The string value to convert.</param>
            <returns>The float value.</returns>
            <remarks>
            Both "." or "," decimal separators are allowed.
            </remarks>
        </member>
        <member name="M:FastReport.Utils.Converter.StringToFloat(System.String,System.Boolean)">
            <summary>
            Converts a string value to the float.
            </summary>
            <param name="value">The string value to convert.</param>
            <param name="removeNonDigit">Indicates whether to ignore non-digit symbols.</param>
            <returns>The float value.</returns>
        </member>
        <member name="M:FastReport.Utils.Converter.StringToFloat(System.String,System.String)">
            <summary>
            Converts a string value to the float.
            </summary>
            <param name="value">The string value to convert.</param>
            <param name="separator">Decimal separator.</param>
            <returns>The float value.</returns>
        </member>
        <member name="M:FastReport.Utils.Converter.StringToFloat(System.String,System.String,System.Boolean)">
            <summary>
            Converts a string value to the float.
            </summary>
            <param name="value">The string value to convert.</param>
            <param name="separator">Decimal separator.</param>
            <param name="removeNonDigit">Indicates whether to ignore non-digit symbols.</param>
            <returns>The float value.</returns>
        </member>
        <member name="M:FastReport.Utils.Converter.StringToIList(System.String,System.Collections.IList)">
            <summary>
            Converts the string containing several text lines to a collection of strings.
            </summary>
            <param name="text">The string to convert.</param>
            <param name="list">The collection instance.</param>
        </member>
        <member name="M:FastReport.Utils.Converter.IListToString(System.Collections.IList)">
            <summary>
            Converts a collection of strings to a string.
            </summary>
            <param name="list">The collection to convert.</param>
            <returns>The string that contains all lines from the collection.</returns>
        </member>
        <member name="M:FastReport.Utils.Converter.ConvertNull(System.Type)">
            <summary>
            Converts <b>null</b> value to 0, false, empty string, depending on <b>type</b>.
            </summary>
            <param name="type">The data type.</param>
            <returns>The value of the <b>type</b> data type.</returns>
        </member>
        <member name="M:FastReport.Utils.Converter.StringToByteArray(System.String)">
            <summary>
            Converts <b>string</b> value to <b>byte[]</b>.
            </summary>
            <param name="Str">The string to convert</param>
            <returns>The value of the <b>byte[]</b> data type.</returns>
        </member>
        <member name="M:FastReport.Utils.Converter.StringToNameValueCollection(System.String)">
            <summary>
            Converts a string to NameValueCollection.
            </summary>
            <param name="text">The string to convert.</param>
            <returns>The NameValueCollection that contains the name/value pairs.</returns>
        </member>
        <member name="M:FastReport.Utils.Converter.FromHtmlEntities(System.String,System.Int32@,System.String@)">
            <summary>
            Convert &amp;amp;&amp;Tab;&amp;quot; etc to symbol and return result as string
            </summary>
            <param name="text">String for processing</param>
            <param name="position">Position for processing</param>
            <param name="result">Result of processing</param>
            <returns>True if successful</returns>
        </member>
        <member name="M:FastReport.Utils.Converter.FromHtmlEntities(System.String,System.Int32@,System.Text.StringBuilder)">
            <summary>
            Convert &amp;amp;&amp;Tab;&amp;quot; etc to symbol and return result as string
            </summary>
            <param name="text">String for processing</param>
            <param name="position">Position for processing</param>
            <param name="result">Append result of processing to FastString</param>
            <returns>True if successful</returns>
        </member>
        <member name="T:FastReport.Utils.Crc32">
            <summary>
            Calc the Crc32 checksum
            </summary>
        </member>
        <member name="M:FastReport.Utils.Crc32.Calculate(System.IO.Stream)">
            <summary>
            Caclulate Streams checksum.
            </summary>
            <param name="Stream"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.Crc32.Calculate(System.Byte[])">
            <summary>
            Calculate byte array checksum.
            </summary>
            <param name="ByteArray"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.Crc32.Calculate(System.String)">
            <summary>
            Calculate string checksum.
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.Crc32.Begin">
            <summary>
            Begin the checksum
            </summary>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.Crc32.Update(System.UInt32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Update the checksum
            </summary>
            <param name="crc"></param>
            <param name="ByteArray"></param>
            <param name="offset"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.Crc32.End(System.UInt32)">
            <summary>
            End the checksum.
            </summary>
            <param name="crc"></param>
            <returns></returns>
        </member>
        <member name="T:FastReport.Utils.Crypter">
            <summary>
            Contains methods used to crypt/decrypt a data.
            </summary>
        </member>
        <member name="P:FastReport.Utils.Crypter.DefaultPassword">
            <summary>
            Sets the password that is used to crypt connection strings stored in a report.
            </summary>
            <remarks>
            See the <see cref="P:FastReport.Data.DataConnectionBase.ConnectionString"/> property for more details.
            </remarks>
        </member>
        <member name="M:FastReport.Utils.Crypter.Encrypt(System.IO.Stream,System.String)">
            <summary>
            Crypts a stream using specified password.
            </summary>
            <param name="dest">The destination stream that will receive the crypted data.</param>
            <param name="password">The password.</param>
            <returns>The stream that you need to write to.</returns>
            <remarks>
            Pass the stream you need to write to, to the <b>dest</b> parameter. Write your data to the 
            stream that this method returns. When you close this stream, the <b>dest</b> stream will be
            closed too and contains the crypted data.
            </remarks>
        </member>
        <member name="M:FastReport.Utils.Crypter.Decrypt(System.IO.Stream,System.String)">
            <summary>
            Decrypts a stream using specified password.
            </summary>
            <param name="source">Stream that contains crypted data.</param>
            <param name="password">The password.</param>
            <returns>The stream that contains decrypted data.</returns>
            <remarks>
            You should read from the stream that this method returns.
            </remarks>
        </member>
        <member name="M:FastReport.Utils.Crypter.IsStreamEncrypted(System.IO.Stream)">
            <summary>
            Checks if the stream contains a crypt signature.
            </summary>
            <param name="stream">Stream to check.</param>
            <returns><b>true</b> if stream is crypted.</returns>
        </member>
        <member name="M:FastReport.Utils.Crypter.EncryptString(System.String)">
            <summary>
            Encrypts the string using the default password.
            </summary>
            <param name="data">String to encrypt.</param>
            <returns>The encrypted string.</returns>
            <remarks>
            The password used to encrypt a string can be set via <see cref="P:FastReport.Utils.Crypter.DefaultPassword"/> property.
            You also may use the <see cref="M:FastReport.Utils.Crypter.EncryptString(System.String,System.String)"/> method if you want to
            specify another password.
            </remarks>
        </member>
        <member name="M:FastReport.Utils.Crypter.EncryptString(System.String,System.String)">
            <summary>
            Encrypts the string using specified password.
            </summary>
            <param name="data">String to encrypt.</param>
            <param name="password">The password.</param>
            <returns>The encrypted string.</returns>
        </member>
        <member name="M:FastReport.Utils.Crypter.DecryptString(System.String)">
            <summary>
            Decrypts the string using the default password.
            </summary>
            <param name="data">String to decrypt.</param>
            <returns>The decrypted string.</returns>
            <remarks>
            The password used to decrypt a string can be set via <see cref="P:FastReport.Utils.Crypter.DefaultPassword"/> property.
            You also may use the <see cref="M:FastReport.Utils.Crypter.DecryptString(System.String,System.String)"/> method if you want to
            specify another password.
            </remarks>
        </member>
        <member name="M:FastReport.Utils.Crypter.DecryptString(System.String,System.String)">
            <summary>
            Decrypts the string using specified password.
            </summary>
            <param name="data">String to decrypt.</param>
            <param name="password">The password.</param>
            <returns>The decrypted string.</returns>
        </member>
        <member name="M:FastReport.Utils.Crypter.ComputeHash(System.IO.Stream)">
            <summary>
            Computes hash of specified stream. Initial position in stream will be saved.
            </summary>
            <param name="input">Initial stream</param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.Crypter.ComputeHash(System.Byte[])">
            <summary>
            Computes hash of specified array. 
            </summary>
            <param name="input">Initial array</param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.Crypter.ComputeHash(System.String)">
            <summary>
            Computes hash of specified array. 
            </summary>
            <param name="input">Initial array</param>
            <returns></returns>
        </member>
        <member name="T:FastReport.Utils.Murmur3">
            <summary>
            MurmurHash is a non-cryptographic hash function suitable for general hash-based lookup. 
            It was created by Austin Appleby in 2008 and is currently hosted on Github along with its test suite named 'SMHasher'. 
            It also exists in a number of variants, all of which have been released into the public domain. 
            The name comes from two basic operations, multiply (MU) and rotate (R), used in its inner loop.
            https://en.wikipedia.org/wiki/MurmurHash
            Implementation of Murmur3 Hash by Adam Horvath 
            http://blog.teamleadnet.com/2012/08/murmurhash3-ultra-fast-hash-algorithm.html
            </summary>
        </member>
        <member name="F:FastReport.Utils.Murmur3.READ_SIZE">
            <summary>
            READ_SIZE
            </summary>
        </member>
        <member name="M:FastReport.Utils.Murmur3.ComputeHash(System.Byte[])">
            <summary>
            ComputeHash function
            </summary>
            <param name="bb"></param>
            <returns></returns>
        </member>
        <member name="P:FastReport.Utils.Murmur3.Hash">
            <summary>
            Gets the Hash
            </summary>
        </member>
        <member name="M:FastReport.Utils.DrawUtils.DrawToBitmap(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Draws control to a bitmap.
            </summary>
            <param name="control">Control to draw.</param>
            <param name="children">Determines whether to draw control's children or not.</param>
            <returns>The bitmap.</returns>
        </member>
        <member name="T:FastReport.Utils.DuplicateNameException">
            <summary>
            The exception that is thrown when the user tried to set object's name that is already exists.
            </summary>
        </member>
        <member name="T:FastReport.Utils.AncestorException">
            <summary>
            The exception that is thrown when the user tried to rename an object that is introduced in the ancestor report.
            </summary>
        </member>
        <member name="T:FastReport.Utils.SwissQrCodeException">
            <summary>
            The exception that is thrown when the user tried to rename an object that is introduced in the ancestor report.
            </summary>
        </member>
        <member name="T:FastReport.Utils.FileFormatException">
            <summary>
            The exception that is thrown when loading bad formed xml report file.
            </summary>
        </member>
        <member name="T:FastReport.Utils.DecryptException">
            <summary>
            The exception that is thrown when loading an encrypted report with wrong password.
            </summary>
        </member>
        <member name="T:FastReport.Utils.CompilerException">
            <summary>
            The exception that is thrown if there is an error in the report's script code.
            </summary>
        </member>
        <member name="T:FastReport.Utils.ParentException">
            <summary>
            The exception that is thrown when trying to set an object's <b>Parent</b> property to 
            an object that not accepts children of this type.
            </summary>
        </member>
        <member name="T:FastReport.Utils.ClassException">
            <summary>
            The exception that is thrown when trying to load a report file that contains reference to an 
            unknown object type.
            </summary>
        </member>
        <member name="T:FastReport.Utils.DataTableException">
            <summary>
            The exception that is thrown when initializing a table datasource which
            <b>TableName</b> or <b>Alias</b> is not set properly.
            </summary>
        </member>
        <member name="T:FastReport.Utils.DataNotInitializedException">
            <summary>
            The exception that is thrown when trying to access a row of a datasource that is not initialized yet.
            </summary>
        </member>
        <member name="T:FastReport.Utils.TableManualBuildException">
            <summary>
            The exception that is thrown if an error occurs in the <b>TableObject.ManualBuild</b> event.
            </summary>
        </member>
        <member name="T:FastReport.Utils.MatrixValueException">
            <summary>
            The exception that is thrown if an error occurs in the <b>MatrixObject.ManualBuild</b> event.
            </summary>
        </member>
        <member name="T:FastReport.Utils.NotValidIdentifierException">
            <summary>
            The exception that is thrown if a report object's Name property is set to wrong value.
            </summary>
        </member>
        <member name="T:FastReport.Utils.UnknownNameException">
            <summary>
            The exception that is thrown if an unknown value is supplied to some methods dealing with totals, variables etc.
            </summary>
        </member>
        <member name="T:FastReport.Utils.CloudStorageException">
            <summary>
            <see cref="!:FastReport.Cloud.StorageClient.CloudStorageClient"/> throws this exception if an error occurs in the <b>SaveReport</b> method.
            See inner exception for detailed information.
            </summary>
        </member>
        <member name="T:FastReport.Utils.GroupHeaderHasNoGroupCondition">
            <summary>
            The exception that is thrown when the Group Header has no group condition.
            </summary>
        </member>
        <member name="T:FastReport.Utils.FastNameCreator">
            <summary>
            The helper class used to create unique component names using the fastest method.
            </summary>
            <remarks>
            <para>Note: you can create unique component's name using its <b>CreateUniqueName</b> method.
            However, it is very slow and can't be used in some situations (when you create a report 
            layout in a code and have a lot of objects on a page).</para>
            </remarks>
            <example>This example demonstrates how to use this class.
            <code>
            FastNameCreator nameCreator = new FastNameCreator(Report.AllObjects);
            foreach (Base c in Report.AllObjects)
            {
              if (c.Name == "")
                nameCreator.CreateUniqueName(c);
            }
            </code>
            </example>
        </member>
        <member name="M:FastReport.Utils.FastNameCreator.CreateUniqueName(FastReport.Base)">
            <summary>
            Creates the unique name for the given object.
            </summary>
            <param name="obj">The object to create name for.</param>
        </member>
        <member name="M:FastReport.Utils.FastNameCreator.#ctor(FastReport.ObjectCollection)">
            <summary>
            Initializes a new instance of the <b>FastNameCreator</b> class with collection of 
            existing report objects.
            </summary>
            <param name="objects">The collection of existing report objects.</param>
        </member>
        <member name="T:FastReport.Utils.FastString">
            <summary>
            Fast alternative of StringBuilder.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FastString.Length">
            <summary>
            Gets the Length of string.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FastString.Item(System.Int32)">
            <summary>
            Gets or sets the chars of string.
            </summary>
            <param name="index"></param>
            <returns>Char value</returns>
        </member>
        <member name="P:FastReport.Utils.FastString.StringBuilder">
            <summary>
            Gets StringBuilder
            </summary>
        </member>
        <member name="M:FastReport.Utils.FastString.Init(System.Int32)">
            <summary>
            Initialize the new array for chars.
            </summary>
            <param name="iniCapacity">Length of initial array.</param>
        </member>
        <member name="M:FastReport.Utils.FastString.IsEmpty">
            <summary>
            Checks the empty array.
            </summary>
            <returns>True if string is empty.</returns>
        </member>
        <member name="M:FastReport.Utils.FastString.ToString">
            <summary>
            Converts the array in string.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:FastReport.Utils.FastString.Clear">
            <summary>
            Clears the string.
            </summary>
            <returns>FastString object.</returns>
        </member>
        <member name="M:FastReport.Utils.FastString.Append(System.String)">
            <summary>
            Appends the string by string value.
            </summary>
            <param name="value">String value.</param>
            <returns>FastString object.</returns>
        </member>
        <member name="M:FastReport.Utils.FastString.AppendLine(System.String)">
            <summary>
            Appends the string by string value.
            </summary>
            <param name="value">String value.</param>
            <returns>FastString object.</returns>
        </member>
        <member name="M:FastReport.Utils.FastString.AppendFormat(System.String,System.Object[])">
            <summary>
            Append formatted string.
            </summary>
            <param name="format"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.FastString.AppendLine">
            <summary>
            Appends new line.
            </summary>
            <returns>FastString object.</returns>
        </member>
        <member name="M:FastReport.Utils.FastString.Append(System.Char)">
            <summary>
            Appends the string by char value.
            </summary>
            <param name="value">Char value.</param>
            <returns>FastString object.</returns>
        </member>
        <member name="M:FastReport.Utils.FastString.Append(FastReport.Utils.FastString)">
            <summary>
            Appends the another FastString object.
            </summary>
            <param name="fastString">FastString object.</param>
            <returns>FastString object.</returns>
        </member>
        <member name="M:FastReport.Utils.FastString.Append(System.Object)">
            <summary>
            Appends the string by object data.
            </summary>
            <param name="value">Object value.</param>
            <returns>FastString object.</returns>
        </member>
        <member name="M:FastReport.Utils.FastString.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
            <summary>
            Copies the substring in char array.
            </summary>
            <param name="sourceIndex">Start index in source.</param>
            <param name="destination">Destination array.</param>
            <param name="destinationIndex">Destination index.</param>
            <param name="count">Count of chars</param>
        </member>
        <member name="M:FastReport.Utils.FastString.Remove(System.Int32,System.Int32)">
            <summary>
            Removes substring.
            </summary>
            <param name="startIndex">Start index of removed string.</param>
            <param name="length">Length of removed string.</param>
            <returns>FastString object.</returns>
        </member>
        <member name="M:FastReport.Utils.FastString.Insert(System.Int32,System.String)">
            <summary>
            Inserts string.
            </summary>
            <param name="startIndex">Start index in existing string.</param>
            <param name="value">Value of inserting string.</param>
            <returns>FastString object.</returns>
        </member>
        <member name="M:FastReport.Utils.FastString.Replace(System.String,System.String)">
            <summary>
            Replacing the substring on other.
            </summary>
            <param name="oldValue">Old string value.</param>
            <param name="newValue">New string value.</param>
            <returns>FastString object.</returns>
        </member>
        <member name="M:FastReport.Utils.FastString.IndexOf(System.String,System.Int32)">
            <summary>
            Index of substring.
            </summary>
            <param name="value">Substring for search.</param>
            <param name="startIndex">Sarting position for search.</param>
            <returns>Position of substring.</returns>
        </member>
        <member name="M:FastReport.Utils.FastString.SubstringCompare(System.Int32,System.String)">
            <summary>
            Compare of substring in position.
            </summary>
            <param name="startIndex">Starting index for comparsion.</param>
            <param name="value">Value for compare.</param>
            <returns>True if substring is identical in position.</returns>
        </member>
        <member name="M:FastReport.Utils.FastString.Substring(System.Int32,System.Int32)">
            <summary>
            Returns the substring.
            </summary>
            <param name="startIndex">Starting index.</param>
            <param name="length">Length of substring.</param>
            <returns>Substring.</returns>
        </member>
        <member name="M:FastReport.Utils.FastString.#ctor(System.Int32)">
            <summary>
            Creates the new FastString object with initial capacity.
            </summary>
            <param name="initCapacity">Initial capacity.</param>
        </member>
        <member name="M:FastReport.Utils.FastString.#ctor">
            <summary>
            Creates the new FastString object with default capacity.
            </summary>
        </member>
        <member name="M:FastReport.Utils.FastString.#ctor(System.String)">
            <summary>
            Creates the new FastString object from initial string.
            </summary>
            <param name="initValue"></param>
        </member>
        <member name="T:FastReport.Utils.FloatCollection">
            <summary>
            Represents a collection of float values.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FloatCollection.Item(System.Int32)">
            <summary>
            Gets or sets the value at the specified index.
            </summary>
            <param name="index">Index of a value.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:FastReport.Utils.FloatCollection.AddRange(System.Single[])">
            <summary>
            Adds the specified values to the end of this collection.
            </summary>
            <param name="range"></param>
        </member>
        <member name="M:FastReport.Utils.FloatCollection.Add(System.Single)">
            <summary>
            Adds a value to the end of this collection.
            </summary>
            <param name="value">Value to add.</param>
            <returns>Index of the added value.</returns>
        </member>
        <member name="M:FastReport.Utils.FloatCollection.Insert(System.Int32,System.Single)">
            <summary>
            Inserts a value into this collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The value to insert.</param>
        </member>
        <member name="M:FastReport.Utils.FloatCollection.Remove(System.Single)">
            <summary>
            Removes the specified value from the collection.
            </summary>
            <param name="value">Value to remove.</param>
        </member>
        <member name="M:FastReport.Utils.FloatCollection.IndexOf(System.Single)">
            <summary>
            Returns the zero-based index of the first occurrence of a value.
            </summary>
            <param name="value">The value to locate in the collection.</param>
            <returns>The zero-based index of the first occurrence of value within the entire collection, if found; 
            otherwise, -1.</returns>
        </member>
        <member name="M:FastReport.Utils.FloatCollection.Contains(System.Single)">
            <summary>
            Determines whether a value is in the collection.
            </summary>
            <param name="value">The value to locate in the collection.</param>
            <returns><b>true</b> if value is found in the collection; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:FastReport.Utils.FloatCollection.Assign(FastReport.Utils.FloatCollection)">
            <summary>
            Copies values from another collection.
            </summary>
            <param name="source">Collection to copy from.</param>
        </member>
        <member name="T:FastReport.Utils.FRCollectionBase">
            <summary>
            Represents a collection of FastReport base objects.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FRCollectionBase.Owner">
            <summary>
            Gets an owner of this collection.
            </summary>
        </member>
        <member name="M:FastReport.Utils.FRCollectionBase.AddRange(FastReport.Base[])">
            <summary>
            Adds the specified elements to the end of this collection.
            </summary>
            <param name="range">Range of elements.</param>
        </member>
        <member name="M:FastReport.Utils.FRCollectionBase.AddRange(FastReport.ObjectCollection)">
            <summary>
            Adds the specified elements to the end of this collection.
            </summary>
            <param name="range">Collection of elements.</param>
        </member>
        <member name="M:FastReport.Utils.FRCollectionBase.Add(FastReport.Base)">
            <summary>
            Adds an object to the end of this collection.
            </summary>
            <param name="value">Object to add.</param>
            <returns>Index of the added object.</returns>
        </member>
        <member name="M:FastReport.Utils.FRCollectionBase.Insert(System.Int32,FastReport.Base)">
            <summary>
            Inserts an object into this collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The object to insert.</param>
        </member>
        <member name="M:FastReport.Utils.FRCollectionBase.Remove(FastReport.Base)">
            <summary>
            Removes the specified object from the collection.
            </summary>
            <param name="value">Object to remove.</param>
        </member>
        <member name="M:FastReport.Utils.FRCollectionBase.IndexOf(FastReport.Base)">
            <summary>
            Returns the zero-based index of the first occurrence of an object.
            </summary>
            <param name="value">The object to locate in the collection.</param>
            <returns>The zero-based index of the first occurrence of value within the entire collection, if found; 
            otherwise, -1.</returns>
        </member>
        <member name="M:FastReport.Utils.FRCollectionBase.Contains(FastReport.Base)">
            <summary>
            Determines whether an element is in the collection.
            </summary>
            <param name="value">The object to locate in the collection.</param>
            <returns><b>true</b> if object is found in the collection; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:FastReport.Utils.FRCollectionBase.ToArray">
            <summary>
            Returns an array of collection items.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.FRCollectionBase.Equals(FastReport.Utils.FRCollectionBase)">
            <summary>
            Determines whether two collections are equal.
            </summary>
            <param name="list">The collection to compare with.</param>
            <returns><b>true</b> if collections are equal; <b>false</b> otherwise.</returns>
        </member>
        <member name="M:FastReport.Utils.FRCollectionBase.CopyTo(FastReport.Utils.FRCollectionBase)">
            <summary>
            Copies the content to another collection.
            </summary>
            <param name="list">The collection to copy to.</param>
        </member>
        <member name="M:FastReport.Utils.FRCollectionBase.OnInsert(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Utils.FRCollectionBase.OnRemove(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Utils.FRCollectionBase.OnClear">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Utils.FRCollectionBase.#ctor">
            <summary>
            Initializes a new instance of the <b>FRCollectionBase</b> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.Utils.FRCollectionBase.#ctor(FastReport.Base)">
            <summary>
            Initializes a new instance of the <b>FRCollectionBase</b> class with specified owner.
            </summary>
            <param name="owner">The owner of this collection.</param>
        </member>
        <member name="T:FastReport.Utils.FRPaintEventArgs">
            <summary>
            Provides a data for paint event.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FRPaintEventArgs.Graphics">
            <summary>
            Gets a <b>Graphics</b> object to draw on.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FRPaintEventArgs.ScaleX">
            <summary>
            Gets the X scale factor.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FRPaintEventArgs.ScaleY">
            <summary>
            Gets the Y scale factor.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FRPaintEventArgs.Cache">
            <summary>
            Gets the cache that contains graphics objects.
            </summary>
        </member>
        <member name="M:FastReport.Utils.FRPaintEventArgs.#ctor(FastReport.IGraphics,System.Single,System.Single,FastReport.GraphicCache)">
            <summary>
            Initializes a new instance of the <b>FRPaintEventArgs</b> class with specified settings.
            </summary>
            <param name="g"><b>IGraphicsRenderer</b> object to draw on.</param>
            <param name="scaleX">X scale factor.</param>
            <param name="scaleY">Y scale factor.</param>
            <param name="cache">Cache that contains graphics objects.</param>
        </member>
        <member name="M:FastReport.Utils.FRPaintEventArgs.#ctor(System.Drawing.Graphics,System.Single,System.Single,FastReport.GraphicCache)">
            <summary>
            Initializes a new instance of the <b>FRPaintEventArgs</b> class with specified settings.
            </summary>
            <param name="g"><b>Graphics</b> object to draw on.</param>
            <param name="scaleX">X scale factor.</param>
            <param name="scaleY">Y scale factor.</param>
            <param name="cache">Cache that contains graphics objects.</param>
        </member>
        <member name="T:FastReport.Utils.FRPrivateFontCollection">
            <summary>
            A wrapper around PrivateFontCollection.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FRPrivateFontCollection.Families">
            <summary>
            Gets the array of FontFamily objects associated with this collection.
            </summary>
        </member>
        <member name="M:FastReport.Utils.FRPrivateFontCollection.HasFont(System.String)">
            <summary>
            Checks if the font name is contained in this collection.
            </summary>
            <param name="fontName">The name of the font.</param>
            <returns>true if the font is contained in this collection.</returns>
        </member>
        <member name="M:FastReport.Utils.FRPrivateFontCollection.GetFontStream(System.String)">
            <summary>
            Returns the font's stream.
            </summary>
            <param name="fontName">The name of the font.</param>
            <returns>Either FileStream or MemoryStream containing font data.</returns>
        </member>
        <member name="M:FastReport.Utils.FRPrivateFontCollection.AddFontFile(System.String)">
            <summary>
            Adds a font from the specified file to this collection.
            </summary>
            <param name="filename">A System.String that contains the file name of the font to add.</param>
        </member>
        <member name="M:FastReport.Utils.FRPrivateFontCollection.AddMemoryFont(System.IntPtr,System.Int32)">
            <summary>
            Adds a font contained in system memory to this collection.
            </summary>
            <param name="memory">The memory address of the font to add.</param>
            <param name="length">The memory length of the font to add.</param>
        </member>
        <member name="T:FastReport.Utils.FRRandom">
            <summary>
            The pseudo-random generator.
            </summary>
        </member>
        <member name="M:FastReport.Utils.FRRandom.NextLetter(System.Char)">
            <summary>
            Gets a random letter in same case that source character.
            </summary>
            <param name="source">The source character.</param>
            <returns>The random character.</returns>
        </member>
        <member name="M:FastReport.Utils.FRRandom.NextDigit">
            <summary>
            Gets random int value from <b>0</b> to <b>9</b>.
            </summary>
            <returns>Random int value.</returns>
        </member>
        <member name="M:FastReport.Utils.FRRandom.NextDigit(System.Int32)">
            <summary>
            Gets random int value from <b>0</b> to <b>max</b>.
            </summary>
            <param name="max">The maximum for random digit.</param>
            <returns>Random int value.</returns>
        </member>
        <member name="M:FastReport.Utils.FRRandom.NextDigit(System.Int32,System.Int32)">
            <summary>
            Gets random int value from <b>min</b> to <b>max</b>.
            </summary>
            <param name="min">The minimum for random digit.</param>
            <param name="max">The maximum for random digit.</param>
            <returns>Random int value.</returns>
        </member>
        <member name="M:FastReport.Utils.FRRandom.NextDigits(System.Int32)">
            <summary>
            Gets number of random digits from <b>0</b> to <b>9</b>.
            </summary>
            <param name="number">The number of digits.</param>
            <returns>Number of random digits.</returns>
        </member>
        <member name="M:FastReport.Utils.FRRandom.NextByte">
            <summary>
            Gets the random byte value.
            </summary>
            <returns>Random byte value.</returns>
        </member>
        <member name="M:FastReport.Utils.FRRandom.NextBytes(System.Int32)">
            <summary>
            Gets random byte array with specified number of elements.
            </summary>
            <param name="number">The number of elements in array.</param>
            <returns>Random byte array.</returns>
        </member>
        <member name="M:FastReport.Utils.FRRandom.NextChar">
            <summary>
            Gets the randomized char value.
            </summary>
            <returns>Random char value.</returns>
        </member>
        <member name="M:FastReport.Utils.FRRandom.NextDay(System.DateTime)">
            <summary>
            Gets the random day from start to DataTime.Today.
            </summary>
            <param name="start">The starting DateTime value.</param>
            <returns>Random DateTime value.</returns>
        </member>
        <member name="M:FastReport.Utils.FRRandom.NextTimeSpanBetweenHours(System.Int32,System.Int32)">
            <summary>
            Gets the randomized TimeSpan value beetwin specified hours.
            </summary>
            <param name="start">The starting hour (0 - 24).</param>
            <param name="end">The ending hour (0 - 24).</param>
            <returns>Random TimeSpan value.</returns>
        </member>
        <member name="M:FastReport.Utils.FRRandom.RandomizeDecimal(System.Decimal)">
            <summary>
            Gets the randomized decimal value with same number of digits that in source value.
            </summary>
            <param name="source">The source decimal value.</param>
            <returns>Random decimal value based on source.</returns>
        </member>
        <member name="M:FastReport.Utils.FRRandom.RandomizeDouble(System.Double)">
            <summary>
            Gets the randomized double value with same number of digits that in source value.
            </summary>
            <param name="source">The source double value.</param>
            <returns>Random double value based on source.</returns>
        </member>
        <member name="M:FastReport.Utils.FRRandom.RandomizeInt16(System.Int16)">
            <summary>
            Gets the randomized Int16 value with same number of digits that in source value.
            </summary>
            <param name="source">The source Int16 value.</param>
            <returns>Random Int16 value based on source.</returns>
        </member>
        <member name="M:FastReport.Utils.FRRandom.RandomizeInt32(System.Int32)">
            <summary>
            Gets the randomized Int32 value with same number of digits that in source value.
            </summary>
            <param name="source">The source Int32 value.</param>
            <returns>Random Int32 value based on source.</returns>
        </member>
        <member name="M:FastReport.Utils.FRRandom.RandomizeInt64(System.Int64)">
            <summary>
            Gets the randomized Int64 value with same number of digits that in source value.
            </summary>
            <param name="source">The source Int64 value.</param>
            <returns>Random Int64 value based on source.</returns>
        </member>
        <member name="M:FastReport.Utils.FRRandom.RandomizeSByte(System.SByte)">
            <summary>
            Gets the randomized SByte value with same number of digits that in source value.
            </summary>
            <param name="source">The source SByte value.</param>
            <returns>Random SByte value based on source.</returns>
        </member>
        <member name="M:FastReport.Utils.FRRandom.RandomizeFloat(System.Single)">
            <summary>
            Gets the randomized Single value with same number of digits that in source value.
            </summary>
            <param name="source">The source Single value.</param>
            <returns>Random Single value based on source.</returns>
        </member>
        <member name="M:FastReport.Utils.FRRandom.RandomizeString(System.String)">
            <summary>
            Gets the randomized string with same length and same whitespaces that in source string.
            </summary>
            <param name="source">The source string.</param>
            <returns>Random string based on source string.</returns>
        </member>
        <member name="M:FastReport.Utils.FRRandom.RandomizeUInt16(System.UInt16)">
            <summary>
            Gets the randomized UInt16 value with same number of digits that in source value.
            </summary>
            <param name="source">The source UInt16 value.</param>
            <returns>Random UInt16 value based on source.</returns>
        </member>
        <member name="M:FastReport.Utils.FRRandom.RandomizeUInt32(System.UInt32)">
            <summary>
            Gets the randomized UInt32 value with same number of digits that in source value.
            </summary>
            <param name="source">The source UInt32 value.</param>
            <returns>Random UInt32 value based on source.</returns>
        </member>
        <member name="M:FastReport.Utils.FRRandom.RandomizeUInt64(System.UInt64)">
            <summary>
            Gets the randomized UInt64 value with same number of digits that in source value.
            </summary>
            <param name="source">The source UInt64 value.</param>
            <returns>Random UInt64 value based on source.</returns>
        </member>
        <member name="M:FastReport.Utils.FRRandom.GetRandomObject(System.Object,System.Type)">
            <summary>
            Gets randomized object based on the source object.
            </summary>
            <param name="source">The source object.</param>
            <param name="type">The type of object.</param>
            <returns>Random object based on source.</returns>
        </member>
        <member name="M:FastReport.Utils.FRRandom.RandomizeDataSources(FastReport.Data.DataSourceCollection)">
            <summary>
            Randomizes datasources.
            </summary>
            <param name="datasources">Collection of datasources.</param>
        </member>
        <member name="M:FastReport.Utils.FRRandom.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Utils.FRRandom"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Utils.FRColumnInfo">
            <summary>
            Represents information about column.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FRColumnInfo.Type">
            <summary>
            Gets or sets the type of column.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FRColumnInfo.Length">
            <summary>
            Gets or sets the length of column.
            </summary>
        </member>
        <member name="M:FastReport.Utils.FRColumnInfo.#ctor(System.Type,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Utils.FRColumnInfo"/> class.
            </summary>
            <param name="type">The type of column.</param>
            <param name="length">The lenght of column.</param>
        </member>
        <member name="T:FastReport.Utils.FRRandomFieldValue">
            <summary>
            Represents random value of field.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FRRandomFieldValue.Origin">
            <summary>
            Gets or sets the original value of field.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FRRandomFieldValue.Random">
            <summary>
            Gets or sets the random value of field.
            </summary>
        </member>
        <member name="M:FastReport.Utils.FRRandomFieldValue.#ctor(System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Utils.FRRandomFieldValue"/> class.
            </summary>
            <param name="origin">The original value of field.</param>
            <param name="random">The random value of field.</param>
        </member>
        <member name="T:FastReport.Utils.FRRandomFieldValueCollection">
            <summary>
            Represents collection of random values of field.
            </summary>
        </member>
        <member name="M:FastReport.Utils.FRRandomFieldValueCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Utils.FRRandomFieldValueCollection"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Utils.FRRandomFieldValueCollection.Add(FastReport.Utils.FRRandomFieldValue)">
            <summary>
            Adds an object to the end of this collection.
            </summary>
            <param name="value">Object to add.</param>
        </member>
        <member name="M:FastReport.Utils.FRRandomFieldValueCollection.ContainsOrigin(System.Object)">
            <summary>
            Determines whether an element with the same origin value is in the collection.
            </summary>
            <param name="origin">The object to locate in the collection.</param>
            <returns><b>true</b> if object is found in the collection; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:FastReport.Utils.FRRandomFieldValueCollection.ContainsRandom(System.Object)">
            <summary>
            Determines whether an element with the same random value is in the collection.
            </summary>
            <param name="random">The object to locate in the collection.</param>
            <returns><b>true</b> if object is found in the collection; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:FastReport.Utils.FRRandomFieldValueCollection.GetRandom(System.Object)">
            <summary>
            Gets the random value for specified origin.
            </summary>
            <param name="origin">The origin value.</param>
            <returns>The random value.</returns>
        </member>
        <member name="T:FastReport.Utils.FRReader">
            <summary>
            The reader used to deserialize object's properties from a report file.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FRReader.Errors">
            <summary>
            Gets a string that contains errors occured during the load.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FRReader.ItemName">
            <summary>
            Gets the current item name.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FRReader.ReadChildren">
            <summary>
            Gets or sets a value indicating whther is necessary to read the object's children.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FRReader.Root">
            <summary>
            Returns Root element for this reader
            </summary>
        </member>
        <member name="P:FastReport.Utils.FRReader.DeserializeFrom">
            <summary>
            Gets or sets target of serialization.
            </summary>
        </member>
        <member name="M:FastReport.Utils.FRReader.Read(FastReport.IFRSerializable)">
            <summary>
            Reads the specified object.
            </summary>
            <param name="obj">The object to read.</param>
            <remarks>
            The object must implement the <see cref="T:FastReport.IFRSerializable"/> interface. This method
            invokes the <b>Deserialize</b> method of the object.
            </remarks>
            <example>This example demonstrates the use of <b>ReadProperties</b>, <b>ReadChildren</b>,
            <b>NextItem</b>, <b>Read</b> methods.
            <code>
            public void Deserialize(FRReader reader)
            {
              // read simple properties like "Text", complex properties like "Border.Lines"
              reader.ReadProperties(this);
            
              // moves the current reader item
              while (reader.NextItem())
              {
                // read the "Styles" collection
                if (String.Compare(reader.ItemName, "Styles", true) == 0)
                  reader.Read(Styles);
                else if (reader.ReadChildren)
                {
                  // if read of children is enabled, read them
                  Base obj = reader.Read();
                  if (obj != null)
                     obj.Parent = this;
                }
              }
            }
            </code>
            </example>
        </member>
        <member name="M:FastReport.Utils.FRReader.Read">
            <summary>
            Reads an object from current xml node.
            </summary>
            <returns>The object.</returns>
            <remarks>
            This method creates an instance of object described by the current xml node, then invokes
            its <b>Deserialize</b> method.
            </remarks>
            <example>This example demonstrates the use of <b>ReadProperties</b>, <b>ReadChildren</b>,
            <b>NextItem</b>, <b>Read</b> methods.
            <code>
            public void Deserialize(FRReader reader)
            {
              // read simple properties like "Text", complex properties like "Border.Lines"
              reader.ReadProperties(this);
            
              // moves the current reader item
              while (reader.NextItem())
              {
                // read the "Styles" collection
                if (String.Compare(reader.ItemName, "Styles", true) == 0)
                  reader.Read(Styles);
                else if (reader.ReadChildren)
                {
                  // if read of children is enabled, read them
                  Base obj = reader.Read();
                  if (obj != null)
                     obj.Parent = this;
                }
              }
            }
            </code>
            </example>
        </member>
        <member name="M:FastReport.Utils.FRReader.ReadProperties(System.Object)">
            <summary>
            Reads properties of specified object.
            </summary>
            <param name="obj">The object to read.</param>
            <remarks>
            This method reads simple properties like "Text", "Border.Lines" etc. for specified object.
            To read nested properties like collections, you should override the <see cref="M:FastReport.Base.DeserializeSubItems(FastReport.Utils.FRReader)"/>
            method of an object.
            </remarks>
            <example>This example demonstrates the use of <b>ReadProperties</b>, <b>ReadChildren</b>,
            <b>NextItem</b>, <b>Read</b> methods.
            <code>
            public void Deserialize(FRReader reader)
            {
              // read simple properties like "Text", complex properties like "Border.Lines"
              reader.ReadProperties(this);
            
              // moves the current reader item
              while (reader.NextItem())
              {
                // read the "Styles" collection
                if (String.Compare(reader.ItemName, "Styles", true) == 0)
                  reader.Read(Styles);
                else if (reader.ReadChildren)
                {
                  // if read of children is enabled, read them
                  Base obj = reader.Read();
                  if (obj != null)
                     obj.Parent = this;
                }
              }
            }
            </code>
            </example>
        </member>
        <member name="M:FastReport.Utils.FRReader.NextItem">
            <summary>
            Moves the current xml item.
            </summary>
            <returns><b>false</b> if there is no more items to move on; <b>true</b> otherwise.</returns>
            <remarks>
            This method is used to read child objects.
            </remarks>
            <example>This example demonstrates the use of <b>ReadProperties</b>, <b>ReadChildren</b>,
            <b>NextItem</b>, <b>Read</b> methods.
            <code>
            public void Deserialize(FRReader reader)
            {
              // read simple properties like "Text", complex properties like "Border.Lines"
              reader.ReadProperties(this);
            
              // moves the current reader item
              while (reader.NextItem())
              {
                // read the "Styles" collection
                if (String.Compare(reader.ItemName, "Styles", true) == 0)
                  reader.Read(Styles);
                else if (reader.ReadChildren)
                {
                  // if read of children is enabled, read them
                  Base obj = reader.Read();
                  if (obj != null)
                     obj.Parent = this;
                }
              }
            }
            </code>
            </example>
        </member>
        <member name="M:FastReport.Utils.FRReader.HasProperty(System.String)">
            <summary>
            Checks if current item has specified property.
            </summary>
            <param name="name">The property name to check.</param>
            <returns><b>true</b> if current item has specified property.</returns>
        </member>
        <member name="M:FastReport.Utils.FRReader.ReadStr(System.String)">
            <summary>
            Reads the string property.
            </summary>
            <param name="name">Name of property.</param>
            <returns>Property value.</returns>
        </member>
        <member name="M:FastReport.Utils.FRReader.ReadBool(System.String)">
            <summary>
            Reads the boolean property.
            </summary>
            <param name="name">Name of property.</param>
            <returns>Property value.</returns>
        </member>
        <member name="M:FastReport.Utils.FRReader.ReadInt(System.String)">
            <summary>
            Reads the integer property.
            </summary>
            <param name="name">Name of property.</param>
            <returns>Property value.</returns>
        </member>
        <member name="M:FastReport.Utils.FRReader.ReadFloat(System.String)">
            <summary>
            Reads the float property.
            </summary>
            <param name="name">Name of property.</param>
            <returns>Property value.</returns>
        </member>
        <member name="M:FastReport.Utils.FRReader.ReadDouble(System.String)">
            <summary>
            Reads the double property.
            </summary>
            <param name="name">Name of property.</param>
            <returns>Property value.</returns>
        </member>
        <member name="M:FastReport.Utils.FRReader.ReadValue(System.String,System.Type)">
            <summary>
            Reads the enum property.
            </summary>
            <param name="name">Name of property.</param>
            <param name="typ">Type of property.</param>
            <returns>Property value.</returns>
        </member>
        <member name="M:FastReport.Utils.FRReader.ReadPropertyValue">
            <summary>
            Reads the standalone property value.
            </summary>
            <returns>Property value.</returns>
        </member>
        <member name="M:FastReport.Utils.FRReader.Dispose">
            <summary>
            Disposes the reader, fixups the property references.
            </summary>
        </member>
        <member name="M:FastReport.Utils.FRReader.Load(System.IO.Stream)">
            <summary>
            Loads the xml items from a stream.
            </summary>
            <param name="stream">The stream to load from.</param>
        </member>
        <member name="M:FastReport.Utils.FRReader.#ctor(FastReport.Report)">
            <summary>
            Initializes a new instance of the <b>FRReader</b> class with specified report.
            </summary>
            <param name="report">Reference to a report.</param>
        </member>
        <member name="M:FastReport.Utils.FRReader.#ctor(FastReport.Report,FastReport.Utils.XmlItem)">
            <summary>
            Initializes a new instance of the <b>FRReader</b> class with specified report and xml item with
            contents to read.
            </summary>
            <param name="report">Reference to a report.</param>
            <param name="root">Xml item with contents to read.</param>
        </member>
        <member name="T:FastReport.Utils.SerializeTo">
            <summary>
            Specifies the target for the serialize operation.
            </summary>
        </member>
        <member name="F:FastReport.Utils.SerializeTo.Report">
            <summary>
            Serialize to the report file.
            </summary>
        </member>
        <member name="F:FastReport.Utils.SerializeTo.Preview">
            <summary>
            Serialize to the preview pages.
            </summary>
        </member>
        <member name="F:FastReport.Utils.SerializeTo.SourcePages">
            <summary>
            Serialize to the source pages of a preview.
            </summary>
        </member>
        <member name="F:FastReport.Utils.SerializeTo.Clipboard">
            <summary>
            Serialize to the designer's clipboard.
            </summary>
        </member>
        <member name="F:FastReport.Utils.SerializeTo.Undo">
            <summary>
            Serialize to the designer's undo/redo buffer.
            </summary>
        </member>
        <member name="T:FastReport.Utils.FRWriter">
            <summary>
            The writer used to serialize object's properties to a report file.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FRWriter.ItemName">
            <summary>
            Gets or sets current xml item name.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FRWriter.SerializeTo">
            <summary>
            Gets or sets target of serialization.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FRWriter.DiffObject">
            <summary>
            Gets the ethalon object to compare with.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FRWriter.SaveChildren">
            <summary>
            Gets or sets a value that determines whether is necessary to serialize child objects.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FRWriter.WriteHeader">
            <summary>
            Gets or sets a value that determines whether is necessary to add xml header.
            </summary>
        </member>
        <member name="M:FastReport.Utils.FRWriter.Write(FastReport.IFRSerializable)">
            <summary>
            Serializes the specified object.
            </summary>
            <param name="obj">The object to serialize.</param>
            <remarks>
            The object must implement the <see cref="T:FastReport.IFRSerializable"/> interface. This method
            invokes the <b>Serialize</b> method of the object.
            </remarks>
            <example>This example demonstrates the use of writer.
            <code>
            public void Serialize(FRWriter writer)
            {
              // get the etalon object. It will be used to write changed properties only.
              Base c = writer.DiffObject as Base;
            
              // write the type name
              writer.ItemName = ClassName;
            
              // write properties
              if (Name != "")
                writer.WriteStr("Name", Name);
              if (Restrictions != c.Restrictions)
                writer.WriteValue("Restrictions", Restrictions);
              
              // write child objects if allowed
              if (writer.SaveChildren)
              {
                foreach (Base child in ChildObjects)
                {
                  writer.Write(child);
                }
              }
            }
            </code>
            </example>
        </member>
        <member name="M:FastReport.Utils.FRWriter.Write(FastReport.IFRSerializable,System.Object)">
            <summary>
            Serializes the object using specified etalon.
            </summary>
            <param name="obj">The object to serialize.</param>
            <param name="diff">The etalon object.</param>
        </member>
        <member name="M:FastReport.Utils.FRWriter.WriteStr(System.String,System.String)">
            <summary>
            Writes a string property.
            </summary>
            <param name="name">Property name.</param>
            <param name="value">Property value.</param>
        </member>
        <member name="M:FastReport.Utils.FRWriter.WriteBool(System.String,System.Boolean)">
            <summary>
            Writes a boolean property.
            </summary>
            <param name="name">Property name.</param>
            <param name="value">Property value.</param>
        </member>
        <member name="M:FastReport.Utils.FRWriter.WriteInt(System.String,System.Int32)">
            <summary>
            Writes an integer property.
            </summary>
            <param name="name">Property name.</param>
            <param name="value">Property value.</param>
        </member>
        <member name="M:FastReport.Utils.FRWriter.WriteFloat(System.String,System.Single)">
            <summary>
            Writes a float property.
            </summary>
            <param name="name">Property name.</param>
            <param name="value">Property value.</param>
        </member>
        <member name="M:FastReport.Utils.FRWriter.WriteDouble(System.String,System.Double)">
            <summary>
            Writes a double property.
            </summary>
            <param name="name">Property name.</param>
            <param name="value">Property value.</param>
        </member>
        <member name="M:FastReport.Utils.FRWriter.WriteValue(System.String,System.Object)">
            <summary>
            Writes an enumeration property.
            </summary>
            <param name="name">Property name.</param>
            <param name="value">Property value.</param>
        </member>
        <member name="M:FastReport.Utils.FRWriter.WriteRef(System.String,FastReport.Base)">
            <summary>
            Writes an object reference property.
            </summary>
            <param name="name">Property name.</param>
            <param name="value">Property value.</param>
        </member>
        <member name="M:FastReport.Utils.FRWriter.WritePropertyValue(System.String,System.String)">
            <summary>
            Writes a standalone property value.
            </summary>
            <param name="name">Name of property.</param>
            <param name="value">Property value.</param>
            <remarks>
            This method produces the following output:
            &lt;PropertyName&gt;PropertyValue&lt;/PropertyName&gt;
            </remarks>
        </member>
        <member name="M:FastReport.Utils.FRWriter.AreEqual(System.Object,System.Object)">
            <summary>
            Determines if two objects are equal.
            </summary>
            <param name="obj1">The first object.</param>
            <param name="obj2">The second object.</param>
            <returns><b>true</b> if objects will be serialized to the same value.</returns>
        </member>
        <member name="M:FastReport.Utils.FRWriter.Dispose">
            <summary>
            Disposes the writer.
            </summary>
        </member>
        <member name="M:FastReport.Utils.FRWriter.Save(System.IO.Stream)">
            <summary>
            Saves the writer output to a stream.
            </summary>
            <param name="stream">Stream to save to.</param>
        </member>
        <member name="M:FastReport.Utils.FRWriter.#ctor">
            <summary>
            Initializes a new instance of the <b>FRWriter</b> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.Utils.FRWriter.#ctor(FastReport.Utils.XmlItem)">
            <summary>
            Initializes a new instance of the <b>FRWriter</b> class with specified xml item that will 
            receive writer's output.
            </summary>
            <param name="root">The xml item that will receive writer's output.</param>
        </member>
        <member name="M:FastReport.Utils.HtmlTextRenderer.BreakHtml(System.String,System.Int32,System.String@,System.Boolean@)">
            <summary>
            Returns splited string
            </summary>
            <param name="text">text for splitting</param>
            <param name="charactersFitted">index of first character of second string</param>
            <param name="result">second part of string</param>
            <param name="endOnEnter">returns true if ends on enter</param>
            <returns>first part of string</returns>
        </member>
        <member name="M:FastReport.Utils.HtmlTextRenderer.WrapLine(FastReport.Utils.HtmlTextRenderer.Paragraph,FastReport.Utils.HtmlTextRenderer.Line,System.Int32,System.Single,System.Single@)">
            <summary>
            Check the line, and if last word is able to move next line, move it.
            e.g. white space won't move to next line.
            If word is not moved return current line.
            else return new line
            </summary>
            <param name="paragraph">the paragraph for lines</param>
            <param name="line">the line with extra words</param>
            <param name="wordCharIndex">the index of start last word in this line</param>
            <param name="availableWidth">width to place words</param>
            <param name="newWidth">ref to current line width</param>
            <returns></returns>
        </member>
        <member name="T:FastReport.Utils.HtmlTextRenderer.BaseLine">
            <summary>
            Represents character placement.
            </summary>
        </member>
        <member name="P:FastReport.Utils.HtmlTextRenderer.SimpleFastReportHtmlElement.Style">
            <summary>
            Be care generates dictionary only one time
            </summary>
        </member>
        <member name="M:FastReport.Utils.HtmlTextRenderer.SimpleFastReportHtmlReader.Read">
            <summary>
            Return true if read char
            </summary>
            <returns></returns>
        </member>
        <member name="T:FastReport.Utils.HtmlTextRenderer.StyleDescriptor">
            <summary>
            Represents a style used in HtmlTags mode. Color does not affect the equals function.
            </summary>
        </member>
        <member name="M:FastReport.Utils.HtmlTextRenderer.StyleDescriptor.FullEquals(FastReport.Utils.HtmlTextRenderer.StyleDescriptor)">
            <summary>
            returns true if objects realy equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:FastReport.Utils.WingdingsToUnicodeConverter">
            <summary>
            Class that converts strings with Wingdings characters to Unicode strings.
            </summary>
        </member>
        <member name="M:FastReport.Utils.WingdingsToUnicodeConverter.Convert(System.String)">
            <summary>
            Converts string with Wingdings characters to its Unicode analog.
            </summary>
            <param name="str">The string that should be converted.</param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.ImageHelper.SaveAsIcon(System.Drawing.Image,System.IO.Stream,System.Boolean)">
            <summary>
            Converts a PNG image to a icon (ico)
            </summary>
            <param name="image">The input image</param>
            <param name="output">The output stream</param>
            <param name="preserveAspectRatio">Preserve the aspect ratio</param>
            <returns>Wether or not the icon was succesfully generated</returns>
        </member>
        <member name="M:FastReport.Utils.ImageExtension.GetImageFormat(System.Drawing.Image)">
            <summary>
            Returns an Image format.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FunctionInfo.Name">
            <summary>
            Name of object or category.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FunctionInfo.Text">
            <summary>
            Tooltip text.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FunctionInfo.Function">
            <summary>
            The registered function.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FunctionInfo.Items">
            <summary>
            List of subitems.
            </summary>
        </member>
        <member name="M:FastReport.Utils.FunctionInfo.EnumItems(System.Collections.Generic.ICollection{FastReport.Utils.FunctionInfo})">
            <summary>
            Enumerates all objects.
            </summary>
            <param name="list">List that will contain enumerated items.</param>
        </member>
        <member name="T:FastReport.Utils.RegisteredObjects">
            <summary>
            Contains all registered report items such as objects, export filters, wizards.
            </summary>
            <remarks>
            Use this class to register own components, wizards, export filters or another items that 
            need to be serialized to/from a report file.
            </remarks>
            <example>
            <code>
            // register own wizard
            RegisteredObjects.AddWizard(typeof(MyWizard), myWizBmp, "My Wizard", true);
            // register own export filter
            RegisteredObjects.AddExport(typeof(MyExport), "My Export");
            // register own report object
            RegisteredObjects.Add(typeof(MyObject), "ReportPage", myObjBmp, "My Object");
            </code>
            </example>
        </member>
        <member name="P:FastReport.Utils.RegisteredObjects.Objects">
            <summary>
            Root object for all registered objects.
            </summary>
        </member>
        <member name="P:FastReport.Utils.RegisteredObjects.Functions">
            <summary>
            Root object for all registered functions.
            </summary>
        </member>
        <member name="M:FastReport.Utils.RegisteredObjects.IsTypeRegistered(System.Type)">
            <summary>
            Checks whether the specified type is registered already.
            </summary>
            <param name="obj">Type to check.</param>
            <returns><b>true</b> if such type is registered.</returns>
        </member>
        <member name="M:FastReport.Utils.RegisteredObjects.AddCategory(System.String,System.Drawing.Bitmap,System.String)">
            <summary>
            Registers a category that may contain several report objects.
            </summary>
            <param name="name">Category name.</param>
            <param name="image">Image for category button.</param>
            <param name="text">Text for category button.</param>
            <remarks>
            <para>Category is a button on the "Objects" toolbar that shows context menu with nested items 
            when you click it. Consider using categories if you register several report objects. It can 
            save space on the "Objects" toolbar. For example, FastReport registers one category called "Shapes"
            that contains the <b>LineObject</b> and different types of <b>ShapeObject</b>.</para>
            <para>The name of category must starts either with "ReportPage," or "DialogPage," depending on
            what kind of controls do you need to regiter in this category: report objects or dialog controls.
            After the comma, specify the category name. So the full category name that you need to specify
            in the <b>name</b> parameter, must be something like this: "ReportPage,Shapes".
            </para>
            <para>When register an object inside a category, you must specify the full category name in the
            <b>category</b> parameter of the <b>Add</b> method. </para>
            </remarks>
        </member>
        <member name="M:FastReport.Utils.RegisteredObjects.AddExportCategory(System.String,System.String,System.Int32)">
            <summary>
            Register Export category.
            </summary>
            <param name="name">Category name.</param>
            <param name="text">Category text.</param>
        </member>
        <member name="M:FastReport.Utils.RegisteredObjects.AddExport(System.Type,System.String)">
            <summary>
            Registers a new export filter.
            </summary>
            <param name="obj">Type of export filter.</param>
            <param name="text">Text for export filter's menu item.</param>
            <remarks>
            The <b>obj</b> must be of <see cref="T:FastReport.Export.ExportBase"/> type.
            </remarks>
            <example>
            <code>
            // register own export filter
            RegisteredObjects.AddExport(typeof(MyExport), "My Export");
            </code>
            </example>
        </member>
        <member name="M:FastReport.Utils.RegisteredObjects.AddConnection(System.Type,System.String)">
            <summary>
            Registers custom data connection.
            </summary>
            <param name="obj">Type of connection.</param>
            <param name="text">Name of connection.</param>
            <remarks>
            The <b>obj</b> must be of <see cref="T:FastReport.Data.DataConnectionBase"/> type.
            </remarks>
            <example>
            <code>
            // register data connection
            RegisteredObjects.AddConnection(typeof(MyDataConnection), "My Data Connection");
            </code>
            </example>
        </member>
        <member name="M:FastReport.Utils.RegisteredObjects.Add(System.Type,System.String,System.Int32,System.Int32)">
            <summary>
            Registers an object in the specified category.
            </summary>
            <param name="obj">Type of object to register.</param>
            <param name="category">Name of category to register in.</param>
            <param name="imageIndex">Index of image for object's button.</param>
            <param name="buttonIndex">Index of object's button in toolbar.</param>
        </member>
        <member name="M:FastReport.Utils.RegisteredObjects.Add(System.Type,System.String,System.Drawing.Bitmap,System.String,System.Int32,System.Boolean)">
            <summary>
            Registers an object in the specified category with button's image, text, object's flags and multi-insert flag.
            </summary>
            <param name="obj">Type of object to register.</param>
            <param name="category">Name of category to register in.</param>
            <param name="image">Image for object's button.</param>
            <param name="text">Text for object's button.</param>
            <param name="flags">Integer value that will be passed to object's <b>OnBeforeInsert</b> method.</param>
            <param name="multiInsert">Specifies whether the object may be inserted several times until you
            select the "arrow" button or insert another object.</param>
            <remarks>
            <para>You must specify either the page type name or existing category name in the <b>category</b> parameter.
            The report objects must be registered in the "ReportPage" category or custom category that is
            registered in the "ReportPage" as well. The dialog controls must be registered in the "DialogPage"
            category or custom category that is registered in the "DialogPage" as well.</para>
            <para>If you want to register an object that needs to be serialized, but you don't want
            to show it on the toolbar, pass empty string in the <b>category</b> parameter.
            </para>
            <para>To learn about flags, see the <see cref="!:Base.OnBeforeInsert"/> method.</para>
            </remarks>
            <example>
            <code>
            // register the report object
            RegisteredObjects.Add(typeof(MyReportObject), "ReportPage", myReportObjectBmp, "My Report Object");
            // register the dialog control
            RegisteredObjects.Add(typeof(MyDialogControl), "DialogPage", myDialogControlBmp, "My Dialog Control");
            // add a category and register an object inside it
            RegisteredObjects.AddCategory("ReportPage,MyCategory", myCategoryBmp, "My Category");
            // register another report object in MyCategory
            RegisteredObjects.Add(typeof(MyReportObject), "ReportPage,MyCategory", 
              anotherReportObjectBmp, "Another Report Object");
            </code>
            </example>
        </member>
        <member name="M:FastReport.Utils.RegisteredObjects.AddFunctionCategory(System.String,System.String)">
            <summary>
            Adds a new function category.
            </summary>
            <param name="category">Short name of category.</param>
            <param name="text">Display name of category.</param>
            <remarks>
            Short name is used to reference the category in the subsequent <see cref="M:FastReport.Utils.RegisteredObjects.InternalAddFunction(System.Reflection.MethodInfo,System.String)"/> 
            method call. It may be any value, for example, "MyFuncs". Display name of category is displayed 
            in the "Data" window. In may be, for example, "My Functions".
            <para/>The following standard categories are registered by default:
            <list type="bullet">
              <item>
                <description>"Math"</description>
              </item>
              <item>
                <description>"Text"</description>
              </item>
              <item>
                <description>"DateTime"</description>
              </item>
              <item>
                <description>"Formatting"</description>
              </item>
              <item>
                <description>"Conversion"</description>
              </item>
              <item>
                <description>"ProgramFlow"</description>
              </item>
            </list>
            </remarks>
            <example>
            This example shows how to register a new category:
            <code>
            RegisteredObjects.AddFunctionCategory("MyFuncs", "My Functions");
            </code>
            </example>
        </member>
        <member name="M:FastReport.Utils.RegisteredObjects.AddFunction(System.Reflection.MethodInfo,System.String)">
             <summary>
             Adds a new function into the specified category.
             </summary>
             <param name="function"><b>MethodInfo</b> containing all necessary information about the function.</param>
             <param name="category">The name of category to register the function in.</param>
             <remarks>
             Your function must be a static, public method of a public class.
             <para/>The following standard categories are registered by default:
             <list type="bullet">
               <item>
                 <description>"Math"</description>
               </item>
               <item>
                 <description>"Text"</description>
               </item>
               <item>
                 <description>"DateTime"</description>
               </item>
               <item>
                 <description>"Formatting"</description>
               </item>
               <item>
                 <description>"Conversion"</description>
               </item>
               <item>
                 <description>"ProgramFlow"</description>
               </item>
             </list>
             You may use one of the standard categories, or create a new category by the
             <see cref="M:FastReport.Utils.RegisteredObjects.AddFunctionCategory(System.String,System.String)"/> method call.
             <para/>FastReport uses XML comments to display your function's description. 
             To generate XML comments, enable it in your project's properties 
             ("Project|Properties..." menu, "Build" tab, enable the "XML documentation file" checkbox).
             </remarks>
             <example>
             The following example shows how to register own functions:
             <code>
             public static class MyFunctions
             {
               /// &lt;summary&gt;
               /// Converts a specified string to uppercase.
               /// &lt;/summary&gt;
               /// &lt;param name="s"&gt;The string to convert.&lt;/param&gt;
               /// &lt;returns&gt;A string in uppercase.&lt;/returns&gt;
               public static string MyUpperCase(string s)
               {
                 return s == null ? "" : s.ToUpper();
               }
            
               /// &lt;summary&gt;
               /// Returns the larger of two 32-bit signed integers. 
               /// &lt;/summary&gt;
               /// &lt;param name="val1"&gt;The first of two values to compare.&lt;/param&gt;
               /// &lt;param name="val2"&gt;The second of two values to compare.&lt;/param&gt;
               /// &lt;returns&gt;Parameter val1 or val2, whichever is larger.&lt;/returns&gt;
               public static int MyMaximum(int val1, int val2)
               {
                 return Math.Max(val1, val2);
               }
            
               /// &lt;summary&gt;
               /// Returns the larger of two 64-bit signed integers. 
               /// &lt;/summary&gt;
               /// &lt;param name="val1"&gt;The first of two values to compare.&lt;/param&gt;
               /// &lt;param name="val2"&gt;The second of two values to compare.&lt;/param&gt;
               /// &lt;returns&gt;Parameter val1 or val2, whichever is larger.&lt;/returns&gt;
               public static long MyMaximum(long val1, long val2)
               {
                 return Math.Max(val1, val2);
               }
             }
             
             // register a category
             RegisteredObjects.AddFunctionCategory("MyFuncs", "My Functions");
              
             // obtain MethodInfo for our functions
             Type myType = typeof(MyFunctions);
             MethodInfo myUpperCaseFunc = myType.GetMethod("MyUpperCase");
             MethodInfo myMaximumIntFunc = myType.GetMethod("MyMaximum", new Type[] { typeof(int), typeof(int) });
             MethodInfo myMaximumLongFunc = myType.GetMethod("MyMaximum", new Type[] { typeof(long), typeof(long) });
                  
             // register simple function
             RegisteredObjects.AddFunction(myUpperCaseFunc, "MyFuncs");
                  
             // register overridden functions
             RegisteredObjects.AddFunction(myMaximumIntFunc, "MyFuncs,MyMaximum");
             RegisteredObjects.AddFunction(myMaximumLongFunc, "MyFuncs,MyMaximum");
             </code>
             </example>
        </member>
        <member name="M:FastReport.Utils.RegisteredObjects.FindObject(System.Type)">
            <summary>
            Finds the registered object's info.
            </summary>
            <param name="type">The type of object to find.</param>
            <returns>The object's info.</returns>
            <remarks>This method can be used to disable some objects, for example:
            <para/>RegisteredObjects.FindObject(typeof(PDFExport)).Enabled = false;
            </remarks>
        </member>
        <member name="M:FastReport.Utils.RegisteredObjects.RegisterMethod(System.Type,System.String,System.Delegate)">
            <summary>
            Register and override the method with method name in the type.
            For property use the property name and _Get or _Set suffix.
            </summary>
            <param name="type">Type for registering method</param>
            <param name="methodName">Name of method fir registering</param>
            <param name="method">Method for registering</param>
        </member>
        <member name="M:FastReport.Utils.RegisteredObjects.GetMethod(System.Type,System.String,System.Boolean)">
            <summary>
            Gets the method or null if method is not found
            </summary>
            <param name="type">Type for method finding</param>
            <param name="methodName">Name for method finfing</param>
            <param name="inheritance">Use True value for inheritance the method from base type, use false for get the method only from the this type</param>
            <returns></returns>
        </member>
        <member name="T:FastReport.Utils.Res">
            <summary>
            Used to get localized values from the language resource file.
            </summary>
            <remarks>
            The resource file used by default is english. To load another locale, call 
            the <see cref="M:FastReport.Utils.Res.LoadLocale(System.String)"/> method. It should be done at application start
            before you use any FastReport classes.
            </remarks>
        </member>
        <member name="P:FastReport.Utils.Res.LocaleFolder">
            <summary>
            Gets or set the folder that contains localization files (*.frl).
            </summary>
        </member>
        <member name="P:FastReport.Utils.Res.LocaleName">
            <summary>
            Returns the current UI locale name, for example "en".
            </summary>
        </member>
        <member name="M:FastReport.Utils.Res.LoadLocale(System.String)">
            <summary>
            Loads the locale from a file.
            </summary>
            <param name="fileName">The name of the file that contains localized strings.</param>
        </member>
        <member name="M:FastReport.Utils.Res.LoadLocale(System.Globalization.CultureInfo)">
            <summary>
            Loads and caches the locale from <see cref="T:System.Globalization.CultureInfo"/> information.
            Notes: *.frl the localization file is looked for in <see cref="P:FastReport.Utils.Res.LocaleFolder"/>
            To work correctly, it is recommended to install FastReport.Localization package
            </summary>
            <param name="culture"></param>
        </member>
        <member name="M:FastReport.Utils.Res.LoadLocale(System.IO.Stream)">
            <summary>
            Loads the locale from a stream.
            </summary>
            <param name="stream">The stream that contains localized strings.</param>
        </member>
        <member name="M:FastReport.Utils.Res.LoadEnglishLocale">
            <summary>
            Loads the english locale.
            </summary>
        </member>
        <member name="M:FastReport.Utils.Res.Get(System.String)">
            <summary>
            Gets a string with specified ID.
            </summary>
            <param name="id">The resource ID.</param>
            <returns>The localized string.</returns>
            <remarks>
            Since the locale file is xml-based, it may contain several xml node levels. For example, 
            the file contains the following items:
            <code>
            &lt;Objects&gt;
              &lt;Report Text="Report"/&gt;
              &lt;Bands Text="Bands"&gt;
                &lt;ReportTitle Text="Report Title"/&gt;
              &lt;/Bands&gt;
            &lt;/Objects&gt;
            </code>
            To get the localized "ReportTitle" value, you should pass the following ID
            to this method: "Objects,Bands,ReportTitle".
            </remarks>
        </member>
        <member name="M:FastReport.Utils.Res.GetBuiltin(System.String)">
            <summary>
            Get builtin string.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.Res.Set(System.String,System.String)">
            <summary>
            Replaces the specified locale string with the new value.
            </summary>
            <param name="id">Comma-separated path to the existing locale string.</param>
            <param name="value">The new string.</param>
            <remarks>
            Use this method if you want to replace some existing locale value with the new one.
            </remarks>
            <example>
            <code>
            Res.Set("Messages,SaveChanges", "My text that will appear when you close the designer");
            </code>
            </example>
        </member>
        <member name="M:FastReport.Utils.Res.TryGet(System.String)">
            <summary>
            Tries to get a string with specified ID.
            </summary>
            <param name="id">The resource ID.</param>
            <returns>The localized value, if specified ID exists; otherwise, the ID itself.</returns>
        </member>
        <member name="M:FastReport.Utils.Res.TryGetBuiltin(System.String)">
            <summary>
            Tries to get builtin string with specified ID.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.Res.StringExists(System.String)">
            <summary>
            Checks if specified ID exists.
            </summary>
            <param name="id">The resource ID.</param>
            <returns><b>true</b> if specified ID exists.</returns>
        </member>
        <member name="T:FastReport.Utils.MyRes">
            <summary>
            Used to access to resource IDs inside the specified branch.
            </summary>
            <remarks>
            Using the <see cref="M:FastReport.Utils.Res.Get(System.String)"/> method, you have to specify the full path to your resource.
            Using this class, you can shorten the path:
            <code>
            // using the Res.Get method
            miKeepTogether = new ToolStripMenuItem(Res.Get("ComponentMenu,HeaderBand,KeepTogether"));
            miResetPageNumber = new ToolStripMenuItem(Res.Get("ComponentMenu,HeaderBand,ResetPageNumber"));
            miRepeatOnEveryPage = new ToolStripMenuItem(Res.Get("ComponentMenu,HeaderBand,RepeatOnEveryPage"));
            
            // using MyRes.Get method
            MyRes res = new MyRes("ComponentMenu,HeaderBand");
            miKeepTogether = new ToolStripMenuItem(res.Get("KeepTogether"));
            miResetPageNumber = new ToolStripMenuItem(res.Get("ResetPageNumber"));
            miRepeatOnEveryPage = new ToolStripMenuItem(res.Get("RepeatOnEveryPage"));
            
            </code>
            </remarks>
        </member>
        <member name="M:FastReport.Utils.MyRes.Get(System.String)">
            <summary>
            Gets a string with specified ID inside the main branch.
            </summary>
            <param name="id">The resource ID.</param>
            <returns>The localized value.</returns>
        </member>
        <member name="M:FastReport.Utils.MyRes.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Utils.MyRes"/> class with spevified branch.
            </summary>
            <param name="category">The main resource branch.</param>
        </member>
        <member name="T:FastReport.Utils.SRCategory">
            <summary>
            Localized CategoryAttribute class.
            </summary>
        </member>
        <member name="M:FastReport.Utils.SRCategory.GetLocalizedString(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Utils.SRCategory.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SRCategory class.
            </summary>
            <param name="value">The category name.</param>
        </member>
        <member name="T:FastReport.Utils.ResourceLoader">
            <summary>
            Resource loader class.
            </summary>
        </member>
        <member name="M:FastReport.Utils.ResourceLoader.GetStream(System.String,System.String)">
            <summary>
            Gets a stream from specified assembly resource.
            </summary>
            <param name="assembly">Assembly name.</param>
            <param name="resource">Resource name.</param>
            <returns>Stream object.</returns>
        </member>
        <member name="M:FastReport.Utils.ResourceLoader.GetStream(System.String)">
            <summary>
            Gets a stream from FastReport assembly resource.
            </summary>
            <param name="resource">Resource name.</param>
            <returns>Stream object.</returns>
        </member>
        <member name="M:FastReport.Utils.ResourceLoader.UnpackStream(System.String,System.String)">
            <summary>
            Gets a stream from specified assembly resource and unpacks it.
            </summary>
            <param name="assembly">Assembly name.</param>
            <param name="resource">Resource name.</param>
            <returns>Stream object.</returns>
        </member>
        <member name="M:FastReport.Utils.ResourceLoader.UnpackStream(System.String)">
            <summary>
            Gets a stream from specified FastReport assembly resource and unpacks it.
            </summary>
            <param name="resource">Resource name.</param>
            <returns>Stream object.</returns>
        </member>
        <member name="T:FastReport.Utils.ScriptSecurityEventArgs">
            <summary>
            Script security event arguments.
            </summary>
        </member>
        <member name="P:FastReport.Utils.ScriptSecurityEventArgs.ReportLanguage">
            <summary>
            Gets the report language.
            </summary>
            <value>The report language.</value>
        </member>
        <member name="P:FastReport.Utils.ScriptSecurityEventArgs.Report">
            <summary>
            Gets the report.
            </summary>
            <value>The report.</value>
        </member>
        <member name="P:FastReport.Utils.ScriptSecurityEventArgs.ReportScript">
            <summary>
            Gets the report script.
            </summary>
            <value>The report script.</value>
        </member>
        <member name="P:FastReport.Utils.ScriptSecurityEventArgs.References">
            <summary>
            Gets the references of script.
            </summary>
            <value>Script references</value>
        </member>
        <member name="P:FastReport.Utils.ScriptSecurityEventArgs.IsValid">
            <summary>
            Gets or sets value if script is allowed to compile
            </summary>
            <value><c>true</c> if is valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:FastReport.Utils.ScriptSecurityEventArgs.#ctor(FastReport.Report,System.String,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Utils.ScriptSecurityEventArgs"/> class.
            </summary>
            <param name="report">Report.</param>
            <param name="script">Report's script.</param>
            <param name="refs">Report's references.</param>
        </member>
        <member name="T:FastReport.Utils.AdvancedTextRenderer">
            <summary>
            Advanced text renderer is used to perform the following tasks:
            - draw justified text, text with custom line height, text containing html tags;
            - calculate text height, get part of text that does not fit in the display rectangle;
            - get paragraphs, lines, words and char sequence to perform accurate export to such
            formats as PDF, TXT, RTF
            </summary>
            <example>Here is how one may operate the renderer items:
            <code>
            foreach (AdvancedTextRenderer.Paragraph paragraph in renderer.Paragraphs)
            {
              foreach (AdvancedTextRenderer.Line line in paragraph.Lines)
              {
                foreach (AdvancedTextRenderer.Word word in line.Words)
                {
                  if (renderer.HtmlTags)
                  {
                    foreach (AdvancedTextRenderer.Run run in word.Runs)
                    {
                      using (Font f = run.GetFont())
                      using (Brush b = run.GetBrush())
                      {
                        g.DrawString(run.Text, f, b, run.Left, run.Top, renderer.Format);
                      }  
                    }
                  }
                  else
                  {
                    g.DrawString(word.Text, renderer.Font, renderer.Brush, word.Left, word.Top, renderer.Format);
                  }
                }
              }
            }
            </code>
            </example>
        </member>
        <member name="P:FastReport.Utils.AdvancedTextRenderer.FontScale">
            <summary>
            The scale for font tag
            </summary>
        </member>
        <member name="T:FastReport.Utils.AdvancedTextRenderer.Paragraph">
            <summary>
            Paragraph represents single paragraph. It consists of one or several <see cref="P:FastReport.Utils.AdvancedTextRenderer.Paragraph.Lines"/>.
            </summary>
        </member>
        <member name="T:FastReport.Utils.AdvancedTextRenderer.Line">
            <summary>
            Line represents single text line. It consists of one or several <see cref="P:FastReport.Utils.AdvancedTextRenderer.Line.Words"/>.
            Simple line (that does not contain tabs, html tags, and is not justified) has
            single <see cref="T:FastReport.Utils.AdvancedTextRenderer.Word"/> which contains all the text.
            </summary>
        </member>
        <member name="T:FastReport.Utils.AdvancedTextRenderer.Word">
            <summary>
            Word represents single word. It may consist of one or several <see cref="P:FastReport.Utils.AdvancedTextRenderer.Word.Runs"/>, in case
            when HtmlTags are enabled in the main <see cref="T:FastReport.Utils.AdvancedTextRenderer"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Utils.AdvancedTextRenderer.BaseLine">
            <summary>
            Represents character placement.
            </summary>
        </member>
        <member name="T:FastReport.Utils.AdvancedTextRenderer.StyleDescriptor">
            <summary>
            Represents a style used in HtmlTags mode.
            </summary>
        </member>
        <member name="T:FastReport.Utils.AdvancedTextRenderer.Run">
            <summary>
            Represents sequence of characters that have the same <see cref="P:FastReport.Utils.AdvancedTextRenderer.Run.Style"/>.
            </summary>
        </member>
        <member name="T:FastReport.Utils.AdvancedTextRenderer.RunImage">
            <summary>
            Represents inline Image.
            </summary>
        </member>
        <member name="T:FastReport.Utils.StandardTextRenderer">
            <summary>
            Standard text renderer uses standard DrawString method to draw text. It also supports:
            - text rotation;
            - fonts with non-standard width ratio.
            In case your text is justified, or contains html tags, use the <see cref="T:FastReport.Utils.AdvancedTextRenderer"/>
            class instead.
            </summary>
        </member>
        <member name="T:FastReport.Utils.InlineImageCache">
            <summary>
            Cache for rendering img tags in textobject.
            You can use only HTTP[s] protocol with absolute urls.
            </summary>
        </member>
        <member name="P:FastReport.Utils.InlineImageCache.Serialized">
            <summary>
            Is serialized
            </summary>
        </member>
        <member name="P:FastReport.Utils.InlineImageCache.Client">
            <summary>
            Get or set WebClient for downloading imgs by url
            </summary>
        </member>
        <member name="E:FastReport.Utils.InlineImageCache.AfterLoad">
            <summary>
            Occurs before image load
            </summary>
        </member>
        <member name="E:FastReport.Utils.InlineImageCache.BeforeLoad">
            <summary>
            Occurs after image load
            </summary>
        </member>
        <member name="M:FastReport.Utils.InlineImageCache.AllItems">
            <summary>
            Enumerates all values
            </summary>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.InlineImageCache.Get(System.String)">
            <summary>
            Return CacheItem by src
            </summary>
            <param name="src">Src attribute from img tag</param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.InlineImageCache.Load(System.String)">
             <summary>
            
             </summary>
             <param name="src"></param>
             <returns></returns>
        </member>
        <member name="M:FastReport.Utils.InlineImageCache.Set(System.String,FastReport.Utils.InlineImageCache.CacheItem)">
            <summary>
            Set CacheItem by src
            </summary>
            <param name="src">Src attribute from img tag</param>
            <param name="item">CacheItem</param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.InlineImageCache.Validate(System.String)">
            <summary>
            Validate src attribute from image
            </summary>
            <param name="src">Src attribute from img tag</param>
            <returns>return true if src is valid</returns>
        </member>
        <member name="M:FastReport.Utils.InlineImageCache.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Utils.InlineImageCache.Finalize">
            <summary>
            
            </summary>
        </member>
        <member name="T:FastReport.Utils.InlineImageCache.CacheItem">
            <summary>
            Item of image cache Dictionary
            </summary>
        </member>
        <member name="P:FastReport.Utils.InlineImageCache.CacheItem.Base64">
            <summary>
            Get Base64 string
            </summary>
        </member>
        <member name="P:FastReport.Utils.InlineImageCache.CacheItem.Error">
            <summary>
            Return true if has some error with Image
            </summary>
        </member>
        <member name="P:FastReport.Utils.InlineImageCache.CacheItem.Image">
            <summary>
            Get Image
            </summary>
        </member>
        <member name="P:FastReport.Utils.InlineImageCache.CacheItem.Stream">
            <summary>
            Get byte array
            </summary>
        </member>
        <member name="M:FastReport.Utils.InlineImageCache.CacheItem.GetErrorImage">
            <summary>
            Return error image and set true to error property
            </summary>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.InlineImageCache.CacheItem.Set(System.String)">
            <summary>
            Set value for cache item
            </summary>
            <param name="base64">Image encoded base64 string</param>
        </member>
        <member name="M:FastReport.Utils.InlineImageCache.CacheItem.Set(System.Drawing.Image)">
            <summary>
            Set value for cache item
            </summary>
            <param name="img">Image</param>
        </member>
        <member name="M:FastReport.Utils.InlineImageCache.CacheItem.Set(System.Byte[])">
            <summary>
            Set value for cache item
            </summary>
            <param name="arr">Image</param>
        </member>
        <member name="M:FastReport.Utils.InlineImageCache.CacheItem.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:FastReport.Utils.InlineImageCache.LoadEventArgs">
            <summary>
            WebClientEventArgs
            </summary>
        </member>
        <member name="P:FastReport.Utils.InlineImageCache.LoadEventArgs.Cache">
            <summary>
            Gets a cache
            </summary>
        </member>
        <member name="P:FastReport.Utils.InlineImageCache.LoadEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether the event was handled.
            </summary>
        </member>
        <member name="P:FastReport.Utils.InlineImageCache.LoadEventArgs.Source">
            <summary>
            Gets or sets a url from src attribue of img tag
            </summary>
        </member>
        <member name="M:FastReport.Utils.InlineImageCache.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:FastReport.Utils.PageUnits">
            <summary>
            The report page units.
            </summary>
        </member>
        <member name="F:FastReport.Utils.PageUnits.Millimeters">
            <summary>
            Specifies the units measured in millimeters.
            </summary>
        </member>
        <member name="F:FastReport.Utils.PageUnits.Centimeters">
            <summary>
            Specifies the units measured in centimeters.
            </summary>
        </member>
        <member name="F:FastReport.Utils.PageUnits.Inches">
            <summary>
            Specifies the units measured in inches.
            </summary>
        </member>
        <member name="F:FastReport.Utils.PageUnits.HundrethsOfInch">
            <summary>
            Specifies the units measured in hundreths of inch.
            </summary>
        </member>
        <member name="T:FastReport.Utils.Units">
            <summary>
            Defines the constants used to convert between report units and screen pixels.
            </summary>
            <remarks>
            To convert pixels to millimeters, use the following code:
            <code>valueInMillimeters = valueInPixels / Units.Millimeters;</code>
            To convert millimeters to pixels, use the following code:
            <code>valueInPixels = valueInMillimeters * Units.Millimeters;</code>
            </remarks>
        </member>
        <member name="F:FastReport.Utils.Units.Millimeters">
            <summary>
            The number of pixels in one millimeter.
            </summary>
        </member>
        <member name="F:FastReport.Utils.Units.Centimeters">
            <summary>
            The number of pixels in one centimeter.
            </summary>
        </member>
        <member name="F:FastReport.Utils.Units.Inches">
            <summary>
            The number of pixels in one inch.
            </summary>
        </member>
        <member name="F:FastReport.Utils.Units.TenthsOfInch">
            <summary>
            The number of pixels in 1/10 of ich.
            </summary>
        </member>
        <member name="F:FastReport.Utils.Units.HundrethsOfInch">
            <summary>
            The number of pixels in 1/100 of inch.
            </summary>
        </member>
        <member name="T:FastReport.Utils.Validator">
            <summary>
            Contains methods used for validation of report.
            </summary>
        </member>
        <member name="M:FastReport.Utils.Validator.ValidateIntersectionAllObjects(FastReport.BandBase)">
            <summary>
            Check all objects on band, do they intersect or not.
            </summary>
            <param name="band">Band that should be checked.</param>
            <returns>Returns <b>true</b> if band has intersecting objects. Otherwise <b>false</b>.</returns>
        </member>
        <member name="T:FastReport.Utils.XmlProperty">
            <summary>
            Represents a xml property.
            </summary>
        </member>
        <member name="P:FastReport.Utils.XmlProperty.Key">
            <summary>
            Represents a property key.
            </summary>
        </member>
        <member name="P:FastReport.Utils.XmlProperty.Value">
            <summary>
            Represents a property value.
            </summary>
        </member>
        <member name="M:FastReport.Utils.XmlProperty.Create(System.String,System.String)">
            <summary>
            Creates new property and assigns value
            </summary>
            <param name="key">Property key</param>
            <param name="value">Property value</param>
        </member>
        <member name="T:FastReport.Utils.XmlItem">
            <summary>
            Represents a xml node.
            </summary>
        </member>
        <member name="P:FastReport.Utils.XmlItem.Count">
            <summary>
            Gets a number of children in this node.
            </summary>
        </member>
        <member name="P:FastReport.Utils.XmlItem.Items">
            <summary>
            Gets a list of children in this node.
            </summary>
        </member>
        <member name="P:FastReport.Utils.XmlItem.Item(System.Int32)">
            <summary>
            Gets a child node with specified index.
            </summary>
            <param name="index">Index of node.</param>
            <returns>The node with specified index.</returns>
        </member>
        <member name="P:FastReport.Utils.XmlItem.Name">
            <summary>
            Gets or sets the node name.
            </summary>
            <remarks>
            This property will return "Node" for a node like <c>&lt;Node Text="" Left="0"/&gt;</c>
            </remarks>
        </member>
        <member name="P:FastReport.Utils.XmlItem.Properties">
            <summary>
            Gets or sets a list of properties in this node.
            </summary>
        </member>
        <member name="P:FastReport.Utils.XmlItem.Parent">
            <summary>
            Gets or sets the parent for this node.
            </summary>
        </member>
        <member name="P:FastReport.Utils.XmlItem.Value">
            <summary>
            Gets or sets the node value.
            </summary>
            <remarks>
            This property will return "ABC" for a node like <c>&lt;Node&gt;ABC&lt;/Node&gt;</c>
            </remarks>
        </member>
        <member name="P:FastReport.Utils.XmlItem.Root">
            <summary>
            Gets the root node which owns this node.
            </summary>
        </member>
        <member name="M:FastReport.Utils.XmlItem.Clear">
            <summary>
            Clears the child nodes of this node.
            </summary>
        </member>
        <member name="M:FastReport.Utils.XmlItem.Add">
            <summary>
            Adds a new child node to this node.
            </summary>
            <returns>The new child node.</returns>
        </member>
        <member name="M:FastReport.Utils.XmlItem.AddItem(FastReport.Utils.XmlItem)">
            <summary>
            Adds a specified node to this node.
            </summary>
            <param name="item">The node to add.</param>
        </member>
        <member name="M:FastReport.Utils.XmlItem.InsertItem(System.Int32,FastReport.Utils.XmlItem)">
            <summary>
            Inserts a specified node to this node.
            </summary>
            <param name="index">Position to insert.</param>
            <param name="item">Node to insert.</param>
        </member>
        <member name="M:FastReport.Utils.XmlItem.Find(System.String)">
            <summary>
            Finds the node with specified name.
            </summary>
            <param name="name">The name of node to find.</param>
            <returns>The node with specified name, if found; <b>null</b> otherwise.</returns>
        </member>
        <member name="M:FastReport.Utils.XmlItem.FindItem(System.String)">
            <summary>
            Finds the node with specified name.
            </summary>
            <param name="name">The name of node to find.</param>
            <returns>The node with specified name, if found; the new node otherwise.</returns>
            <remarks>
            This method adds the node with specified name to the child nodes if it cannot find the node.
            Do not dispose items, which has been created by this method
            </remarks>
        </member>
        <member name="M:FastReport.Utils.XmlItem.IndexOf(FastReport.Utils.XmlItem)">
            <summary>
            Gets the index of specified node in the child nodes list.
            </summary>
            <param name="item">The node to find.</param>
            <returns>Zero-based index of node, if found; <b>-1</b> otherwise.</returns>
        </member>
        <member name="M:FastReport.Utils.XmlItem.GetProp(System.String)">
            <summary>
            Gets a property with specified name.
            </summary>
            <param name="key">The property name.</param>
            <returns>The value of property, if found; empty string otherwise.</returns>
            <remarks>
            This property will return "0" when you request the "Left" property for a node 
            like <c>&lt;Node Text="" Left="0"/&gt;</c>
            </remarks>
        </member>
        <member name="M:FastReport.Utils.XmlItem.ClearProps">
            <summary>
            Removes all properties.
            </summary>
        </member>
        <member name="M:FastReport.Utils.XmlItem.SetProp(System.String,System.String)">
            <summary>
            Sets the value for a specified property.
            </summary>
            <param name="key">The property name.</param>
            <param name="value">Value to set.</param>
            <remarks>
            For example, you have a node like <c>&lt;Node Text="" Left="0"/&gt;</c>. When you set the
            "Text" property to "test", the node will be <c>&lt;Node Text="test" Left="0"/&gt;</c>.
            If property with specified name is not exist, it will be added.
            </remarks>
        </member>
        <member name="M:FastReport.Utils.XmlItem.RemoveProp(System.String)">
            <summary>
            Removes a property with specified name.
            </summary>
            <param name="key">The property name.</param>
            <returns>Returns true if property is removed, false otherwise.</returns>
        </member>
        <member name="M:FastReport.Utils.XmlItem.Dispose">
            <summary>
            Disposes the node and all its children.
            </summary>
        </member>
        <member name="M:FastReport.Utils.XmlItem.#ctor">
            <summary>
            Initializes a new instance of the <b>XmlItem</b> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Utils.XmlDocument">
            <summary>
            Represents a xml document that contains the root xml node.
            </summary>
            <remarks>
            Use <b>Load</b> and <b>Save</b> methods to load/save the document. To access the root node
            of the document, use the <see cref="P:FastReport.Utils.XmlDocument.Root"/> property.
            </remarks>
        </member>
        <member name="P:FastReport.Utils.XmlDocument.AutoIndent">
            <summary>
            Gets or sets a value indicating whether is necessary to indent the document
            when saving it to a file/stream.
            </summary>
        </member>
        <member name="P:FastReport.Utils.XmlDocument.WriteHeader">
            <summary>
            Gets or sets a value indicating whether is necessary to add xml header.
            </summary>
        </member>
        <member name="P:FastReport.Utils.XmlDocument.Root">
            <summary>
            Gets the root node of the document.
            </summary>
        </member>
        <member name="M:FastReport.Utils.XmlDocument.Clear">
            <summary>
            Clears the document.
            </summary>
        </member>
        <member name="M:FastReport.Utils.XmlDocument.Save(System.IO.Stream)">
            <summary>
            Saves the document to a stream.
            </summary>
            <param name="stream">Stream to save to.</param>
        </member>
        <member name="M:FastReport.Utils.XmlDocument.Save(System.IO.TextWriter)">
            <summary>
            Saves the document to a string.
            </summary>
            <param name="textWriter">Writer to save to.</param>
        </member>
        <member name="M:FastReport.Utils.XmlDocument.Load(System.IO.Stream)">
            <summary>
            Loads the document from a stream.
            </summary>
            <param name="stream">Stream to load from.</param>
        </member>
        <member name="M:FastReport.Utils.XmlDocument.Save(System.String)">
            <summary>
            Saves the document to a file.
            </summary>
            <param name="fileName">The name of file to save to.</param>
        </member>
        <member name="M:FastReport.Utils.XmlDocument.Load(System.String)">
            <summary>
            Loads the document from a file.
            </summary>
            <param name="fileName">The name of file to load from.</param>
        </member>
        <member name="M:FastReport.Utils.XmlDocument.Dispose">
            <summary>
            Disposes resources used by the document.
            </summary>
        </member>
        <member name="M:FastReport.Utils.XmlDocument.#ctor">
            <summary>
            Initializes a new instance of the <b>XmlDocument</b> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.Utils.XmlDocument.ToString">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Utils.ZipArchive">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.Utils.ZipArchive.Clear">
            <summary>
            Clear all files in archive.
            </summary>
        </member>
        <member name="M:FastReport.Utils.ZipArchive.FileExists(System.String)">
            <summary>
            Check for exisiting file in archive.
            </summary>
            <param name="FileName"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.ZipArchive.AddFile(System.String)">
            <summary>
            Adds the file form disk to the archive.
            </summary>
            <param name="FileName"></param>
        </member>
        <member name="M:FastReport.Utils.ZipArchive.AddDir(System.String)">
            <summary>
            Adds all files from directory (recursive) on the disk to the archive.
            </summary>
            <param name="DirName"></param>
        </member>
        <member name="M:FastReport.Utils.ZipArchive.AddStream(System.String,System.IO.Stream)">
            <summary>
            Adds the stream to the archive.
            </summary>
            <param name="fileName"></param>
            <param name="stream"></param>
        </member>
        <member name="M:FastReport.Utils.ZipArchive.SaveToStream(System.IO.Stream)">
            <summary>
            Creates the zip and writes it to rhe Stream
            </summary>
            <param name="Stream"></param>
        </member>
        <member name="M:FastReport.Utils.ZipArchive.SaveToFile(System.String)">
            <summary>
            Creates the ZIP archive and writes it to the file.
            </summary>
            <param name="FileName"></param>
        </member>
        <member name="P:FastReport.Utils.ZipArchive.RootFolder">
            <summary>
            Gets or sets the Root Folder.
            </summary>
        </member>
        <member name="P:FastReport.Utils.ZipArchive.Errors">
            <summary>
            Gets or sets the errors.
            </summary>
        </member>
        <member name="P:FastReport.Utils.ZipArchive.Comment">
            <summary>
            Gets or sets the commentary to the archive.
            </summary>
        </member>
        <member name="P:FastReport.Utils.ZipArchive.FileCount">
            <summary>
            Gets count of files in archive.
            </summary>
        </member>
        <member name="M:FastReport.Utils.ZipArchive.#ctor">
            <summary>
            Creates the new zip archive.
            </summary>
        </member>
        <member name="T:FastReport.AssemblyInitializer">
            <summary>
            The FastReport.dll assembly initializer.
            </summary>
        </member>
        <member name="M:FastReport.AssemblyInitializer.#ctor">
            <summary>
            Registers all core objects, wizards, export filters.
            </summary>
        </member>
        <member name="T:FastReport.BandCollection">
            <summary>
            Represents a collection of bands.
            </summary>
        </member>
        <member name="P:FastReport.BandCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">Index of an element.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:FastReport.BandCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.BandCollection"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.BandCollection.#ctor(FastReport.Base)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.BandCollection"/> class with specified owner.
            </summary>
            <param name="owner">Owner that owns this collection.</param>
        </member>
        <member name="T:FastReport.ColumnLayout">
            <summary>
            The layout of the data band columns.
            </summary>
        </member>
        <member name="F:FastReport.ColumnLayout.AcrossThenDown">
            <summary>
            Print columns across then down.
            </summary>
        </member>
        <member name="F:FastReport.ColumnLayout.DownThenAcross">
            <summary>
            Print columns down then across.
            </summary>
        </member>
        <member name="T:FastReport.BandColumns">
            <summary>
            This class holds the band columns settings. It is used in the <see cref="P:FastReport.DataBand.Columns"/> property.
            </summary>
        </member>
        <member name="P:FastReport.BandColumns.Count">
            <summary>
            Gets or sets the number of columns.
            </summary>
            <remarks>
            Set this property to 0 or 1 if you don't want to use columns.
            </remarks>
        </member>
        <member name="P:FastReport.BandColumns.Width">
            <summary>
            The column width, in pixels.
            </summary>
        </member>
        <member name="P:FastReport.BandColumns.Layout">
            <summary>
            Gets or sets the layout of the columns.
            </summary>
        </member>
        <member name="P:FastReport.BandColumns.MinRowCount">
            <summary>
            Gets or sets the minimum row count that must be printed.
            </summary>
            <remarks>
            This property is used if the <b>Layout</b> property is set to <b>DownThenAcross</b>. 0 means that
            FastReport should calculate the optimal number of rows.
            </remarks>
        </member>
        <member name="M:FastReport.BandColumns.Assign(FastReport.BandColumns)">
            <summary>
            Assigns values from another source.
            </summary>
            <param name="source">Source to assign from.</param>
        </member>
        <member name="M:FastReport.BandColumns.#ctor(FastReport.DataBand)">
            <summary>
            Initializes a new instance of the <b>BandColumns</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Barcode.Aztec.AztecCode">
            <summary>
            Aztec 2D code representation
            </summary>
            <author>Rustam Abdullaev</author>
        </member>
        <member name="P:FastReport.Barcode.Aztec.AztecCode.isCompact">
            <summary>
            Compact or full symbol indicator
            </summary>
        </member>
        <member name="P:FastReport.Barcode.Aztec.AztecCode.Size">
            <summary>
            Size in pixels (width and height)
            </summary>
        </member>
        <member name="P:FastReport.Barcode.Aztec.AztecCode.Layers">
            <summary>
            Number of levels
            </summary>
        </member>
        <member name="P:FastReport.Barcode.Aztec.AztecCode.CodeWords">
            <summary>
            Number of data codewords
            </summary>
        </member>
        <member name="P:FastReport.Barcode.Aztec.AztecCode.Matrix">
            <summary>
            The symbol image
            </summary>
        </member>
        <member name="T:FastReport.Barcode.Aztec.AztecEncodingOptions">
            <summary>
            The class holds the available options for the AztecWriter
            </summary>
        </member>
        <member name="P:FastReport.Barcode.Aztec.AztecEncodingOptions.ErrorCorrection">
            <summary>
            Representing the minimal percentage of error correction words. 
            Note: an Aztec symbol should have a minimum of 25% EC words.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.Aztec.AztecEncodingOptions.Layers">
            <summary>
            Specifies the required number of layers for an Aztec code:
            a negative number (-1, -2, -3, -4) specifies a compact Aztec code
            0 indicates to use the minimum number of layers (the default)
            a positive number (1, 2, .. 32) specifies a normal (non-compact) Aztec code
            </summary>
        </member>
        <member name="T:FastReport.Barcode.Aztec.BitArray">
            <summary>
            A simple, fast array of bits, represented compactly by an array of ints internally.
            </summary>
            <author>Sean Owen</author>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitArray.flip(System.Int32)">
            <summary> Flips bit i.
            
            </summary>
            <param name="i">bit to set
            </param>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitArray.getNextSet(System.Int32)">
            <summary>
            Gets the next set.
            </summary>
            <param name="from">first bit to check</param>
            <returns>index of first bit that is set, starting from the given index, or size if none are set
            at or beyond this given index</returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitArray.getNextUnset(System.Int32)">
            <summary>
            see getNextSet(int)
            </summary>
            <param name="from">index to start looking for unset bit</param>
            <returns>index of next unset bit, or <see cref="P:FastReport.Barcode.Aztec.BitArray.Size"/> if none are unset until the end</returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitArray.setBulk(System.Int32,System.Int32)">
            <summary> Sets a block of 32 bits, starting at bit i.
            
            </summary>
            <param name="i">first bit to set
            </param>
            <param name="newBits">the new value of the next 32 bits. Note again that the least-significant bit
            corresponds to bit i, the next-least-significant to i+1, and so on.
            </param>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitArray.setRange(System.Int32,System.Int32)">
            <summary>
            Sets a range of bits.
            </summary>
            <param name="start">start of range, inclusive.</param>
            <param name="end">end of range, exclusive</param>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitArray.clear">
            <summary> Clears all bits (sets to false).</summary>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitArray.isRange(System.Int32,System.Int32,System.Boolean)">
            <summary> Efficient method to check if a range of bits is set, or not set.
            
            </summary>
            <param name="start">start of range, inclusive.
            </param>
            <param name="end">end of range, exclusive
            </param>
            <param name="value">if true, checks that bits in range are set, otherwise checks that they are not set
            </param>
            <returns> true iff all bits are set or not set in range, according to value argument
            </returns>
            <throws>  IllegalArgumentException if end is less than or equal to start </throws>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitArray.appendBit(System.Boolean)">
            <summary>
            Appends the bit.
            </summary>
            <param name="bit">The bit.</param>
        </member>
        <member name="P:FastReport.Barcode.Aztec.BitArray.Array">
            <returns> underlying array of ints. The first element holds the first 32 bits, and the least
            significant bit is bit 0.
            </returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitArray.appendBits(System.Int32,System.Int32)">
            <summary>
            Appends the least-significant bits, from value, in order from most-significant to
            least-significant. For example, appending 6 bits from 0x000001E will append the bits
            0, 1, 1, 1, 1, 0 in that order.
            </summary>
            <param name="value"><see cref="T:System.Int32"/> containing bits to append</param>
            <param name="numBits">bits from value to append</param>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitArray.toBytes(System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Toes the bytes.
            </summary>
            <param name="bitOffset">first bit to start writing</param>
            <param name="array">array to write into. Bytes are written most-significant byte first. This is the opposite
            of the internal representation, which is exposed by BitArray</param>
            <param name="offset">position in array to start writing</param>
            <param name="numBytes">how many bytes to write</param>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitArray.reverse">
            <summary> Reverses all bits in the array.</summary>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitArray.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="o">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitArray.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitArray.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitArray.Clone">
            <summary>
            Erstellt ein neues Objekt, das eine Kopie der aktuellen Instanz darstellt.
            </summary>
            <returns>
            Ein neues Objekt, das eine Kopie dieser Instanz darstellt.
            </returns>
        </member>
        <member name="T:FastReport.Barcode.Aztec.BitMatrix">
            <summary>
              <p>Represents a 2D matrix of bits. In function arguments below, and throughout the common
            module, x is the column position, and y is the row position. The ordering is always x, y.
            The origin is at the top-left.</p>
              <p>Internally the bits are represented in a 1-D array of 32-bit ints. However, each row begins
            with a new int. This is done intentionally so that we can copy out a row into a BitArray very
            efficiently.</p>
              <p>The ordering of bits is row-major. Within each int, the least significant bits are used first,
            meaning they represent lower x values. This is compatible with BitArray's implementation.</p>
            </summary>
            <author>Sean Owen</author>
            <author>dswitkin@google.com (Daniel Switkin)</author>
        </member>
        <member name="P:FastReport.Barcode.Aztec.BitMatrix.Width">
            <returns> The width of the matrix
            </returns>
        </member>
        <member name="P:FastReport.Barcode.Aztec.BitMatrix.Height">
            <returns> The height of the matrix
            </returns>
        </member>
        <member name="P:FastReport.Barcode.Aztec.BitMatrix.Dimension">
            <summary> This method is for compatibility with older code. It's only logical to call if the matrix
            is square, so I'm throwing if that's not the case.
            
            </summary>
            <returns> row/column dimension of this matrix
            </returns>
        </member>
        <member name="P:FastReport.Barcode.Aztec.BitMatrix.Item(System.Int32,System.Int32)">
            <summary> <p>Gets the requested bit, where true means black.</p>
            
            </summary>
            <param name="x">The horizontal component (i.e. which column)
            </param>
            <param name="y">The vertical component (i.e. which row)
            </param>
            <returns> value of given bit in matrix
            </returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitMatrix.flip(System.Int32,System.Int32)">
            <summary> <p>Flips the given bit.</p>
            
            </summary>
            <param name="x">The horizontal component (i.e. which column)
            </param>
            <param name="y">The vertical component (i.e. which row)
            </param>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitMatrix.clear">
            <summary> Clears all bits (sets to false).</summary>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitMatrix.setRegion(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary> <p>Sets a square region of the bit matrix to true.</p>
            
            </summary>
            <param name="left">The horizontal position to begin at (inclusive)
            </param>
            <param name="top">The vertical position to begin at (inclusive)
            </param>
            <param name="width">The width of the region
            </param>
            <param name="height">The height of the region
            </param>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitMatrix.getRow(System.Int32,FastReport.Barcode.Aztec.BitArray)">
            <summary> A fast method to retrieve one row of data from the matrix as a BitArray.
            
            </summary>
            <param name="y">The row to retrieve
            </param>
            <param name="row">An optional caller-allocated BitArray, will be allocated if null or too small
            </param>
            <returns> The resulting BitArray - this reference should always be used even when passing
            your own row
            </returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitMatrix.setRow(System.Int32,FastReport.Barcode.Aztec.BitArray)">
            <summary>
            Sets the row.
            </summary>
            <param name="y">row to set</param>
            <param name="row">{@link BitArray} to copy from</param>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitMatrix.rotate180">
            <summary>
            Modifies this {@code BitMatrix} to represent the same but rotated 180 degrees
            </summary>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitMatrix.getEnclosingRectangle">
            <summary>
            This is useful in detecting the enclosing rectangle of a 'pure' barcode.
            </summary>
            <returns>{left,top,width,height} enclosing rectangle of all 1 bits, or null if it is all white</returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitMatrix.getTopLeftOnBit">
            <summary>
            This is useful in detecting a corner of a 'pure' barcode.
            </summary>
            <returns>{x,y} coordinate of top-left-most 1 bit, or null if it is all white</returns>
        </member>
        <member name="T:FastReport.Barcode.Aztec.EncodeHintType">
            <summary>
            These are a set of hints that you may pass to Writers to specify their behavior.
            </summary>
            <author>dswitkin@google.com (Daniel Switkin)</author>
        </member>
        <member name="F:FastReport.Barcode.Aztec.EncodeHintType.WIDTH">
            <summary>
            Specifies the width of the barcode image
            type: <see cref="T:System.Int32" />
            </summary>
        </member>
        <member name="F:FastReport.Barcode.Aztec.EncodeHintType.HEIGHT">
            <summary>
            Specifies the height of the barcode image
            type: <see cref="T:System.Int32" />
            </summary>
        </member>
        <member name="F:FastReport.Barcode.Aztec.EncodeHintType.PURE_BARCODE">
            <summary>
            Don't put the content string into the output image.
            type: <see cref="T:System.Boolean" />
            </summary>
        </member>
        <member name="F:FastReport.Barcode.Aztec.EncodeHintType.CHARACTER_SET">
            <summary>
            Specifies what character encoding to use where applicable.
            type: <see cref="T:System.String" />
            </summary>
        </member>
        <member name="F:FastReport.Barcode.Aztec.EncodeHintType.MARGIN">
            <summary>
            Specifies margin, in pixels, to use when generating the barcode. The meaning can vary
            by format; for example it controls margin before and after the barcode horizontally for
            most 1D formats.
            type: <see cref="T:System.Int32" />
            </summary>
        </member>
        <member name="F:FastReport.Barcode.Aztec.EncodeHintType.PDF417_COMPACT">
            <summary>
            Specifies whether to use compact mode for PDF417.
            type: <see cref="T:System.Boolean" />
            </summary>
        </member>
        <member name="F:FastReport.Barcode.Aztec.EncodeHintType.DISABLE_ECI">
            <summary>
            Don't append ECI segment.
            That is against the specification of QR Code but some
            readers have problems if the charset is switched from
            ISO-8859-1 (default) to UTF-8 with the necessary ECI segment.
            If you set the property to true you can use UTF-8 encoding
            and the ECI segment is omitted.
            type: <see cref="T:System.Boolean" />
            </summary>
        </member>
        <member name="F:FastReport.Barcode.Aztec.EncodeHintType.CODE128_FORCE_CODESET_B">
            <summary>
            if true, don't switch to codeset C for numbers
            </summary>
        </member>
        <member name="F:FastReport.Barcode.Aztec.EncodeHintType.AZTEC_LAYERS">
            <summary>
            Specifies the required number of layers for an Aztec code:
            a negative number (-1, -2, -3, -4) specifies a compact Aztec code
            0 indicates to use the minimum number of layers (the default)
            a positive number (1, 2, .. 32) specifies a normal (non-compact) Aztec code
            </summary>
        </member>
        <member name="T:FastReport.Barcode.Aztec.Encoder">
            <summary>
            Generates Aztec 2D barcodes.
            </summary>
            <author>Rustam Abdullaev</author>
        </member>
        <member name="M:FastReport.Barcode.Aztec.Encoder.encode(System.Byte[])">
            <summary>
            Encodes the given binary content as an Aztec symbol
            </summary>
            <param name="data">input data string</param>
            <returns>Aztec symbol matrix with metadata</returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.Encoder.encode(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Encodes the given binary content as an Aztec symbol
            </summary>
            <param name="data">input data string</param>
            <param name="minECCPercent">minimal percentage of error check words (According to ISO/IEC 24778:2008,
            a minimum of 23% + 3 words is recommended)</param>
            <param name="userSpecifiedLayers">if non-zero, a user-specified value for the number of layers</param>
            <returns>
            Aztec symbol matrix with metadata
            </returns>
        </member>
        <member name="T:FastReport.Barcode.Aztec.EncodingOptions">
            <summary>
            Defines an container for encoder options
            </summary>
        </member>
        <member name="P:FastReport.Barcode.Aztec.EncodingOptions.Hints">
            <summary>
            Gets the data container for all options
            </summary>
        </member>
        <member name="P:FastReport.Barcode.Aztec.EncodingOptions.Height">
            <summary>
            Specifies the height of the barcode image
            </summary>
        </member>
        <member name="P:FastReport.Barcode.Aztec.EncodingOptions.Width">
            <summary>
            Specifies the width of the barcode image
            </summary>
        </member>
        <member name="P:FastReport.Barcode.Aztec.EncodingOptions.PureBarcode">
            <summary>
            Don't put the content string into the output image.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.Aztec.EncodingOptions.Margin">
            <summary>
            Specifies margin, in pixels, to use when generating the barcode. The meaning can vary
            by format; for example it controls margin before and after the barcode horizontally for
            most 1D formats.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.Aztec.EncodingOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.Aztec.EncodingOptions"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.Aztec.GenericGF">
            <summary>
              <p>This class contains utility methods for performing mathematical operations over
            the Galois Fields. Operations use a given primitive polynomial in calculations.</p>
              <p>Throughout this package, elements of the GF are represented as an {@code int}
            for convenience and speed (but at the cost of memory).
              </p>
            </summary>
            <author>Sean Owen</author>
        </member>
        <member name="M:FastReport.Barcode.Aztec.GenericGF.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Create a representation of GF(size) using the given primitive polynomial.
            </summary>
            <param name="primitive">irreducible polynomial whose coefficients are represented by
            *  the bits of an int, where the least-significant bit represents the constant
            *  coefficient</param>
            <param name="size">the size of the field</param>
            <param name="genBase">the factor b in the generator polynomial can be 0- or 1-based
            *  (g(x) = (x+a^b)(x+a^(b+1))...(x+a^(b+2t-1))).
            *  In most cases it should be 1, but for QR code it is 0.</param>
        </member>
        <member name="M:FastReport.Barcode.Aztec.GenericGF.buildMonomial(System.Int32,System.Int32)">
            <summary>
            Builds the monomial.
            </summary>
            <param name="degree">The degree.</param>
            <param name="coefficient">The coefficient.</param>
            <returns>the monomial representing coefficient * x^degree</returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.GenericGF.addOrSubtract(System.Int32,System.Int32)">
            <summary>
            Implements both addition and subtraction -- they are the same in GF(size).
            </summary>
            <returns>sum/difference of a and b</returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.GenericGF.exp(System.Int32)">
            <summary>
            Exps the specified a.
            </summary>
            <returns>2 to the power of a in GF(size)</returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.GenericGF.log(System.Int32)">
            <summary>
            Logs the specified a.
            </summary>
            <param name="a">A.</param>
            <returns>base 2 log of a in GF(size)</returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.GenericGF.inverse(System.Int32)">
            <summary>
            Inverses the specified a.
            </summary>
            <returns>multiplicative inverse of a</returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.GenericGF.multiply(System.Int32,System.Int32)">
            <summary>
            Multiplies the specified a with b.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>product of a and b in GF(size)</returns>
        </member>
        <member name="P:FastReport.Barcode.Aztec.GenericGF.Size">
            <summary>
            Gets the size.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.Aztec.GenericGF.GeneratorBase">
            <summary>
            Gets the generator base.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.Aztec.GenericGF.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:FastReport.Barcode.Aztec.GenericGFPoly">
            <summary>
            <p>Represents a polynomial whose coefficients are elements of a GF.
            Instances of this class are immutable.</p>
            <p>Much credit is due to William Rucklidge since portions of this code are an indirect
            port of his C++ Reed-Solomon implementation.</p>
            </summary>
            <author>Sean Owen</author>
        </member>
        <member name="M:FastReport.Barcode.Aztec.GenericGFPoly.#ctor(FastReport.Barcode.Aztec.GenericGF,System.Int32[])">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.Aztec.GenericGFPoly"/> class.
            </summary>
            <param name="field">the {@link GenericGF} instance representing the field to use
            to perform computations</param>
            <param name="coefficients">coefficients as ints representing elements of GF(size), arranged
            from most significant (highest-power term) coefficient to least significant</param>
            <exception cref="T:System.ArgumentException">if argument is null or empty,
            or if leading coefficient is 0 and this is not a
            constant polynomial (that is, it is not the monomial "0")</exception>
        </member>
        <member name="P:FastReport.Barcode.Aztec.GenericGFPoly.Degree">
            <summary>
            degree of this polynomial
            </summary>
        </member>
        <member name="P:FastReport.Barcode.Aztec.GenericGFPoly.isZero">
            <summary>
            Gets a value indicating whether this <see cref="T:FastReport.Barcode.Aztec.GenericGFPoly"/> is zero.
            </summary>
            <value>true iff this polynomial is the monomial "0"</value>
        </member>
        <member name="M:FastReport.Barcode.Aztec.GenericGFPoly.getCoefficient(System.Int32)">
            <summary>
            coefficient of x^degree term in this polynomial
            </summary>
            <param name="degree">The degree.</param>
            <returns>coefficient of x^degree term in this polynomial</returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.GenericGFPoly.evaluateAt(System.Int32)">
            <summary>
            evaluation of this polynomial at a given point
            </summary>
            <param name="a">A.</param>
            <returns>evaluation of this polynomial at a given point</returns>
        </member>
        <member name="T:FastReport.Barcode.Aztec.HighLevelEncoder">
            <summary>
            This produces nearly optimal encodings of text into the first-level of
            encoding used by Aztec code.
            It uses a dynamic algorithm.  For each prefix of the string, it determines
            a set of encodings that could lead to this prefix.  We repeatedly add a
            character and generate a new set of optimal encodings until we have read
            through the entire input.
            @author Frank Yellin
            @author Rustam Abdullaev
            </summary>
        </member>
        <member name="M:FastReport.Barcode.Aztec.HighLevelEncoder.encode">
            <summary>
            Convert the text represented by this High Level Encoder into a BitArray.
            </summary>
            <returns>text represented by this encoder encoded as a <see cref="T:FastReport.Barcode.Aztec.BitArray"/></returns>
        </member>
        <member name="T:FastReport.Barcode.Aztec.ReedSolomonEncoder">
            <summary>
            Implements Reed-Solomon encoding, as the name implies.
            </summary>
            <author>Sean Owen</author>
            <author>William Rucklidge</author>
        </member>
        <member name="T:FastReport.Barcode.Aztec.State">
            <summary>
            State represents all information about a sequence necessary to generate the current output.
            Note that a state is immutable.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.Aztec.State.latchAndAppend(System.Int32,System.Int32)">
            <summary>
            Create a new state representing this state with a latch to a (not
            necessary different) mode, and then a code.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.Aztec.State.shiftAndAppend(System.Int32,System.Int32)">
            <summary>
            Create a new state representing this state, with a temporary shift
            to a different mode to output a single value.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.Aztec.State.addBinaryShiftChar(System.Int32)">
            <summary>
            Create a new state representing this state, but an additional character
            output in Binary Shift mode.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.Aztec.State.endBinaryShift(System.Int32)">
            <summary>
            Create the state identical to this one, but we are no longer in
            Binary Shift mode.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.Aztec.State.isBetterThanOrEqualTo(FastReport.Barcode.Aztec.State)">
            <summary>
            Returns true if "this" state is better (or equal) to be in than "that"
            state under all possible circumstances.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.Aztec.SupportClass">
            <summary>
            Contains conversion support elements such as classes, interfaces and static methods.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.Aztec.SupportClass.GetCharsFromString(System.String,System.Int32,System.Int32,System.Char[],System.Int32)">
            <summary>
            Copies an array of chars obtained from a String into a specified array of chars
            </summary>
            <param name="sourceString">The String to get the chars from</param>
            <param name="sourceStart">Position of the String to start getting the chars</param>
            <param name="sourceEnd">Position of the String to end getting the chars</param>
            <param name="destinationArray">Array to return the chars</param>
            <param name="destinationStart">Position of the destination array of chars to start storing the chars</param>
            <returns>An array of chars</returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.SupportClass.SetCapacity``1(System.Collections.Generic.IList{``0},System.Int32)">
            <summary>
            Sets the capacity for the specified List
            </summary>
            <param name="vector">The List which capacity will be set</param>
            <param name="newCapacity">The new capacity value</param>
        </member>
        <member name="M:FastReport.Barcode.Aztec.SupportClass.toStringArray(System.Collections.Generic.ICollection{System.String})">
            <summary>
            Converts a string-Collection to an array
            </summary>
            <param name="strings">The strings.</param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.SupportClass.Join``1(System.String,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Joins all elements to one string.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="separator">The separator.</param>
            <param name="values">The values.</param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.SupportClass.Fill``1(``0[],``0)">
            <summary>
            Fills the specified array.
            (can't use extension method because of .Net 2.0 support)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="array">The array.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:FastReport.Barcode.Aztec.SupportClass.Fill``1(``0[],System.Int32,System.Int32,``0)">
            <summary>
            Fills the specified array.
            (can't use extension method because of .Net 2.0 support)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="array">The array.</param>
            <param name="startIndex">The start index.</param>
            <param name="endIndex">The end index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:FastReport.Barcode.Barcode128">
            <summary>
            Generates the Code128 barcode.
            </summary>
            <remarks>
            This barcode supports three code pages: A, B and C. You need to set appropriate code page
            in the barcode text, or use the auto encode feature. See the <see cref="P:FastReport.Barcode.Barcode128.AutoEncode"/> property
            for more details.
            </remarks>
            <example>This example shows how to configure the BarcodeObject to display Code128 barcode.
            <code>
            BarcodeObject barcode;
            ...
            barcode.Barcode = new Barcode128();
            (barcode.Barcode as Barcode128).AutoEncode = false;
            </code>
            </example>
        </member>
        <member name="P:FastReport.Barcode.Barcode128.AutoEncode">
            <summary>
            Gets or sets a value that determines whether the barcode should automatically 
            use appropriate encoding.
            </summary>
            <remarks>
            You may use this property to encode data automatically. If you set it to <b>false</b>, 
            you must specify the code page inside the data string. The following control codes are available:
            <list type="table">
              <listheader>
                <term>Sequence</term>
                <description>Code128 control code</description>
              </listheader>
              <item>
                <term>&amp;A;</term>
                <description>START A / CODE A</description>
              </item>
              <item>
                <term>&amp;B;</term>
                <description>START B / CODE B</description>
              </item>
              <item>
                <term>&amp;C;</term>
                <description>START C / CODE C</description>
              </item>
            </list>
              <item>
                <term>&amp;S;</term>
                <description>SHIFT</description>
              </item>
              <item>
                <term>&amp;1;</term>
                <description>FNC1</description>
              </item>
              <item>
                <term>&amp;2;</term>
                <description>FNC2</description>
              </item>
              <item>
                <term>&amp;3;</term>
                <description>FNC3</description>
              </item>
              <item>
                <term>&amp;4;</term>
                <description>FNC4</description>
              </item>
            </remarks>
            <example>The following example shows how to specify control codes:
            <code>
            BarcodeObject barcode;
            barcode.Barcode = new Barcode128();
            (barcode.Barcode as Barcode128).AutoEncode = false;
            barcode.Text = "&amp;C;1234&amp;A;ABC";
            </code>
            </example>
        </member>
        <member name="P:FastReport.Barcode.Barcode128.IsNumeric">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.Barcode128.Assign(FastReport.Barcode.BarcodeBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.Barcode128.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.Barcode128"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.Barcode2DBase">
            <summary>
            The base class for 2D-barcodes such as PDF417 and Datamatrix.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.Barcode2of5Interleaved">
            <summary>
            Generates the "2/5 Interleaved" barcode.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.Barcode2of5Interleaved.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.Barcode2of5Interleaved"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.BarcodeDeutscheIdentcode">
            <summary>
            Generates the "Deutsche Identcode" barcode.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeDeutscheIdentcode.PrintCheckSum">
            <summary>
            Gets or sets a value that indicates that CheckSum should be printed.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeDeutscheIdentcode.Assign(FastReport.Barcode.BarcodeBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.BarcodeDeutscheIdentcode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.BarcodeDeutscheIdentcode"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeDeutscheIdentcode.GetDefaultValue">
            <inheritdoc />
        </member>
        <member name="T:FastReport.Barcode.BarcodeDeutscheLeitcode">
            <summary>
            Generates the "Deutsche Leitcode" barcode.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeDeutscheLeitcode.PrintCheckSum">
            <summary>
            Gets or sets a value that indicates that CheckSum should be printed.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeDeutscheLeitcode.Assign(FastReport.Barcode.BarcodeBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.BarcodeDeutscheLeitcode.GetDefaultValue">
            <inheritdoc />
        </member>
        <member name="T:FastReport.Barcode.BarcodeITF14">
            <summary>
            Generates the "ITF-14" barcode.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeITF14.DrawVerticalBearerBars">
            <summary>
            Gets or sets the value indicating that vertical bearer bars are needed to draw.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeITF14.Assign(FastReport.Barcode.BarcodeBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.BarcodeITF14.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.BarcodeITF14"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.Barcode2of5Industrial">
            <summary>
            Generates the "2/5 Industrial" barcode.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.Barcode2of5Matrix">
            <summary>
            Generates the "2/5 Matrix" barcode.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.Barcode2of5Matrix.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.Barcode2of5Matrix"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.Barcode39">
            <summary>
            Generates the Code39 barcode.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.Barcode39.IsNumeric">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.Barcode39.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.Barcode39"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.Barcode39Extended">
            <summary>
            Generates the Code39 extended barcode.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.Barcode93">
            <summary>
            Generates the Code93 barcode.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.Barcode93.IsNumeric">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Barcode.Barcode93Extended">
            <summary>
            Generates the Code93 extended barcode.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.BarcodeAztec">
            <summary>
            Generates the 2D Aztec barcode.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeAztec.ErrorCorrectionPercent">
            <summary>
            Gets or sets the error correction percent.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeAztec.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.BarcodeAztec"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeAztec.Assign(FastReport.Barcode.BarcodeBase)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Barcode.BarcodeBase">
            <summary>
            The base class for all barcodes.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeBase.Name">
            <summary>
            Gets the name of barcode.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeBase.Color">
            <summary>
            Gets or sets the color of barcode.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeBase.Clone">
            <summary>
            Creates the exact copy of this barcode.
            </summary>
            <returns>The copy of this barcode.</returns>
        </member>
        <member name="M:FastReport.Barcode.BarcodeBase.Assign(FastReport.Barcode.BarcodeBase)">
            <summary>
            Assigns properties from other, similar barcode.
            </summary>
            <param name="source">Barcode object to assign properties from.</param>
        </member>
        <member name="M:FastReport.Barcode.BarcodeBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.BarcodeBase"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeBase.GetDefaultValue">
            <summary>
            Get default value of this barcode
            </summary>
            <returns></returns>
        </member>
        <member name="T:FastReport.Barcode.BarcodeCodabar">
            <summary>
            Generates the Codabar barcode.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeCodabar.IsNumeric">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.BarcodeCodabar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.BarcodeCodabar"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.DatamatrixEncoding">
            <summary>
            Specifies the Datamatrix encoding.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixEncoding.Auto">
            <summary>
            Specifies the auto encoding.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixEncoding.Ascii">
            <summary>
            Specifies the ASCII encoding.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixEncoding.C40">
            <summary>
            Specifies the C40 encoding.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixEncoding.Text">
            <summary>
            Specifies the text encoding.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixEncoding.Base256">
            <summary>
            Specifies the binary encoding.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixEncoding.X12">
            <summary>
            Specifies the X12 encoding.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixEncoding.Edifact">
            <summary>
            Specifies the Edifact encoding.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.DatamatrixSymbolSize">
            <summary>
            Specifies the Datamatrix symbol size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Auto">
            <summary>
            Specifies the auto size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size10x10">
            <summary>
            Specifies the 10x10 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size12x12">
            <summary>
            Specifies the 12x12 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size8x18">
            <summary>
            Specifies the 8x8 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size14x14">
            <summary>
            Specifies the 14x14 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size8x32">
            <summary>
            Specifies the 8x32 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size16x16">
            <summary>
            Specifies the 16x16 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size12x26">
            <summary>
            Specifies the 12x26 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size18x18">
            <summary>
            Specifies the 18x18 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size20x20">
            <summary>
            Specifies the 20x20 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size12x36">
            <summary>
            Specifies the 12x36 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size22x22">
            <summary>
            Specifies the 22x22 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size16x36">
            <summary>
            Specifies the 16x36 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size24x24">
            <summary>
            Specifies the 24x24 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size26x26">
            <summary>
            Specifies the 26x26 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size16x48">
            <summary>
            Specifies the 16x48 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size32x32">
            <summary>
            Specifies the 32x32 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size36x36">
            <summary>
            Specifies the 36x36 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size40x40">
            <summary>
            Specifies the 40x40 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size44x44">
            <summary>
            Specifies the 44x44 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size48x48">
            <summary>
            Specifies the 48x48 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size52x52">
            <summary>
            Specifies the 52x52 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size64x64">
            <summary>
            Specifies the 64x64 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size72x72">
            <summary>
            Specifies the 72x72 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size80x80">
            <summary>
            Specifies the 80x80 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size88x88">
            <summary>
            Specifies the 88x88 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size96x96">
            <summary>
            Specifies the 96x96 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size104x104">
            <summary>
            Specifies the 104x104 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size120x120">
            <summary>
            Specifies the 120x120 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size132x132">
            <summary>
            Specifies the 132x132 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size144x144">
            <summary>
            Specifies the 144x144 size.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.BarcodeDatamatrix">
            <summary>
            Generates the 2D Data Matrix barcode.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeDatamatrix.SymbolSize">
            <summary>
            Gets or sets the symbol size.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeDatamatrix.Encoding">
            <summary>
            Gets or sets the encoding mode.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeDatamatrix.CodePage">
            <summary>
            Gets or sets the code page used for text conversion.
            </summary>
            <remarks>
            Use this property to encode non-ASCII characters. For example, set this 
            property to <b>1251</b> to use Window CP1251.
            </remarks>
        </member>
        <member name="P:FastReport.Barcode.BarcodeDatamatrix.PixelSize">
            <summary>
            Gets or sets the size of the pixel.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeDatamatrix.Assign(FastReport.Barcode.BarcodeBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.BarcodeDatamatrix.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.BarcodeDatamatrix"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.BarcodeEAN">
            <summary>
            The base class for EAN barcodes.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeEAN.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.BarcodeEAN"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.BarcodeEAN8">
            <summary>
            Generates the EAN8 barcode.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.BarcodeEAN13">
            <summary>
            Generates the EAN13 barcode.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeEAN13.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.BarcodeEAN13"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.BarcodeEAN128">
            <summary>
            Generates the GS1-128 (formerly known as UCC-128 or EAN-128) barcode.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeEAN128.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.BarcodeEAN128"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.BarcodeGS1Base">
            <summary>
            Base methods for GS1 DataBar barcodes.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeGS1Base.GetGS1Widths(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Routine to generate widths for GS1 elements for a given value.
            </summary>
            <param name="val">Required value.</param>
            <param name="n">Number of modules.</param>
            <param name="elements">Elements in a set (GS1 omni based and Expanded = 4; GS1 Limited = 7).</param>
            <param name="maxWidth">Maximum module width of an element.</param>
            <param name="noNarrow">False will skip patterns without a one module wide element.</param>
            <returns>Element widths</returns>
        </member>
        <member name="M:FastReport.Barcode.BarcodeGS1Base.Combins(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="n"></param>
            <param name="r"></param>
            <returns>Returns the number of Combinations of r selected from n.</returns>
        </member>
        <member name="M:FastReport.Barcode.BarcodeGS1Base.DrawLineBars(System.String,FastReport.IGraphics,System.Single,System.Drawing.RectangleF,System.Boolean,System.Boolean)">
            <summary>
            Drawing lines of strokes
            </summary>
            <param name="data">Encoded data in width strokes; For separate line, these are colored strokes, any value that is not equal to zero is black.</param>
            <param name="g"></param>
            <param name="zoom">Scale size.</param>
            <param name="rect">Use left of rectangle for  to set start position x, top for top pos y, bottom for bottom pos y of strokes.</param>
            <param name="reversColor">Flag for reversing color by default first strokes white, disabled for separate line. </param>
            <param name="separatorLine">Flag separete line </param>
        </member>
        <member name="M:FastReport.Barcode.BarcodeGS1Base.GetDefaultValue">
            <inheritdoc />
        </member>
        <member name="T:FastReport.Barcode.BarcodeGS1Omnidirectional">
            <summary>
            Generates the GS1 DataBar Omnidirectional barcode.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeGS1Omnidirectional.GetValue(System.String)">
            <summary>
            Get value for encoding.
            </summary>
            <param name="data">Data</param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Barcode.BarcodeGS1Omnidirectional.DoLines(System.String,FastReport.IGraphics,System.Single)">
            <inheritdoc />
        </member>
        <member name="T:FastReport.Barcode.BarcodeGS1Stacked">
            <summary>
            Generates the GS1 DataBar Stacked barcode.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeGS1Stacked.DoLines(System.String,FastReport.IGraphics,System.Single)">
            <inheritdoc />
        </member>
        <member name="T:FastReport.Barcode.BarcodeGS1StackedOmnidirectional">
            <summary>
            Generates the GS1 DataBar Stacked Omnidirectional barcode.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeGS1StackedOmnidirectional.DoLines(System.String,FastReport.IGraphics,System.Single)">
            <inheritdoc />
        </member>
        <member name="T:FastReport.Barcode.BarcodeGS1Limited">
            <summary>
            Generates the GS1 DataBar Limited barcode.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeGS1Limited.GetValue(System.String)">
            <summary>
            Get value for encoding.
            </summary>
            <param name="data">Data</param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Barcode.BarcodeGS1Limited.DoLines(System.String,FastReport.IGraphics,System.Single)">
            <inheritdoc />
        </member>
        <member name="T:FastReport.Barcode.BarcodeIntelligentMail">
            <summary>
            Generates the Intelligent Mail (USPS) barcode.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeIntelligentMail.QuietZone">
            <summary>
            Gets or sets the value indicating that quiet zone must be shown.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeIntelligentMail.IsNumeric">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.BarcodeIntelligentMail.Assign(FastReport.Barcode.BarcodeBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.BarcodeIntelligentMail.GetDefaultValue">
            <inheritdoc />
        </member>
        <member name="M:FastReport.Barcode.BarcodeIntelligentMail.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.BarcodeIntelligentMail"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.BarcodeMaxiCode">
            <summary>
            Generates the 2D MaxiCode barcode.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeMaxiCode.Mode">
            <summary>
            Sets the MaxiCode mode to use. Only modes 2 to 6 are supported.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeMaxiCode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.BarcodeMaxiCode"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeMaxiCode.Assign(FastReport.Barcode.BarcodeBase)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Barcode.MaxiCodeImpl">
             Implements MaxiCode according to ISO 16023:2000.
            
             MaxiCode employs a pattern of hexagons around a central 'bulls-eye'
             finder pattern. Encoding in several modes is supported, but encoding in
             Mode 2 and 3 require primary messages to be set. Input characters can be
             any from the ISO 8859-1 (Latin-1) character set.
            
             TODO: Add ECI functionality.
            
             @author <a href="mailto:rstuart114@gmail.com">Robin Stuart</a>
             @author Daniel Gredler
        </member>
        <member name="F:FastReport.Barcode.MaxiCodeImpl.MAXICODE_GRID">
            MaxiCode module sequence, from ISO/IEC 16023 Figure 5 (30 x 33 data grid). 
        </member>
        <member name="F:FastReport.Barcode.MaxiCodeImpl.MAXICODE_SET">
            ASCII character to Code Set mapping, from ISO/IEC 16023 Appendix A.
            1 = Set A, 2 = Set B, 3 = Set C, 4 = Set D, 5 = Set E.
            0 refers to special characters that fit into more than one set (e.g. GS).
        </member>
        <member name="F:FastReport.Barcode.MaxiCodeImpl.MAXICODE_SYMBOL_CHAR">
            ASCII character to symbol value, from ISO/IEC 16023 Appendix A. 
        </member>
        <member name="M:FastReport.Barcode.MaxiCodeImpl.setMode(System.Int32)">
             Sets the MaxiCode mode to use. Only modes 2 to 6 are supported.
            
             @param mode the MaxiCode mode to use
        </member>
        <member name="M:FastReport.Barcode.MaxiCodeImpl.getMode">
             Returns the MaxiCode mode being used. Only modes 2 to 6 are supported.
            
             @return the MaxiCode mode being used
        </member>
        <member name="M:FastReport.Barcode.MaxiCodeImpl.setStructuredAppendPosition(System.Int32)">
             If this MaxiCode symbol is part of a series of MaxiCode symbols appended in a structured format, this method sets the
             position of this symbol in the series. Valid values are 1 through 8 inclusive.
            
             @param position the position of this MaxiCode symbol in the structured append series
        </member>
        <member name="M:FastReport.Barcode.MaxiCodeImpl.getStructuredAppendPosition">
             Returns the position of this MaxiCode symbol in a series of symbols using structured append. If this symbol is not part of
             such a series, this method will return <code>1</code>.
            
             @return the position of this MaxiCode symbol in a series of symbols using structured append
        </member>
        <member name="M:FastReport.Barcode.MaxiCodeImpl.setStructuredAppendTotal(System.Int32)">
             If this MaxiCode symbol is part of a series of MaxiCode symbols appended in a structured format, this method sets the total
             number of symbols in the series. Valid values are 1 through 8 inclusive. A value of 1 indicates that this symbol is not
             part of a structured append series.
            
             @param total the total number of MaxiCode symbols in the structured append series
        </member>
        <member name="M:FastReport.Barcode.MaxiCodeImpl.getStructuredAppendTotal">
             Returns the size of the series of MaxiCode symbols using structured append that this symbol is part of. If this symbol is
             not part of a structured append series, this method will return <code>1</code>.
            
             @return size of the series that this symbol is part of
        </member>
        <member name="M:FastReport.Barcode.MaxiCodeImpl.setPrimary(System.String)">
             Sets the primary data. Should only be used for modes 2 and 3. Must conform to the following structure:
            
             <table summary="Expected primary data structure.">
               <tr><th>Characters</th><th>Meaning</th></tr>
               <tr><td>1-9</td><td>Postal code data which can consist of up to 9 digits (for mode 2) or up to 6
                                   alphanumeric characters (for mode 3). Remaining unused characters should be
                                   filled with the SPACE character (ASCII 32).</td></tr>
               <tr><td>10-12</td><td>Three-digit country code according to ISO-3166.</td></tr>
               <tr><td>13-15</td><td>Three digit service code. This depends on your parcel courier.</td></tr>
             </table>
            
             @param primary the primary data
        </member>
        <member name="M:FastReport.Barcode.MaxiCodeImpl.getPrimary">
             Returns the primary data for this MaxiCode symbol. Should only be used for modes 2 and 3.
            
             @return the primary data for this MaxiCode symbol
        </member>
        <member name="M:FastReport.Barcode.MaxiCodeImpl.encode">
            {@inheritDoc} 
        </member>
        <member name="M:FastReport.Barcode.MaxiCodeImpl.getPrimaryCodewords">
             Extracts the postal code, country code and service code from the primary data and returns the corresponding primary message
             codewords.
            
             @return the primary message codewords
        </member>
        <member name="M:FastReport.Barcode.MaxiCodeImpl.getMode2PrimaryCodewords(System.String,System.Int32,System.Int32)">
             Returns the primary message codewords for mode 2.
            
             @param postcode the postal code
             @param country the country code
             @param service the service code
             @return the primary message, as codewords
        </member>
        <member name="M:FastReport.Barcode.MaxiCodeImpl.getMode3PrimaryCodewords(System.String,System.Int32,System.Int32)">
             Returns the primary message codewords for mode 3.
            
             @param postcode the postal code
             @param country the country code
             @param service the service code
             @return the primary message, as codewords
        </member>
        <member name="M:FastReport.Barcode.MaxiCodeImpl.processText">
             Formats text according to Appendix A, populating the {@link #set} and {@link #character} arrays.
            
             @return true if the content fits in this symbol and was formatted; false otherwise
        </member>
        <member name="M:FastReport.Barcode.MaxiCodeImpl.bestSurroundingSet(System.Int32,System.Int32,System.Int32[])">
             Guesses the best set to use at the specified index by looking at the surrounding sets. In general, characters in
             lower-numbered sets are more common, so we choose them if we can. If no good surrounding sets can be found, the default
             value returned is the first value from the valid set.
            
             @param index the current index
             @param Length the maximum Length to look at
             @param valid the valid sets for this index
             @return the best set to use at the specified index
        </member>
        <member name="M:FastReport.Barcode.MaxiCodeImpl.insert(System.Int32,System.Int32)">
             Moves everything up so that the specified shift or latch character can be inserted.
            
             @param position the position beyond which everything needs to be shifted
             @param c the latch or shift character to insert at the specified position, after everything has been shifted
        </member>
        <member name="M:FastReport.Barcode.MaxiCodeImpl.getErrorCorrection(System.Int32[],System.Int32)">
             Returns the error correction codewords for the specified data codewords.
            
             @param codewords the codewords that we need error correction codewords for
             @param ecclen the number of error correction codewords needed
             @return the error correction codewords for the specified data codewords
        </member>
        <member name="M:FastReport.Barcode.MaxiCodeImpl.plotSymbol">
            {@inheritDoc} 
        </member>
        <member name="M:FastReport.Barcode.MaxiCodeImpl.getCodewords">
            {@inheritDoc} 
        </member>
        <member name="T:FastReport.Barcode.BarcodeMSI">
            <summary>
            Generates the MSI barcode.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.BarcodeObject">
            <summary>
            Represents a barcode object.
            Represents a barcode object.
            </summary>
            <remarks>
            The instance of this class represents a barcode. Here are some common
            actions that can be performed with this object:
            <list type="bullet">
              <item>
                <description>To select the type of barcode, use the <see cref="P:FastReport.Barcode.BarcodeObject.Barcode"/> property.
                </description>
              </item>
              <item>
                <description>To specify a static barcode data, use the <see cref="P:FastReport.Barcode.BarcodeObject.Text"/> property.
                  You also may use the <see cref="P:FastReport.Barcode.BarcodeObject.DataColumn"/> or <see cref="P:FastReport.Barcode.BarcodeObject.Expression"/> properties
                  to specify dynamic value for a barcode.
                </description>
              </item>
              <item>
                <description>To set a barcode orientation, use the <see cref="P:FastReport.Barcode.BarcodeObject.Angle"/> property.
                </description>
              </item>
              <item>
                <description>To specify the size of barcode, set the <see cref="P:FastReport.Barcode.BarcodeObject.AutoSize"/> property
                  to <b>true</b> and use the <see cref="P:FastReport.Barcode.BarcodeObject.Zoom"/> property to zoom the barcode.
                  If <see cref="P:FastReport.Barcode.BarcodeObject.AutoSize"/> property is set to <b>false</b>, you need to specify the
                  size using the <see cref="P:FastReport.ComponentBase.Width">Width</see> and
                  <see cref="P:FastReport.ComponentBase.Height">Height</see> properties.
                </description>
              </item>
            </list>
            </remarks>
            <example>This example shows how to configure the BarcodeObject to display PDF417 barcode.
            <code>
            BarcodeObject barcode;
            ...
            barcode.Barcode = new BarcodePDF417();
            (barcode.Barcode as BarcodePDF417).CompactionMode = CompactionMode.Text;
            </code>
            </example>
        </member>
        <member name="T:FastReport.Barcode.BarcodeObject.Alignment">
            <summary>
            Specifies the horizontal alignment of a Barcode object. Works only when autosize is on.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.BarcodeObject.Alignment.Left">
            <summary>
            Specifies that the barcode is aligned to the left of the original layout.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.BarcodeObject.Alignment.Center">
            <summary>
            Specifies that the barcode is aligned to the center of the original layout.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.BarcodeObject.Alignment.Right">
            <summary>
            Specifies that the barcode is aligned to the right of the original layout.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeObject.Barcode">
            <summary>
            Gets or sets the barcode type.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeObject.HorzAlign">
            <summary>
            Gets or sets the horizontal alignment of a Barcode object.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeObject.SymbologyName">
            <summary>
            Gets or sets the symbology name.
            </summary>
            <remarks>
            The following symbology names are supported:
            <list type="bullet">
              <item><description>"2/5 Interleaved"</description></item>
              <item><description>"2/5 Industrial"</description></item>
              <item><description>"2/5 Matrix"</description></item>
              <item><description>"Codabar"</description></item>
              <item><description>"Code128"</description></item>
              <item><description>"Code39"</description></item>
              <item><description>"Code39 Extended"</description></item>
              <item><description>"Code93"</description></item>
              <item><description>"Code93 Extended"</description></item>
              <item><description>"EAN8"</description></item>
              <item><description>"EAN13"</description></item>
              <item><description>"MSI"</description></item>
              <item><description>"PostNet"</description></item>
              <item><description>"UPC-A"</description></item>
              <item><description>"UPC-E0"</description></item>
              <item><description>"UPC-E1"</description></item>
              <item><description>"Supplement 2"</description></item>
              <item><description>"Supplement 5"</description></item>
              <item><description>"PDF417"</description></item>
              <item><description>"Datamatrix"</description></item>
              <item><description>"QRCode"</description></item>
            </list>
            </remarks>
            <example>
            <code>
            barcode.SymbologyName = "PDF417";
            (barcode.Barcode as BarcodePDF417).CompactionMode = CompactionMode.Text;
            </code>
            </example>
        </member>
        <member name="P:FastReport.Barcode.BarcodeObject.Angle">
            <summary>
            Gets or sets the angle of barcode, in degrees.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeObject.AutoSize">
            <summary>
            Gets or sets a value that determines whether the barcode should handle its width automatically.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeObject.DataColumn">
            <summary>
            Gets or sets a data column name bound to this control.
            </summary>
            <remarks>
            Value must be in the form "Datasource.Column".
            </remarks>
        </member>
        <member name="P:FastReport.Barcode.BarcodeObject.Expression">
            <summary>
            Gets or sets an expression that contains the barcode data.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeObject.AllowExpressions">
            <summary>
            Enable or disable of using an expression in Text
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeObject.Brackets">
            <summary>
            Gets or sets brackets for using in expressions
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeObject.ShowText">
            <summary>
            Gets or sets a value that indicates if the barcode should display a human-readable text.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeObject.Text">
            <summary>
            Gets or sets the barcode data.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeObject.Padding">
            <summary>
            Gets or sets padding within the BarcodeObject.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeObject.Zoom">
            <summary>
            Gets or sets a zoom of the barcode.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeObject.HideIfNoData">
            <summary>
            Gets or sets a value that determines whether it is necessary to hide the object if the
            barcode data is empty.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeObject.NoDataText">
            <summary>
            Gets or sets the text that will be displayed if the barcode data is empty.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeObject.AsBitmap">
            <summary>
            Gets or sets values for forced use of a bitmap image instead of a vector
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeObject.CreateSwissQR(FastReport.Barcode.QRSwissParameters)">
            <summary>
            Initialize current BarcodeObject as Swiss QR.
            </summary>
            <param name="parameters">Parameters of swiss qr.</param>
        </member>
        <member name="M:FastReport.Barcode.BarcodeObject.RelocateAlign">
            <summary>
            Relocate BarcodeObject based on alignment
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeObject.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.BarcodeObject.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.BarcodeObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.BarcodeObject.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.BarcodeObject.SaveState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.BarcodeObject.RestoreState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.BarcodeObject.GetData">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.BarcodeObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.BarcodeObject"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.PDF417ErrorCorrection">
            <summary>
            Specifies the error correction level used for PDF417 barcode.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.PDF417ErrorCorrection.Auto">
            <summary>
            Indicates that correction level should be calculated automatically.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.PDF417ErrorCorrection.Level0">
            <summary>
            Specifies level 0.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.PDF417ErrorCorrection.Level1">
            <summary>
            Specifies level 1.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.PDF417ErrorCorrection.Level2">
            <summary>
            Specifies level 2.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.PDF417ErrorCorrection.Level3">
            <summary>
            Specifies level 3.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.PDF417ErrorCorrection.Level4">
            <summary>
            Specifies level 4.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.PDF417ErrorCorrection.Level5">
            <summary>
            Specifies level 5.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.PDF417ErrorCorrection.Level6">
            <summary>
            Specifies level 6.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.PDF417ErrorCorrection.Level7">
            <summary>
            Specifies level 7.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.PDF417ErrorCorrection.Level8">
            <summary>
            Specifies level 8.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.PDF417CompactionMode">
            <summary>
            Specifies the compaction mode used for PDF417 barcode.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.PDF417CompactionMode.Auto">
            <summary>
            Indicates that compaction mode should be calculated automatically.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.PDF417CompactionMode.Text">
            <summary>
            Specifies the text compaction mode.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.PDF417CompactionMode.Numeric">
            <summary>
            Specifies the numeric compaction mode.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.PDF417CompactionMode.Binary">
            <summary>
            Specifies the binary compaction mode.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.BarcodePDF417">
            <summary>
            Generates the 2D PDF417 barcode.
            </summary>
            <example>This example shows how to configure the BarcodeObject to display PDF417 barcode.
            <code>
            BarcodeObject barcode;
            ...
            barcode.Barcode = new BarcodePDF417();
            (barcode.Barcode as BarcodePDF417).CompactionMode = PDF417CompactionMode.Text;
            </code>
            </example>
        </member>
        <member name="P:FastReport.Barcode.BarcodePDF417.AspectRatio">
            <summary>
            Gets or sets the barcode aspect ratio. 
            </summary>
            <remarks>
            A ratio or 0.5 will make the barcode width twice as large as the height.
            </remarks>
        </member>
        <member name="P:FastReport.Barcode.BarcodePDF417.Columns">
            <summary>
            Gets or sets the number of barcode data columns.
            </summary>
            <remarks>
            To calculate the necessary number of columns and rows, set the <see cref="P:FastReport.Barcode.BarcodePDF417.Columns"/> 
            and <see cref="P:FastReport.Barcode.BarcodePDF417.Rows"/> properties to 0. In this case, the <see cref="P:FastReport.Barcode.BarcodePDF417.AspectRatio"/> property
            should be set to desired aspect ratio.
            </remarks>
        </member>
        <member name="P:FastReport.Barcode.BarcodePDF417.Rows">
            <summary>
            Gets or sets the number of barcode data rows.
            </summary>
            <remarks>
            To calculate the necessary number of columns and rows, set the <see cref="P:FastReport.Barcode.BarcodePDF417.Columns"/> 
            and <see cref="P:FastReport.Barcode.BarcodePDF417.Rows"/> properties to 0. In this case, the <see cref="P:FastReport.Barcode.BarcodePDF417.AspectRatio"/> property
            should be set to desired aspect ratio.
            </remarks>
        </member>
        <member name="P:FastReport.Barcode.BarcodePDF417.ErrorCorrection">
            <summary>
            Gets or sets the error level correction used for the barcode.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodePDF417.CodePage">
            <summary>
            Gets or sets the code page used for text conversion.
            </summary>
            <remarks>
            Use this property to encode non-ASCII characters. For example, set this 
            property to <b>1251</b> to use Window CP1251.
            </remarks>
        </member>
        <member name="P:FastReport.Barcode.BarcodePDF417.CompactionMode">
            <summary>
            Gets or sets the compaction mode.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodePDF417.PixelSize">
            <summary>
            Gets or sets the size of the pixel.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodePDF417.PaintCode">
            Paints the barcode. If no exception was thrown a valid barcode is available. 
        </member>
        <member name="M:FastReport.Barcode.BarcodePDF417.Assign(FastReport.Barcode.BarcodeBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.BarcodePDF417.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.BarcodePDF417"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.BarcodePharmacode">
            <summary>
            Generates the Pharmacode barcode.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodePharmacode.QuietZone">
            <summary>
            Gets or sets the value indicating that quiet zone must be shown.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodePharmacode.IsNumeric">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.BarcodePharmacode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.BarcodePharmacode"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodePharmacode.Assign(FastReport.Barcode.BarcodeBase)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Barcode.BarcodePlessey">
            <summary>
            Generates the Plessey barcode.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodePlessey.appendPattern(System.Boolean[],System.Int32,System.Int32[],System.Boolean)">
            <summary>
            Appends the given pattern to the target array starting at pos.
            </summary>
            <param name="target">encode black/white pattern into this array</param>
            <param name="pos">position to start encoding at in <c>target</c></param>
            <param name="pattern">lengths of black/white runs to encode</param>
            <param name="startColor">starting color - false for white, true for black</param>
            <returns>the number of elements added to target.</returns>
        </member>
        <member name="T:FastReport.Barcode.BarcodePostNet">
            <summary>
            Generates the PostNet barcode.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.BarcodeJapanPost4StateCode">
            <summary>
            Generates the Japan Post 4 State Code barcode.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.QRCodeErrorCorrection">
            <summary>
            Specifies the QR code error correction level.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.QRCodeErrorCorrection.L">
            <summary>
            L = ~7% correction.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.QRCodeErrorCorrection.M">
            <summary>
            M = ~15% correction.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.QRCodeErrorCorrection.Q">
            <summary>
            Q = ~25% correction.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.QRCodeErrorCorrection.H">
            <summary>
            H = ~30% correction.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.QRCodeEncoding">
            <summary>
            Specifies the QR Code encoding.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.QRCodeEncoding.UTF8">
            <summary>
            UTF-8 encoding.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.QRCodeEncoding.ISO8859_1">
            <summary>
            ISO 8859-1 encoding.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.QRCodeEncoding.Shift_JIS">
            <summary>
            Shift_JIS encoding.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.QRCodeEncoding.Windows_1251">
            <summary>
            Windows-1251 encoding.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.QRCodeEncoding.cp866">
            <summary>
            cp866 encoding.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.BarcodeQR">
            <summary>
            Generates the 2D QR code barcode.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeQR.ErrorCorrection">
            <summary>
            Gets or sets the error correction.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeQR.Encoding">
            <summary>
            Gets or sets the encoding used for text conversion.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeQR.QuietZone">
            <summary>
            Gets or sets the value indicating that quiet zone must be shown.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeQR.Assign(FastReport.Barcode.BarcodeBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.BarcodeQR.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.BarcodeQR"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.BarcodeUPC_E0">
            <summary>
            Generates the UPC E0 barcode.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeUPC_E0.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.BarcodeUPC_E0"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.BarcodeUPC_E1">
            <summary>
            Generates the UPC E1 barcode.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.BarcodeUPC_A">
            <summary>
            Generates the UPC A barcode.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.BarcodeSupplement2">
            <summary>
            Generates the 2-digit supplement barcode.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeSupplement2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.BarcodeSupplement2"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.BarcodeSupplement5">
            <summary>
            Generates the 5-digit supplement barcode.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.LinearBarcodeBase">
            <summary>
            The base class for linear (1D) barcodes.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.LinearBarcodeBase.CalcCheckSum">
            <summary>
            Gets or sets a value that determines if the barcode object should calculate
            the check digit automatically.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.LinearBarcodeBase.WideBarRatio">
            <summary>
            Gets or sets a relative width of wide bars in the barcode.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.LinearBarcodeBase.IsNumeric">
            <summary>
            Gets the value indicating that the barcode is numeric.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.LinearBarcodeBase.Trim">
            <summary>
            Gets or sets a value indicating that leading/trailing whitespaces must be trimmed.
            </summary>
            <value>
              <c>true</c> if trim; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:FastReport.Barcode.LinearBarcodeBase.Assign(FastReport.Barcode.BarcodeBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.LinearBarcodeBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.LinearBarcodeBase"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.QRSwissParameters">
            <summary>
            Represents a class that contains all parameters of Swiss QR Code.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.QRSwissParameters.Iban">
            <summary>
            IBAN object
            </summary>
        </member>
        <member name="P:FastReport.Barcode.QRSwissParameters.Currency">
            <summary>
            (either EUR or CHF)
            </summary>
        </member>
        <member name="P:FastReport.Barcode.QRSwissParameters.Creditor">
            <summary>
            Creditor (payee) information
            </summary>
        </member>
        <member name="P:FastReport.Barcode.QRSwissParameters.Reference">
            <summary>
            Reference information
            </summary>
        </member>
        <member name="P:FastReport.Barcode.QRSwissParameters.AdditionalInformation">
            <summary>
            Can be null
            </summary>
        </member>
        <member name="P:FastReport.Barcode.QRSwissParameters.Debitor">
            <summary>
            Debitor (payer) information
            </summary>
        </member>
        <member name="P:FastReport.Barcode.QRSwissParameters.Amount">
            <summary>
            Amount
            </summary>
        </member>
        <member name="P:FastReport.Barcode.QRSwissParameters.AlternativeProcedure1">
            <summary>
            Optional command for alternative processing mode - line 1
            </summary>
        </member>
        <member name="P:FastReport.Barcode.QRSwissParameters.AlternativeProcedure2">
            <summary>
            Optional command for alternative processing mode - line 2
            </summary>
        </member>
        <member name="M:FastReport.Barcode.AdditionalInformation.#ctor(System.String,System.String)">
            <summary>
            Creates an additional information object. Both parameters are optional and must be shorter than 141 chars in combination.
            </summary>
            <param name="unstructuredMessage">Unstructured text message</param>
            <param name="billInformation">Bill information</param>
        </member>
        <member name="M:FastReport.Barcode.Reference.#ctor(FastReport.Barcode.Reference.ReferenceType,System.String,System.Nullable{FastReport.Barcode.Reference.ReferenceTextType})">
            <summary>
            Creates a reference object which must be passed to the SwissQrCode instance
            </summary>
            <param name="referenceType">Type of the reference (QRR, SCOR or NON)</param>
            <param name="reference">Reference text</param>
            <param name="referenceTextType">Type of the reference text (QR-reference or Creditor Reference)</param>                
        </member>
        <member name="T:FastReport.Barcode.Reference.ReferenceType">
            <summary>
            Reference type. When using a QR-IBAN you have to use either "QRR" or "SCOR"
            </summary>
        </member>
        <member name="M:FastReport.Barcode.Contact.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Contact type. Can be used for payee, ultimate payee, etc. with address in structured mode (S).
            </summary>
            <param name="name">Last name or company (optional first name)</param>
            <param name="zipCode">Zip-/Postcode</param>
            <param name="city">City name</param>
            <param name="country">Two-letter country code as defined in ISO 3166-1</param>
            <param name="street">Streetname without house number</param>
            <param name="houseNumber">House number</param>
        </member>
        <member name="M:FastReport.Barcode.Contact.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Contact type. Can be used for payee, ultimate payee, etc. with address in combined mode (K).
            </summary>
            <param name="name">Last name or company (optional first name)</param>
            <param name="country">Two-letter country code as defined in ISO 3166-1</param>
            <param name="addressLine1">Adress line 1</param>
            <param name="addressLine2">Adress line 2</param>
        </member>
        <member name="M:FastReport.Barcode.Iban.#ctor(System.String,FastReport.Barcode.Iban.IbanType)">
            <summary>
            IBAN object with type information
            </summary>
            <param name="iban">IBAN</param>
            <param name="ibanType">Type of IBAN (normal or QR-IBAN)</param>
        </member>
        <member name="T:FastReport.Restrictions">
            <summary>
            Specifies a set of actions that cannot be performed on the object in the design mode.
            </summary>
        </member>
        <member name="F:FastReport.Restrictions.None">
            <summary>
            Specifies no restrictions.
            </summary>
        </member>
        <member name="F:FastReport.Restrictions.DontMove">
            <summary>
            Restricts moving the object.
            </summary>
        </member>
        <member name="F:FastReport.Restrictions.DontResize">
            <summary>
            Restricts resizing the object.
            </summary>
        </member>
        <member name="F:FastReport.Restrictions.DontModify">
            <summary>
            Restricts modifying the object's properties.
            </summary>
        </member>
        <member name="F:FastReport.Restrictions.DontEdit">
            <summary>
            Restricts editing the object.
            </summary>
        </member>
        <member name="F:FastReport.Restrictions.DontDelete">
            <summary>
            Restricts deleting the object.
            </summary>
        </member>
        <member name="F:FastReport.Restrictions.HideAllProperties">
            <summary>
            Hides all properties of the object.
            </summary>
        </member>
        <member name="T:FastReport.Flags">
            <summary>
            Specifies a set of actions that can be performed on the object in the design mode.
            </summary>
        </member>
        <member name="F:FastReport.Flags.None">
            <summary>
            Specifies no actions.
            </summary>
        </member>
        <member name="F:FastReport.Flags.CanMove">
            <summary>
            Allows moving the object.
            </summary>
        </member>
        <member name="F:FastReport.Flags.CanResize">
            <summary>
            Allows resizing the object.
            </summary>
        </member>
        <member name="F:FastReport.Flags.CanDelete">
            <summary>
            Allows deleting the object.
            </summary>
        </member>
        <member name="F:FastReport.Flags.CanEdit">
            <summary>
            Allows editing the object.
            </summary>
        </member>
        <member name="F:FastReport.Flags.CanChangeOrder">
            <summary>
            Allows changing the Z-order of an object.
            </summary>
        </member>
        <member name="F:FastReport.Flags.CanChangeParent">
            <summary>
            Allows moving the object to another parent.
            </summary>
        </member>
        <member name="F:FastReport.Flags.CanCopy">
            <summary>
            Allows copying the object to the clipboard.
            </summary>
        </member>
        <member name="F:FastReport.Flags.CanDraw">
            <summary>
            Allows drawing the object.
            </summary>
        </member>
        <member name="F:FastReport.Flags.CanGroup">
            <summary>
            Allows grouping the object.
            </summary>
        </member>
        <member name="F:FastReport.Flags.CanWriteChildren">
            <summary>
            Allows write children in the preview mode by itself.
            </summary>
        </member>
        <member name="F:FastReport.Flags.CanWriteBounds">
            <summary>
            Allows write object's bounds into the report stream.
            </summary>
        </member>
        <member name="F:FastReport.Flags.HasSmartTag">
            <summary>
            Allows the "smart tag" functionality.
            </summary>
        </member>
        <member name="F:FastReport.Flags.HasGlobalName">
            <summary>
            Specifies that the object's name is global (this is true for all report objects 
            such as Text, Picture and so on).
            </summary>
        </member>
        <member name="F:FastReport.Flags.CanShowChildrenInReportTree">
            <summary>
            Specifies that the object can display children in the designer's Report Tree window.
            </summary>
        </member>
        <member name="F:FastReport.Flags.InterceptsPreviewMouseEvents">
            <summary>
            Specifies that the object supports mouse wheel in the preview window.
            </summary>
        </member>
        <member name="T:FastReport.LineStyle">
            <summary>
            Specifies the style of a border line.
            </summary>
        </member>
        <member name="F:FastReport.LineStyle.Solid">
            <summary>
            Specifies a solid line. 
            </summary>
        </member>
        <member name="F:FastReport.LineStyle.Dash">
            <summary>
            Specifies a line consisting of dashes.
            </summary>
        </member>
        <member name="F:FastReport.LineStyle.Dot">
            <summary>
            Specifies a line consisting of dots. 
            </summary>
        </member>
        <member name="F:FastReport.LineStyle.DashDot">
            <summary>
            Specifies a line consisting of a repeating pattern of dash-dot. 
            </summary>
        </member>
        <member name="F:FastReport.LineStyle.DashDotDot">
            <summary>
            Specifies a line consisting of a repeating pattern of dash-dot-dot. 
            </summary>
        </member>
        <member name="F:FastReport.LineStyle.Double">
            <summary>
            Specifies a double line. 
            </summary>
        </member>
        <member name="F:FastReport.LineStyle.Custom">
            <summary>
            Specifies a custom line. 
            </summary>
        </member>
        <member name="T:FastReport.BorderLines">
            <summary>
            Specifies the sides of a border.
            </summary>
        </member>
        <member name="F:FastReport.BorderLines.None">
            <summary>
            Specifies no border lines.
            </summary>
        </member>
        <member name="F:FastReport.BorderLines.Left">
            <summary>
            Specifies the left border line.
            </summary>
        </member>
        <member name="F:FastReport.BorderLines.Right">
            <summary>
            Specifies the right border line.
            </summary>
        </member>
        <member name="F:FastReport.BorderLines.Top">
            <summary>
            Specifies the top border line.
            </summary>
        </member>
        <member name="F:FastReport.BorderLines.Bottom">
            <summary>
            Specifies the bottom border line.
            </summary>
        </member>
        <member name="F:FastReport.BorderLines.All">
            <summary>
            Specifies all border lines.
            </summary>
        </member>
        <member name="T:FastReport.BorderLine">
            <summary>
            Represents a single border line.
            </summary>
        </member>
        <member name="P:FastReport.BorderLine.Color">
            <summary>
            Gets or sets a color of the line.
            </summary>
        </member>
        <member name="P:FastReport.BorderLine.Style">
            <summary>
            Gets or sets a style of the line.
            </summary>
        </member>
        <member name="P:FastReport.BorderLine.Width">
            <summary>
            Gets or sets a width of the line, in pixels.
            </summary>
        </member>
        <member name="M:FastReport.BorderLine.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BorderLine.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Border">
            <summary>
            Represents a border around the report object.
            </summary>
            <remarks>
            Border consists of four lines. Each line has own color, style and width. Lines are accessible through
            <see cref="P:FastReport.Border.LeftLine"/>, <see cref="P:FastReport.Border.RightLine"/>, <see cref="P:FastReport.Border.TopLine"/>, <see cref="P:FastReport.Border.BottomLine"/> properties.
            <para/>
            To turn on and off the lines, use the <see cref="P:FastReport.Border.Lines"/> property. To set the same color, style or width
            for each line, use <see cref="P:FastReport.Border.Color"/>, <see cref="P:FastReport.Border.Style"/>, <see cref="P:FastReport.Border.Width"/> properties of the <b>Border</b>.
            </remarks>
        </member>
        <member name="P:FastReport.Border.Color">
            <summary>
            Gets or sets a color of the border.
            </summary>
            <remarks>
            This property actually returns a color of the <see cref="P:FastReport.Border.LeftLine"/>. When you assign a value 
            to this property, the value will be set to each border line.
            </remarks>
        </member>
        <member name="P:FastReport.Border.Shadow">
            <summary>
            Gets or sets a value determines whether to draw a shadow.
            </summary>
        </member>
        <member name="P:FastReport.Border.ShadowWidth">
            <summary>
            Gets or sets a shadow width, in pixels.
            </summary>
        </member>
        <member name="P:FastReport.Border.ShadowColor">
            <summary>
            Gets or sets a shadow color.
            </summary>
        </member>
        <member name="P:FastReport.Border.Style">
            <summary>
            Gets or sets a style of the border.
            </summary>
            <remarks>
            This property actually returns a style of the <see cref="P:FastReport.Border.LeftLine"/>. When you assign a value 
            to this property, the value will be set to each border line.
            </remarks>
        </member>
        <member name="P:FastReport.Border.Lines">
            <summary>
            Gets or sets a visible lines of a border.
            </summary>
        </member>
        <member name="P:FastReport.Border.Width">
            <summary>
            Gets or sets a width of the border, in pixels.
            </summary>
            <remarks>
            This property actually returns a width of the <see cref="P:FastReport.Border.LeftLine"/>. When you assign a value 
            to this property, the value will be set to each border line.
            </remarks>
        </member>
        <member name="P:FastReport.Border.LeftLine">
            <summary>
            Gets or sets the left line of the border.
            </summary>
        </member>
        <member name="P:FastReport.Border.TopLine">
            <summary>
            Gets or sets the top line of the border.
            </summary>
        </member>
        <member name="P:FastReport.Border.RightLine">
            <summary>
            Gets or sets the right line of the border.
            </summary>
        </member>
        <member name="P:FastReport.Border.BottomLine">
            <summary>
            Gets or sets the bottom line of the border.
            </summary>
        </member>
        <member name="P:FastReport.Border.SimpleBorder">
            <summary>
            Gets or sets a value determines that <b>Border</b> must serialize only one line.
            </summary>
            <remarks>
            This property is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.Border.Clone">
            <summary>
            Creates the exact copy of this <b>Border</b>.
            </summary>
            <returns>A copy of this border.</returns>
        </member>
        <member name="M:FastReport.Border.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Border.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Border.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.Border)">
            <summary>
            Serializes the border.
            </summary>
            <param name="writer">Writer object.</param>
            <param name="prefix">Border property name.</param>
            <param name="c">Another Border to compare with.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.Border.Draw(FastReport.Utils.FRPaintEventArgs,System.Drawing.RectangleF)">
            <summary>
            Draw the border using draw event arguments and specified bounding rectangle.
            </summary>
            <param name="e">Draw event arguments.</param>
            <param name="rect">Bounding rectangle.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.Border.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Border"/> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.BreakableComponent">
            <summary>
            Base class for report components that can break across pages.
            </summary>
        </member>
        <member name="P:FastReport.BreakableComponent.CanBreak">
            <summary>
            Gets or sets a value that determines if the component can break its contents across pages.
            </summary>
        </member>
        <member name="P:FastReport.BreakableComponent.BreakTo">
            <summary>
            Gets or sets a reference to another similar object that will be used for displaying the
            text that not fit in this object.
            </summary>
        </member>
        <member name="M:FastReport.BreakableComponent.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BreakableComponent.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BreakableComponent.Break(FastReport.BreakableComponent)">
            <summary>
            Breaks the contents of the object.
            </summary>
            <param name="breakTo">Object to put the part of content to that does not fit in this object. These two 
            objects must have the same type.</param>
            <returns><b>true</b> if there is enough space in this object to display at least one text line.</returns>
            <remarks>
            <para>
            Do not call this method directly, it is used by the report engine. You should override it if
            you are writing a new FastReport object.
            </para>
            <para>
            This method must break the contents of the object. The part of content that fit in current object's
            bounds should remain in this object, the part that does not fit should be transferred to <b>breakTo</b>
            object. 
            </para>
            </remarks>
        </member>
        <member name="M:FastReport.BreakableComponent.#ctor">
            <summary>
            Initializes a new instance of the <b>BreakableComponent</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.CapStyle">
            <summary>
            Specifies a line cap style.
            </summary>
        </member>
        <member name="F:FastReport.CapStyle.None">
            <summary>
            Specifies a line without a cap.
            </summary>
        </member>
        <member name="F:FastReport.CapStyle.Circle">
            <summary>
            Specifies a line with a circle cap.
            </summary>
        </member>
        <member name="F:FastReport.CapStyle.Square">
            <summary>
            Specifies a line with a square cap.
            </summary>
        </member>
        <member name="F:FastReport.CapStyle.Diamond">
            <summary>
            Specifies a line with a diamond cap.
            </summary>
        </member>
        <member name="F:FastReport.CapStyle.Arrow">
            <summary>
            Specifies a line with an arrow cap.
            </summary>
        </member>
        <member name="T:FastReport.CapSettings">
            <summary>
            Specifies a start and end line caps.
            </summary>
        </member>
        <member name="P:FastReport.CapSettings.Width">
            <summary>
            Gets or sets a width of the cap.
            </summary>
        </member>
        <member name="P:FastReport.CapSettings.Height">
            <summary>
            Gets or sets a height of the cap.
            </summary>
        </member>
        <member name="P:FastReport.CapSettings.Style">
            <summary>
            Gets or sets a cap style.
            </summary>
        </member>
        <member name="M:FastReport.CapSettings.Assign(FastReport.CapSettings)">
            <summary>
            Assigns values from another source.
            </summary>
            <param name="source">Source to assign from.</param>
        </member>
        <member name="M:FastReport.CapSettings.Clone">
            <summary>
            Creates exact copy of this object.
            </summary>
            <returns>Copy of this object.</returns>
        </member>
        <member name="M:FastReport.CapSettings.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CapSettings.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CapSettings.Serialize(System.String,FastReport.Utils.FRWriter,FastReport.CapSettings)">
            <summary>
            Serializes the cap settings.
            </summary>
            <param name="prefix">Name of the cap property.</param>
            <param name="writer">Writer object.</param>
            <param name="diff">Another cap to compare with.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.CapSettings.#ctor">
            <summary>
            Initializes a new instance of the <b>CapSettings</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.CheckedSymbol">
            <summary>
            Specifies a symbol that will be displayed when a <see cref="T:FastReport.CheckBoxObject"/> is in the checked state.
            </summary>
        </member>
        <member name="F:FastReport.CheckedSymbol.Check">
            <summary>
            Specifies a check symbol.
            </summary>
        </member>
        <member name="F:FastReport.CheckedSymbol.Cross">
            <summary>
            Specifies a diagonal cross symbol.
            </summary>
        </member>
        <member name="F:FastReport.CheckedSymbol.Plus">
            <summary>
            Specifies a plus symbol.
            </summary>
        </member>
        <member name="F:FastReport.CheckedSymbol.Fill">
            <summary>
            Specifies a filled rectangle.
            </summary>
        </member>
        <member name="T:FastReport.UncheckedSymbol">
            <summary>
            Specifies a symbol that will be displayed when a <see cref="T:FastReport.CheckBoxObject"/> is in the unchecked state.
            </summary>
        </member>
        <member name="F:FastReport.UncheckedSymbol.None">
            <summary>
            Specifies no symbol.
            </summary>
        </member>
        <member name="F:FastReport.UncheckedSymbol.Cross">
            <summary>
            Specifies a diagonal cross symbol.
            </summary>
        </member>
        <member name="F:FastReport.UncheckedSymbol.Minus">
            <summary>
            Specifies a minus symbol.
            </summary>
        </member>
        <member name="F:FastReport.UncheckedSymbol.Slash">
            <summary>
            Specifies a slash symbol.
            </summary>
        </member>
        <member name="F:FastReport.UncheckedSymbol.BackSlash">
            <summary>
            Specifies a back slash symbol.
            </summary>
        </member>
        <member name="T:FastReport.CheckBoxObject">
            <summary>
            Represents a check box object.
            </summary>
        </member>
        <member name="P:FastReport.CheckBoxObject.Checked">
            <summary>
            Gets or set a value indicating whether the check box is in the checked state.
            </summary>
        </member>
        <member name="P:FastReport.CheckBoxObject.CheckedSymbol">
            <summary>
            Gets or sets a symbol that will be displayed when the check box is in the checked state.
            </summary>
        </member>
        <member name="P:FastReport.CheckBoxObject.UncheckedSymbol">
            <summary>
            Gets or sets a symbol that will be displayed when the check box is in the unchecked state.
            </summary>
        </member>
        <member name="P:FastReport.CheckBoxObject.CheckColor">
            <summary>
            Gets or sets a color of the check symbol.
            </summary>
        </member>
        <member name="P:FastReport.CheckBoxObject.DataColumn">
            <summary>
            Gets or sets a data column name bound to this control.
            </summary>
            <remarks>
            Value must be in the form "[Datasource.Column]".
            </remarks>
        </member>
        <member name="P:FastReport.CheckBoxObject.Expression">
            <summary>
            Gets or sets an expression that determines whether to show a check.
            </summary>
        </member>
        <member name="P:FastReport.CheckBoxObject.CheckWidthRatio">
            <summary>
            Gets or sets the check symbol width ratio.
            </summary>
            <remarks>
            Valid values are from 0.2 to 2.
            </remarks>
        </member>
        <member name="P:FastReport.CheckBoxObject.HideIfUnchecked">
            <summary>
            Gets or sets a value determines whether to hide the checkbox if it is in the unchecked state.
            </summary>
        </member>
        <member name="P:FastReport.CheckBoxObject.Editable">
            <summary>
            Gets or sets editable for pdf export
            </summary>
        </member>
        <member name="M:FastReport.CheckBoxObject.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CheckBoxObject.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CheckBoxObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CheckBoxObject.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CheckBoxObject.GetData">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CheckBoxObject.#ctor">
            <summary>
            Initializes a new instance of the <b>CheckBoxObject</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.ChildBand">
            <summary>
            This class represents a child band.
            </summary>
            <remarks>
            Typical use of child band is to print several objects that can grow or shrink. It also can be done
            using the shift feature (via <see cref="T:FastReport.ShiftMode"/> property), but in some cases it's not possible.
            </remarks>
        </member>
        <member name="P:FastReport.ChildBand.FillUnusedSpace">
            <summary>
            Gets or sets a value indicating that band will be used to fill unused space on a page.
            </summary>
            <remarks>
            If you set this property to <b>true</b>, the band will be printed several times to fill 
            unused space on a report page.
            </remarks>
        </member>
        <member name="P:FastReport.ChildBand.CompleteToNRows">
            <summary>
            Gets or sets a value that determines the overall number of data rows printed by the data band.
            </summary>
            <remarks>
            Using this property, you may complete the data band upto N data rows.
            If the data band has less number of rows, this band will be used to print empty rows.
            </remarks>
        </member>
        <member name="P:FastReport.ChildBand.PrintIfDatabandEmpty">
            <summary>
            Gets or sets a value indicating that the band will be printed if its parent databand is empty.
            </summary>
            <remarks>
            The child band with this property set to true, connected to a databand can be used to print "No data" 
            text if the databand has no rows.
            </remarks>
        </member>
        <member name="M:FastReport.ChildBand.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ChildBand.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.ColumnFooterBand">
            <summary>
            This class represents a column footer band.
            </summary>
        </member>
        <member name="P:FastReport.ColumnFooterBand.StartNewPage">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.ColumnFooterBand.PrintOnBottom">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="M:FastReport.ColumnFooterBand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.ColumnFooterBand"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.ColumnHeaderBand">
            <summary>
            This class represents a column header band.
            </summary>
        </member>
        <member name="P:FastReport.ColumnHeaderBand.StartNewPage">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.ColumnHeaderBand.PrintOnBottom">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="M:FastReport.ColumnHeaderBand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.ColumnHeaderBand"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.ConditionCollection">
            <summary>
            Represents a collection of highlight conditions used in the <see cref="P:FastReport.TextObject.Highlight"/> property
            of the <see cref="T:FastReport.TextObject"/>.
            </summary>
        </member>
        <member name="P:FastReport.ConditionCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">Index of an element.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:FastReport.ConditionCollection.AddRange(FastReport.HighlightCondition[])">
            <summary>
            Adds the specified elements to the end of this collection.
            </summary>
            <param name="range">Array of elements to add.</param>
        </member>
        <member name="M:FastReport.ConditionCollection.Add(FastReport.HighlightCondition)">
            <summary>
            Adds an object to the end of this collection.
            </summary>
            <param name="value">Object to add.</param>
            <returns>Index of the added object.</returns>
        </member>
        <member name="M:FastReport.ConditionCollection.Insert(System.Int32,FastReport.HighlightCondition)">
            <summary>
            Inserts an object into this collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The object to insert.</param>
        </member>
        <member name="M:FastReport.ConditionCollection.Remove(FastReport.HighlightCondition)">
            <summary>
            Removes the specified object from the collection.
            </summary>
            <param name="value">Object to remove.</param>
        </member>
        <member name="M:FastReport.ConditionCollection.IndexOf(FastReport.HighlightCondition)">
            <summary>
            Returns the zero-based index of the first occurrence of an object.
            </summary>
            <param name="value">The object to locate in the collection.</param>
            <returns>The zero-based index of the first occurrence of value within the entire collection, if found; 
            otherwise, -1.</returns>
        </member>
        <member name="M:FastReport.ConditionCollection.Contains(FastReport.HighlightCondition)">
            <summary>
            Determines whether an element is in the collection.
            </summary>
            <param name="value">The object to locate in the collection.</param>
            <returns><b>true</b> if object is found in the collection; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:FastReport.ConditionCollection.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ConditionCollection.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ConditionCollection.Assign(FastReport.ConditionCollection)">
            <summary>
            Copies conditions from another collection.
            </summary>
            <param name="collection">Collection to copy from.</param>
        </member>
        <member name="M:FastReport.ConditionCollection.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ConditionCollection.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.ContainerObject">
            <summary>
            Container object that may contain child objects.
            </summary>
        </member>
        <member name="P:FastReport.ContainerObject.Objects">
            <summary>
            Gets the collection of child objects.
            </summary>
        </member>
        <member name="E:FastReport.ContainerObject.BeforeLayout">
            <summary>
            This event occurs before the container layouts its child objects.
            </summary>
        </member>
        <member name="E:FastReport.ContainerObject.AfterLayout">
            <summary>
            This event occurs after the child objects layout was finished.
            </summary>
        </member>
        <member name="P:FastReport.ContainerObject.BeforeLayoutEvent">
            <summary>
            Gets or sets a script event name that will be fired before the container layouts its child objects.
            </summary>
        </member>
        <member name="P:FastReport.ContainerObject.AfterLayoutEvent">
            <summary>
            Gets or sets a script event name that will be fired after the child objects layout was finished.
            </summary>
        </member>
        <member name="M:FastReport.ContainerObject.GetChildObjects(FastReport.ObjectCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ContainerObject.CanContain(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ContainerObject.AddChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ContainerObject.RemoveChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ContainerObject.GetChildOrder(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ContainerObject.SetChildOrder(FastReport.Base,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ContainerObject.UpdateLayout(System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ContainerObject.SaveState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ContainerObject.RestoreState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ContainerObject.GetData">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ContainerObject.CalcHeight">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ContainerObject.OnBeforeLayout(System.EventArgs)">
            <summary>
            This method fires the <b>BeforeLayout</b> event and the script code connected to the <b>BeforeLayoutEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.ContainerObject.OnAfterLayout(System.EventArgs)">
            <summary>
            This method fires the <b>AfterLayout</b> event and the script code connected to the <b>AfterLayoutEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.ContainerObject.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ContainerObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ContainerObject.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ContainerObject.#ctor">
            <summary>
            Initializes a new instance of the <b>ContainerObject</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.DataBand">
            <summary>
            This class represents the Data band.
            </summary>
            <remarks>
            Use the <see cref="P:FastReport.DataBand.DataSource"/> property to connect the band to a datasource. Set the
            <see cref="P:FastReport.DataBand.Filter"/> property if you want to filter data rows. The <see cref="P:FastReport.DataBand.Sort"/>
            property can be used to sort data rows.
            </remarks>
        </member>
        <member name="P:FastReport.DataBand.Header">
            <summary>
            Gets or sets a header band.
            </summary>
        </member>
        <member name="P:FastReport.DataBand.Bands">
            <summary>
            Gets a collection of detail bands.
            </summary>
        </member>
        <member name="P:FastReport.DataBand.Footer">
            <summary>
            Gets or sets a footer band.
            </summary>
        </member>
        <member name="P:FastReport.DataBand.DataSource">
            <summary>
            Gets or sets a data source.
            Please note: data source have to be enabled.
            </summary>
        </member>
        <member name="P:FastReport.DataBand.RowCount">
            <summary>
            Gets or sets a number of rows in the virtual data source.
            </summary>
            <remarks>
            Use this property if your data band is not connected to any data source. In this case
            the virtual data source with the specified number of rows will be used.
            </remarks>
        </member>
        <member name="P:FastReport.DataBand.MaxRows">
            <summary>
            Limits the maximum number of rows in a datasource. 0 means no limit.
            </summary>
        </member>
        <member name="P:FastReport.DataBand.Relation">
            <summary>
            Gets or sets a relation used to establish a master-detail relationship between
            this band and its parent.
            </summary>
            <remarks>
            Use this property if there are several relations exist between two data sources.
            If there is only one relation (in most cases it is), you can leave this property empty.
            </remarks>
        </member>
        <member name="P:FastReport.DataBand.Sort">
            <summary>
            Gets the collection of sort conditions.
            </summary>
        </member>
        <member name="P:FastReport.DataBand.Filter">
            <summary>
            Gets the row filter expression.
            </summary>
            <remarks>
            This property can contain any valid boolean expression. If the expression returns <b>false</b>,
            the corresponding data row will not be printed.
            </remarks>
        </member>
        <member name="P:FastReport.DataBand.Columns">
            <summary>
            Gets the band columns.
            </summary>
        </member>
        <member name="P:FastReport.DataBand.PrintIfDetailEmpty">
            <summary>
            Gets or sets a value that determines whether to print a band if all its detail rows are empty.
            </summary>
        </member>
        <member name="P:FastReport.DataBand.PrintIfDatasourceEmpty">
            <summary>
            Gets or sets a value that determines whether to print a band if its datasource is empty.
            </summary>
        </member>
        <member name="P:FastReport.DataBand.KeepTogether">
            <summary>
            Gets or sets a value indicating that all band rows should be printed together on one page.
            </summary>
        </member>
        <member name="P:FastReport.DataBand.KeepDetail">
            <summary>
            Gets or sets a value indicating that the band should be printed together with all its detail rows.
            </summary>
        </member>
        <member name="P:FastReport.DataBand.IdColumn">
            <summary>
            Gets or sets the key column that identifies the data row.
            </summary>
            <remarks>
            <para>This property is used when printing a hierarchic list.</para>
            <para>To print the hierarchic list, you have to setup three properties: <b>IdColumn</b>,
            <b>ParentIdColumn</b> and <b>Indent</b>. First two properties are used to identify the data
            row and its parent; the <b>Indent</b> property specifies the indent that will be used to shift
            the databand according to its hierarchy level.</para>
            <para/>When printing hierarchy, FastReport shifts the band to the right
            (by value specified in the <see cref="P:FastReport.DataBand.Indent"/> property), and also decreases the
            width of the band by the same value. You may use the <b>Anchor</b> property of the
            objects on a band to indicate whether the object should move with the band, or stay
            on its original position, or shrink.
            </remarks>
        </member>
        <member name="P:FastReport.DataBand.ParentIdColumn">
            <summary>
            Gets or sets the column that identifies the parent data row.
            </summary>
            <remarks>
            This property is used when printing a hierarchic list. See description of the
            <see cref="P:FastReport.DataBand.IdColumn"/> property for more details.
            </remarks>
        </member>
        <member name="P:FastReport.DataBand.Indent">
            <summary>
            Gets or sets the indent that will be used to shift the databand according to its hierarchy level.
            </summary>
            <remarks>
            This property is used when printing a hierarchic list. See description of the
            <see cref="P:FastReport.DataBand.IdColumn"/> property for more details.
            </remarks>
        </member>
        <member name="P:FastReport.DataBand.CollectChildRows">
            <summary>
            Gets or sets a value indicating that the databand should collect child data rows.
            </summary>
            <remarks>
            This property determines how the master-detail report is printed. Default behavior is:
            <para/>MasterData row1
            <para/>-- DetailData row1
            <para/>-- DetailData row2
            <para/>-- DetailData row3
            <para/>MasterData row2
            <para/>-- DetailData row1
            <para/>-- DetailData row2
            <para/>When you set this property to <b>true</b>, the master databand will collect all child data rows
            under a single master data row:
            <para/>MasterData row1
            <para/>-- DetailData row1
            <para/>-- DetailData row2
            <para/>-- DetailData row3
            <para/>-- DetailData row4
            <para/>-- DetailData row5
            </remarks>
        </member>
        <member name="P:FastReport.DataBand.ResetPageNumber">
            <summary>
            Gets or sets a value that determines whether to reset the page numbers when this band starts print.
            </summary>
            <remarks>
            Typically you should set the <see cref="P:FastReport.BandBase.StartNewPage"/> property to <b>true</b> as well.
            </remarks>
        </member>
        <member name="M:FastReport.DataBand.DeserializeSubItems(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.DataBand.GetChildObjects(FastReport.ObjectCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.DataBand.CanContain(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.DataBand.AddChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.DataBand.RemoveChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.DataBand.GetChildOrder(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.DataBand.SetChildOrder(FastReport.Base,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.DataBand.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.DataBand.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.DataBand.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.DataBand.InitDataSource">
            <summary>
            Initializes the data source connected to this band.
            </summary>
        </member>
        <member name="M:FastReport.DataBand.InitializeComponent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.DataBand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.DataBand"/> class.
            </summary>
        </member>
        <member name="T:FastReport.DataFooterBand">
            <summary>
            This class represents a data band footer.
            </summary>
        </member>
        <member name="T:FastReport.DataHeaderBand">
            <summary>
            This class represents a header of the data band.
            </summary>
        </member>
        <member name="T:FastReport.JsonBase">
            <summary>
            Allows working with JsonObject
            </summary>
        </member>
        <member name="P:FastReport.JsonBase.Item(System.Int32)">
            <summary>
            Returns child object for JsonArray
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:FastReport.JsonBase.Item(System.String)">
            <summary>
            Returns child object for JsonObject
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:FastReport.JsonBase.Count">
            <summary>
            Returns count of child object
            </summary>
        </member>
        <member name="P:FastReport.JsonBase.IsArray">
            <summary>
            Returns true if this object is JsonArray
            </summary>
        </member>
        <member name="P:FastReport.JsonBase.IsObject">
            <summary>
            Returns true if this object is JsonObject
            </summary>
        </member>
        <member name="P:FastReport.JsonBase.Keys">
            <summary>
            Returns list of JsonObject keys
            </summary>
        </member>
        <member name="M:FastReport.JsonBase.FromString(System.String)">
            <summary>
            Pars json text string and return a new JsonBase Object
            </summary>
            <param name="jsonText"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.JsonBase.ContainsKey(System.String)">
            <summary>
            returns true
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.JsonBase.WriteTo(System.Text.StringBuilder,System.Int32)">
            <summary>
            Serialize this object to sb
            </summary>
            
            <param name="sb"></param>
            <param name="indent">indent in space, 0 = without indent</param>
        </member>
        <member name="T:FastReport.FillBase">
            <summary>
            Base class for all fills.
            </summary>
        </member>
        <member name="P:FastReport.FillBase.IsTransparent">
            <summary>
            Returned true if Color = Transparent
            </summary>
        </member>
        <member name="M:FastReport.FillBase.Clone">
            <summary>
            Creates exact copy of this fill.
            </summary>
            <returns>Copy of this object.</returns>
        </member>
        <member name="M:FastReport.FillBase.CreateBrush(System.Drawing.RectangleF)">
            <summary>
            Creates the GDI+ Brush object.
            </summary>
            <param name="rect">Drawing rectangle.</param>
            <returns>Brush object.</returns>
        </member>
        <member name="M:FastReport.FillBase.CreateBrush(System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Creates the GDI+ Brush object with scaling.
            </summary>
            <param name="rect">Drawing rectangle.</param>
            <param name="scaleX">X scaling coefficient.</param>
            <param name="scaleY">Y scaling coefficient.</param>
            <returns>Brush object.</returns>
        </member>
        <member name="M:FastReport.FillBase.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.FillBase)">
            <summary>
            Serializes the fill.
            </summary>
            <param name="writer">Writer object.</param>
            <param name="prefix">Name of the fill property.</param>
            <param name="fill">Fill object to compare with.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.FillBase.Draw(FastReport.Utils.FRPaintEventArgs,System.Drawing.RectangleF)">
            <summary>
            Fills the specified rectangle.
            </summary>
            <param name="e">Draw event arguments.</param>
            <param name="rect">Drawing rectangle.</param>
        </member>
        <member name="T:FastReport.SolidFill">
            <summary>
            Class represents the solid fill.
            </summary>
        </member>
        <member name="P:FastReport.SolidFill.Color">
            <summary>
            Gets or sets the fill color.
            </summary>
        </member>
        <member name="M:FastReport.SolidFill.Clone">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.SolidFill.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.SolidFill.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.SolidFill.CreateBrush(System.Drawing.RectangleF)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.SolidFill.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.FillBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.SolidFill.Draw(FastReport.Utils.FRPaintEventArgs,System.Drawing.RectangleF)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.SolidFill.#ctor">
            <summary>
            Initializes the <see cref="T:FastReport.SolidFill"/> class with Transparent color.
            </summary>
        </member>
        <member name="M:FastReport.SolidFill.#ctor(System.Drawing.Color)">
            <summary>
            Initializes the <see cref="T:FastReport.SolidFill"/> class with specified color.
            </summary>
            <param name="color"></param>
        </member>
        <member name="T:FastReport.LinearGradientFill">
            <summary>
            Class represents the linear gradient fill.
            </summary>
        </member>
        <member name="P:FastReport.LinearGradientFill.StartColor">
            <summary>
            Gets or sets the start color of the gradient. 
            </summary>
        </member>
        <member name="P:FastReport.LinearGradientFill.EndColor">
            <summary>
            Gets or sets the end color of the gradient. 
            </summary>
        </member>
        <member name="P:FastReport.LinearGradientFill.Angle">
            <summary>
            Gets or sets the angle of the gradient.
            </summary>
        </member>
        <member name="P:FastReport.LinearGradientFill.Focus">
            <summary>
            Gets or sets the focus point of the gradient.
            </summary>
            <remarks>
            Value is a floating point value from 0 to 1.
            </remarks>
        </member>
        <member name="P:FastReport.LinearGradientFill.Contrast">
            <summary>
            Gets or sets the gradient contrast.
            </summary>
            <remarks>
            Value is a floating point value from 0 to 1.
            </remarks>
        </member>
        <member name="M:FastReport.LinearGradientFill.Clone">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.LinearGradientFill.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.LinearGradientFill.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.LinearGradientFill.CreateBrush(System.Drawing.RectangleF)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.LinearGradientFill.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.FillBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.LinearGradientFill.#ctor">
            <summary>
            Initializes the <see cref="T:FastReport.LinearGradientFill"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.LinearGradientFill.#ctor(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initializes the <see cref="T:FastReport.LinearGradientFill"/> class with start and end colors.
            </summary>
            <param name="startColor">Start color.</param>
            <param name="endColor">End color.</param>
        </member>
        <member name="M:FastReport.LinearGradientFill.#ctor(System.Drawing.Color,System.Drawing.Color,System.Int32)">
            <summary>
            Initializes the <see cref="T:FastReport.LinearGradientFill"/> class with start, end colors and angle.
            </summary>
            <param name="startColor">Start color.</param>
            <param name="endColor">End color.</param>
            <param name="angle">Angle.</param>
        </member>
        <member name="M:FastReport.LinearGradientFill.#ctor(System.Drawing.Color,System.Drawing.Color,System.Int32,System.Single,System.Single)">
            <summary>
            Initializes the <see cref="T:FastReport.LinearGradientFill"/> class with start and end colors, angle, focus and contrast.
            </summary>
            <param name="startColor">Start color.</param>
            <param name="endColor">End color.</param>
            <param name="angle">Angle.</param>
            <param name="focus">Focus.</param>
            <param name="contrast">Contrast.</param>
        </member>
        <member name="T:FastReport.PathGradientStyle">
            <summary>
            The style of the path gradient.
            </summary>
        </member>
        <member name="F:FastReport.PathGradientStyle.Elliptic">
            <summary>
            Elliptic gradient.
            </summary>
        </member>
        <member name="F:FastReport.PathGradientStyle.Rectangular">
            <summary>
            Rectangular gradient.
            </summary>
        </member>
        <member name="T:FastReport.PathGradientFill">
            <summary>
            Class represents the path gradient fill.
            </summary>
        </member>
        <member name="P:FastReport.PathGradientFill.CenterColor">
            <summary>
            Gets or sets the center color of the gradient.
            </summary>
        </member>
        <member name="P:FastReport.PathGradientFill.EdgeColor">
            <summary>
            Gets or sets the edge color of the gradient.
            </summary>
        </member>
        <member name="P:FastReport.PathGradientFill.Style">
            <summary>
            Gets or sets the style of the gradient.
            </summary>
        </member>
        <member name="M:FastReport.PathGradientFill.Clone">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PathGradientFill.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PathGradientFill.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PathGradientFill.CreateBrush(System.Drawing.RectangleF)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PathGradientFill.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.FillBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PathGradientFill.#ctor">
            <summary>
            Initializes the <see cref="T:FastReport.PathGradientFill"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.PathGradientFill.#ctor(System.Drawing.Color,System.Drawing.Color,FastReport.PathGradientStyle)">
            <summary>
            Initializes the <see cref="T:FastReport.PathGradientFill"/> class with center, edge colors and style.
            </summary>
            <param name="centerColor">Center color.</param>
            <param name="edgeColor">Edge color.</param>
            <param name="style">Gradient style.</param>
        </member>
        <member name="T:FastReport.HatchFill">
            <summary>
            Class represents the hatch fill.
            </summary>
        </member>
        <member name="P:FastReport.HatchFill.ForeColor">
            <summary>
            Gets or sets the foreground color.
            </summary>
        </member>
        <member name="P:FastReport.HatchFill.BackColor">
            <summary>
            Gets or sets the background color.
            </summary>
        </member>
        <member name="P:FastReport.HatchFill.Style">
            <summary>
            Gets or sets the hatch style.
            </summary>
        </member>
        <member name="M:FastReport.HatchFill.Clone">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HatchFill.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HatchFill.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HatchFill.CreateBrush(System.Drawing.RectangleF)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HatchFill.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.FillBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HatchFill.#ctor">
            <summary>
            Initializes the <see cref="T:FastReport.HatchFill"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.HatchFill.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.HatchStyle)">
            <summary>
            Initializes the <see cref="T:FastReport.HatchFill"/> class with foreground, background colors and hatch style.
            </summary>
            <param name="foreColor">Foreground color.</param>
            <param name="backColor">Background color.</param>
            <param name="style">Hatch style.</param>
        </member>
        <member name="T:FastReport.GlassFill">
            <summary>
            Class represents the glass fill.
            </summary>
        </member>
        <member name="P:FastReport.GlassFill.Color">
            <summary>
            Gets or sets the fill color.
            </summary>
        </member>
        <member name="P:FastReport.GlassFill.Blend">
            <summary>
            Gets or sets the blend value.
            </summary>
            <remarks>Value must be between 0 and 1.
            </remarks>
        </member>
        <member name="P:FastReport.GlassFill.Hatch">
            <summary>
            Gets or sets a value determines whether to draw a hatch or not.
            </summary>
        </member>
        <member name="M:FastReport.GlassFill.Clone">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.GlassFill.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.GlassFill.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.GlassFill.Draw(FastReport.Utils.FRPaintEventArgs,System.Drawing.RectangleF)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.GlassFill.CreateBrush(System.Drawing.RectangleF)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.GlassFill.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.FillBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.GlassFill.#ctor">
            <summary>
            Initializes the <see cref="T:FastReport.GlassFill"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.GlassFill.#ctor(System.Drawing.Color,System.Single,System.Boolean)">
            <summary>
            Initializes the <see cref="T:FastReport.GlassFill"/> class with given color, blend ratio and hatch style.
            </summary>
            <param name="color">Color.</param>
            <param name="blend">Blend ratio (0..1).</param>
            <param name="hatch">Display the hatch.</param>
        </member>
        <member name="T:FastReport.TextureFill">
            <summary>
            Class represents the Texture fill.
            </summary>
        </member>
        <member name="P:FastReport.TextureFill.PreserveAspectRatio">
            <summary>
            Gets or sets value, indicating that image should preserve aspect ratio
            </summary>
        </member>
        <member name="P:FastReport.TextureFill.ImageWidth">
            <summary>
            Gets or sets the image width
            </summary>
        </member>
        <member name="P:FastReport.TextureFill.ImageHeight">
            <summary>
            Gets or sets the image height
            </summary>
        </member>
        <member name="P:FastReport.TextureFill.WrapMode">
            <summary>
            Gets or sets the texture wrap mode
            </summary>
        </member>
        <member name="P:FastReport.TextureFill.ImageIndex">
            <summary>
            Gets or sets the image index
            </summary>
        </member>
        <member name="P:FastReport.TextureFill.ImageData">
            <summary>
            Gets or sets the image data
            </summary>
        </member>
        <member name="P:FastReport.TextureFill.ImageOffsetX">
            <summary>
            Image left offset
            </summary>
        </member>
        <member name="P:FastReport.TextureFill.ImageOffsetY">
            <summary>
            Image top offset
            </summary>
        </member>
        <member name="M:FastReport.TextureFill.SetImageData(System.Byte[])">
            <summary>
            Sets image data to imageData
            </summary>
            <param name="data">input image data</param>
        </member>
        <member name="M:FastReport.TextureFill.SetImage(System.Drawing.Image)">
            <summary>
            Set image
            </summary>
            <param name="image">input image</param>
        </member>
        <member name="M:FastReport.TextureFill.Clone">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextureFill.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextureFill.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextureFill.CreateBrush(System.Drawing.RectangleF)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextureFill.CreateBrush(System.Drawing.RectangleF,System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextureFill.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.FillBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextureFill.Deserialize(FastReport.Utils.FRReader,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextureFill.FinalizeComponent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextureFill.InitializeComponent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextureFill.Draw(FastReport.Utils.FRPaintEventArgs,System.Drawing.RectangleF)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextureFill.#ctor">
            <summary>
            Initializes the <see cref="T:FastReport.TextureFill"/> class with default texture.
            </summary>
        </member>
        <member name="M:FastReport.TextureFill.#ctor(System.Byte[])">
            <summary>
            Initializes the <see cref="T:FastReport.TextureFill"/> class with specified image.
            </summary>
            <param name="imageBytes"></param>
        </member>
        <member name="M:FastReport.TextureFill.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean,System.Drawing.Drawing2D.WrapMode,System.Int32,System.Int32)">
            <summary>
            Initializes the <see cref="T:FastReport.TextureFill"/> class with specified image.
            </summary>
            <param name="image"></param>
        </member>
        <member name="T:FastReport.Format.BooleanFormat">
            <summary>
            Defines how boolean values are formatted and displayed.
            </summary>
        </member>
        <member name="P:FastReport.Format.BooleanFormat.FalseText">
            <summary>
            Gets or sets a string that will be displayed if value is <b>false</b>.
            </summary>
        </member>
        <member name="P:FastReport.Format.BooleanFormat.TrueText">
            <summary>
            Gets or sets a string that will be displayed if value is <b>true</b>.
            </summary>
        </member>
        <member name="M:FastReport.Format.BooleanFormat.Clone">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.BooleanFormat.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.BooleanFormat.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.BooleanFormat.FormatValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.BooleanFormat.#ctor">
            <summary>
            Initializes a new instance of the <b>BooleanFormat</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Format.CurrencyFormat">
            <summary>
            Defines how currency values are formatted and displayed.
            </summary>
        </member>
        <member name="P:FastReport.Format.CurrencyFormat.UseLocale">
            <summary>
            Gets or sets a value that determines whether to use system locale settings to format a value.
            </summary>
        </member>
        <member name="P:FastReport.Format.CurrencyFormat.DecimalDigits">
            <summary>
            Gets or sets the number of decimal places to use in currency values. 
            </summary>
        </member>
        <member name="P:FastReport.Format.CurrencyFormat.DecimalSeparator">
            <summary>
            Gets or sets the string to use as the decimal separator in currency values.
            </summary>
        </member>
        <member name="P:FastReport.Format.CurrencyFormat.GroupSeparator">
            <summary>
            Gets or sets the string that separates groups of digits to the left of the decimal in currency values. 
            </summary>
        </member>
        <member name="P:FastReport.Format.CurrencyFormat.CurrencySymbol">
            <summary>
            Gets or sets the string to use as the currency symbol.
            </summary>
        </member>
        <member name="P:FastReport.Format.CurrencyFormat.PositivePattern">
            <summary>
            Gets or sets the format pattern for positive currency values.
            </summary>
            <remarks>This property can have one of the values in the following table. 
            The symbol "$" is the <b>CurrencySymbol</b> and <i>n</i> is a number.
            <list type="table">
              <listheader><term>Value</term><description>Associated Pattern</description></listheader>
              <item><term>0</term><description>$n</description></item>
              <item><term>1</term><description>n$</description></item>
              <item><term>2</term><description>$ n</description></item>
              <item><term>3</term><description>n $</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:FastReport.Format.CurrencyFormat.NegativePattern">
            <summary>
            Gets or sets the format pattern for negative currency values.
            </summary>
            <remarks>This property can have one of the values in the following table. 
            The symbol "$" is the <b>CurrencySymbol</b> and <i>n</i> is a number.
            <list type="table">
              <listheader><term>Value</term><description>Associated Pattern</description></listheader>
              <item><term>0</term> <description>($n)</description></item>
              <item><term>1</term> <description>-$n</description></item>
              <item><term>2</term> <description>$-n</description></item>
              <item><term>3</term> <description>$n-</description></item>
              <item><term>4</term> <description>(n$)</description></item>
              <item><term>5</term> <description>-n$</description></item>
              <item><term>6</term> <description>n-$</description></item>
              <item><term>7</term> <description>n$-</description></item>
              <item><term>8</term> <description>-n $</description></item>
              <item><term>9</term> <description>-$ n</description></item>
              <item><term>10</term><description>n $-</description></item>
              <item><term>11</term><description>$ n-</description></item>
              <item><term>12</term><description>$ -n</description></item>
              <item><term>13</term><description>n- $</description></item>
              <item><term>14</term><description>($ n)</description></item>
              <item><term>15</term><description>(n $)</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:FastReport.Format.CurrencyFormat.Clone">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.CurrencyFormat.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.CurrencyFormat.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.CurrencyFormat.FormatValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.CurrencyFormat.#ctor">
            <summary>
            Initializes a new instance of the <b>CurrencyFormat</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Format.CustomFormat">
            <summary>
            Represents a format that uses the <b>Format</b> string to display values.
            </summary>
        </member>
        <member name="P:FastReport.Format.CustomFormat.Format">
            <summary>
            Gets or sets a format string.
            </summary>
            <remarks>
            Default format is "G". For example, if you want to format a date, use the following
            format string: "MM/dd/yyyy". See the <b>System.String.Format</b> method for list 
            of possible format strings.
            </remarks>
        </member>
        <member name="M:FastReport.Format.CustomFormat.Clone">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.CustomFormat.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.CustomFormat.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.CustomFormat.FormatValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.CustomFormat.#ctor">
            <summary>
            Initializes a new instance of the <b>CustomFormat</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Format.DateFormat">
            <summary>
            Defines how date values are formatted and displayed.
            </summary>
        </member>
        <member name="M:FastReport.Format.DateFormat.Clone">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.DateFormat.#ctor">
            <summary>
            Initializes a new instance of the <b>DateFormat</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Format.FormatBase">
            <summary>
            Base class for all formats.
            </summary>
            <remarks>
            The format is used to format expression value in a <see cref="T:FastReport.TextObject"/> object. 
            </remarks>
        </member>
        <member name="P:FastReport.Format.FormatBase.Name">
            <summary>
            Gets the short format name (e.g. without a "Format" suffix).
            </summary>
        </member>
        <member name="M:FastReport.Format.FormatBase.Clone">
            <summary>
            Creates exact copy of this format.
            </summary>
            <returns>The copy of this format.</returns>
        </member>
        <member name="M:FastReport.Format.FormatBase.FormatValue(System.Object)">
            <summary>
            Formats the specified value.
            </summary>
            <param name="value">The value to format.</param>
            <returns>The string that represents the formatted value.</returns>
        </member>
        <member name="M:FastReport.Format.FormatBase.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.FormatBase.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Format.FormatCollection">
            <summary>
            Represents a collection of formats used by the <see cref="T:FastReport.TextObject"/> and <see cref="!:RichObject"/>
            objects.
            </summary>
        </member>
        <member name="P:FastReport.Format.FormatCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">Index of an element.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:FastReport.Format.FormatCollection.AddRange(FastReport.Format.FormatBase[])">
            <summary>
            Adds the specified elements to the end of this collection.
            </summary>
            <param name="range">Array of elements to add.</param>
        </member>
        <member name="M:FastReport.Format.FormatCollection.Add(FastReport.Format.FormatBase)">
            <summary>
            Adds an object to the end of this collection.
            </summary>
            <param name="value">Object to add.</param>
            <returns>Index of the added object.</returns>
        </member>
        <member name="M:FastReport.Format.FormatCollection.Insert(System.Int32,FastReport.Format.FormatBase)">
            <summary>
            Inserts an object into this collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The object to insert.</param>
        </member>
        <member name="M:FastReport.Format.FormatCollection.Remove(FastReport.Format.FormatBase)">
            <summary>
            Removes the specified object from the collection.
            </summary>
            <param name="value">Object to remove.</param>
        </member>
        <member name="M:FastReport.Format.FormatCollection.IndexOf(FastReport.Format.FormatBase)">
            <summary>
            Returns the zero-based index of the first occurrence of an object.
            </summary>
            <param name="value">The object to locate in the collection.</param>
            <returns>The zero-based index of the first occurrence of value within the entire collection, if found; 
            otherwise, -1.</returns>
        </member>
        <member name="M:FastReport.Format.FormatCollection.Contains(FastReport.Format.FormatBase)">
            <summary>
            Determines whether an element is in the collection.
            </summary>
            <param name="value">The object to locate in the collection.</param>
            <returns><b>true</b> if object is found in the collection; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:FastReport.Format.FormatCollection.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.FormatCollection.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.FormatCollection.Assign(FastReport.Format.FormatCollection)">
            <summary>
            Copies formats from another collection.
            </summary>
            <param name="collection">Collection to copy from.</param>
        </member>
        <member name="M:FastReport.Format.FormatCollection.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.FormatCollection.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Format.GeneralFormat">
            <summary>
            Represents a format used to display values with no formatting.
            </summary>
        </member>
        <member name="M:FastReport.Format.GeneralFormat.Clone">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.GeneralFormat.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.GeneralFormat.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.GeneralFormat.FormatValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Format.NumberFormat">
            <summary>
            Defines how numeric values are formatted and displayed.
            </summary>
        </member>
        <member name="P:FastReport.Format.NumberFormat.UseLocale">
            <summary>
            Gets or sets a value that determines whether to use system locale settings to format a value.
            </summary>
        </member>
        <member name="P:FastReport.Format.NumberFormat.DecimalDigits">
            <summary>
            Gets or sets the number of decimal places to use in numeric values. 
            </summary>
        </member>
        <member name="P:FastReport.Format.NumberFormat.DecimalSeparator">
            <summary>
            Gets or sets the string to use as the decimal separator in numeric values.
            </summary>
        </member>
        <member name="P:FastReport.Format.NumberFormat.GroupSeparator">
            <summary>
            Gets or sets the string that separates groups of digits to the left of the decimal in numeric values. 
            </summary>
        </member>
        <member name="P:FastReport.Format.NumberFormat.NegativePattern">
            <summary>
            Gets or sets the format pattern for negative numeric values.
            </summary>
            <remarks>This property can have one of the values in the following table. 
            The symbol <i>n</i> is a number.
            <list type="table">
              <listheader><term>Value</term><description>Associated Pattern</description></listheader>
              <item><term>0</term><description>(n)</description></item>
              <item><term>1</term><description>-n</description></item>
              <item><term>2</term><description>- n</description></item>
              <item><term>3</term><description>n-</description></item>
              <item><term>4</term><description>n -</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:FastReport.Format.NumberFormat.Clone">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.NumberFormat.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.NumberFormat.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.NumberFormat.FormatValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.NumberFormat.#ctor">
            <summary>
            Initializes a new instance of the <b>NumberFormat</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Format.PercentFormat">
            <summary>
            Defines how percent values are formatted and displayed.
            </summary>
        </member>
        <member name="P:FastReport.Format.PercentFormat.UseLocale">
            <summary>
            Gets or sets a value that determines whether to use system locale settings to format a value.
            </summary>
        </member>
        <member name="P:FastReport.Format.PercentFormat.DecimalDigits">
            <summary>
            Gets or sets the number of decimal places to use in percent values. 
            </summary>
        </member>
        <member name="P:FastReport.Format.PercentFormat.DecimalSeparator">
            <summary>
            Gets or sets the string to use as the decimal separator in percent values.
            </summary>
        </member>
        <member name="P:FastReport.Format.PercentFormat.GroupSeparator">
            <summary>
            Gets or sets the string that separates groups of digits to the left of the decimal in percent values. 
            </summary>
        </member>
        <member name="P:FastReport.Format.PercentFormat.PercentSymbol">
            <summary>
            Gets or sets the string to use as the percent symbol.
            </summary>
        </member>
        <member name="P:FastReport.Format.PercentFormat.PositivePattern">
            <summary>
            Gets or sets the format pattern for positive percent values.
            </summary>
            <remarks>This property can have one of the values in the following table. 
            The symbol "%" is the <b>PercentSymbol</b> and <i>n</i> is a number.
            <list type="table">
              <listheader><term>Value</term><description>Associated Pattern</description></listheader>
              <item><term>0</term><description>n %</description></item>
              <item><term>1</term><description>n%</description></item>
              <item><term>2</term><description>%n</description></item>
              <item><term>3</term><description>% n</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:FastReport.Format.PercentFormat.NegativePattern">
            <summary>
            Gets or sets the format pattern for negative percent values.
            </summary>
            <remarks>This property can have one of the values in the following table. 
            The symbol "%" is the <b>PercentSymbol</b> and <i>n</i> is a number.
            <list type="table">
              <listheader><term>Value</term><description>Associated Pattern</description></listheader>
              <item><term>0</term> <description>-n %</description></item>
              <item><term>1</term> <description>-n%</description></item>
              <item><term>2</term> <description>-%n</description></item>
              <item><term>3</term> <description>%-n</description></item>
              <item><term>4</term> <description>%n-</description></item>
              <item><term>5</term> <description>n-%</description></item>
              <item><term>6</term> <description>n%-</description></item>
              <item><term>7</term> <description>-%n</description></item>
              <item><term>8</term> <description>n %-</description></item>
              <item><term>9</term> <description>% n-</description></item>
              <item><term>10</term><description>% -n</description></item>
              <item><term>11</term><description>n- %</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:FastReport.Format.PercentFormat.Clone">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.PercentFormat.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.PercentFormat.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.PercentFormat.FormatValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.PercentFormat.#ctor">
            <summary>
            Initializes a new instance of the <b>PercentFormat</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Format.TimeFormat">
            <summary>
            Defines how time values are formatted and displayed.
            </summary>
        </member>
        <member name="M:FastReport.Format.TimeFormat.Clone">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.TimeFormat.#ctor">
            <summary>
            Initializes a new instance of the <b>TimeFormat</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Functions.Roman">
            <summary>
            Based on code of Stefan Böther,  xprocs@hotmail.de
            </summary>
        </member>
        <member name="T:FastReport.Functions.StdFunctions">
            <summary>
            Contains standard functions registered in the "Data" window.
            </summary>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Maximum(System.Int32,System.Int32)">
            <summary>
            Returns the larger of two 32-bit signed integers. 
            </summary>
            <param name="val1">The first of two values to compare.</param>
            <param name="val2">The second of two values to compare.</param>
            <returns>Parameter val1 or val2, whichever is larger.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Maximum(System.Int64,System.Int64)">
            <summary>
            Returns the larger of two 64-bit signed integers. 
            </summary>
            <param name="val1">The first of two values to compare.</param>
            <param name="val2">The second of two values to compare.</param>
            <returns>Parameter val1 or val2, whichever is larger.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Maximum(System.Single,System.Single)">
            <summary>
            Returns the larger of two single-precision floating-point numbers.
            </summary>
            <param name="val1">The first of two values to compare.</param>
            <param name="val2">The second of two values to compare.</param>
            <returns>Parameter val1 or val2, whichever is larger.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Maximum(System.Double,System.Double)">
            <summary>
            Returns the larger of two double-precision floating-point numbers.
            </summary>
            <param name="val1">The first of two values to compare.</param>
            <param name="val2">The second of two values to compare.</param>
            <returns>Parameter val1 or val2, whichever is larger.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Maximum(System.Decimal,System.Decimal)">
            <summary>
            Returns the larger of two decimal numbers.
            </summary>
            <param name="val1">The first of two values to compare.</param>
            <param name="val2">The second of two values to compare.</param>
            <returns>Parameter val1 or val2, whichever is larger.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Minimum(System.Int32,System.Int32)">
            <summary>
            Returns the smaller of two 32-bit signed integers. 
            </summary>
            <param name="val1">The first of two values to compare.</param>
            <param name="val2">The second of two values to compare.</param>
            <returns>Parameter val1 or val2, whichever is smaller.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Minimum(System.Int64,System.Int64)">
            <summary>
            Returns the smaller of two 64-bit signed integers. 
            </summary>
            <param name="val1">The first of two values to compare.</param>
            <param name="val2">The second of two values to compare.</param>
            <returns>Parameter val1 or val2, whichever is smaller.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Minimum(System.Single,System.Single)">
            <summary>
            Returns the smaller of two single-precision floating-point numbers.
            </summary>
            <param name="val1">The first of two values to compare.</param>
            <param name="val2">The second of two values to compare.</param>
            <returns>Parameter val1 or val2, whichever is smaller.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Minimum(System.Double,System.Double)">
            <summary>
            Returns the smaller of two double-precision floating-point numbers.
            </summary>
            <param name="val1">The first of two values to compare.</param>
            <param name="val2">The second of two values to compare.</param>
            <returns>Parameter val1 or val2, whichever is smaller.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Minimum(System.Decimal,System.Decimal)">
            <summary>
            Returns the smaller of two decimal numbers.
            </summary>
            <param name="val1">The first of two values to compare.</param>
            <param name="val2">The second of two values to compare.</param>
            <returns>Parameter val1 or val2, whichever is smaller.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Asc(System.Char)">
            <summary>
            Returns an integer value representing the character code corresponding to a character.
            </summary>
            <param name="c">Character to convert.</param>
            <returns>The character code.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Chr(System.Int32)">
            <summary>
            Returns the character associated with the specified character code.
            </summary>
            <param name="i">Character code to convert.</param>
            <returns>The character.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Insert(System.String,System.Int32,System.String)">
            <summary>
            Inserts a specified string at a specified index position in the original string.
            </summary>
            <param name="s">The original string.</param>
            <param name="startIndex">The index position of the insertion.</param>
            <param name="value">The string to insert.</param>
            <returns>A new string.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Length(System.String)">
            <summary>
            Gets the number of characters in a string.
            </summary>
            <param name="s">The original string.</param>
            <returns>The number of characters.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.LowerCase(System.String)">
            <summary>
            Converts a specified string to lowercase.
            </summary>
            <param name="s">The string to convert.</param>
            <returns>A string in lowercase.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.PadLeft(System.String,System.Int32)">
            <summary>
            Right-aligns the characters in a string, padding with spaces on the left for a specified total length.
            </summary>
            <param name="s">The original string.</param>
            <param name="totalWidth">The number of characters in the resulting string.</param>
            <returns>Right-aligned string, padded on the left with spaces.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.PadLeft(System.String,System.Int32,System.Char)">
            <summary>
            Right-aligns the characters in a string, padding on the left with a specified character
            for a specified total length.
            </summary>
            <param name="s">The original string.</param>
            <param name="totalWidth">The number of characters in the resulting string.</param>
            <param name="paddingChar">A padding character.</param>
            <returns>Right-aligned string, padded on the left with padding characters.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.PadRight(System.String,System.Int32)">
            <summary>
            Left-aligns the characters in a string, padding with spaces on the right, for a specified total length.
            </summary>
            <param name="s">The original string.</param>
            <param name="totalWidth">The number of characters in the resulting string.</param>
            <returns>Left-aligned string, padded on the right with spaces.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.PadRight(System.String,System.Int32,System.Char)">
            <summary>
            Left-aligns the characters in a string, padding on the right with a specified character, 
            for a specified total length.
            </summary>
            <param name="s">The original string.</param>
            <param name="totalWidth">The number of characters in the resulting string.</param>
            <param name="paddingChar">A padding character.</param>
            <returns>Left-aligned string, padded on the right with padding characters.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.TitleCase(System.String)">
            <summary>
            Converts the specified string to titlecase. 
            </summary>
            <param name="s">The string to convert.</param>
            <returns>A new string.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Remove(System.String,System.Int32)">
            <summary>
            Deletes all the characters from a string beginning at a specified position.
            </summary>
            <param name="s">The original string.</param>
            <param name="startIndex">The position to begin deleting characters.</param>
            <returns>A new string.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Remove(System.String,System.Int32,System.Int32)">
            <summary>
            Deletes a specified number of characters from a string beginning at a specified position.
            </summary>
            <param name="s">The original string.</param>
            <param name="startIndex">The position to begin deleting characters.</param>
            <param name="count">The number of characters to delete.</param>
            <returns>A new string.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Replace(System.String,System.String,System.String)">
            <summary>
            Replaces all occurrences of a specified string in the original string, with another specified string.
            </summary>
            <param name="s">The original string.</param>
            <param name="oldValue">A string to be replaced.</param>
            <param name="newValue">A string to replace all occurrences of oldValue.</param>
            <returns>A new string.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Substring(System.String,System.Int32)">
            <summary>
            Retrieves a substring from the original string, starting at a specified character position.
            </summary>
            <param name="s">The original string.</param>
            <param name="startIndex">The starting character position of a substring.</param>
            <returns>A new string.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Substring(System.String,System.Int32,System.Int32)">
            <summary>
            Retrieves a substring from the original string, starting at a specified character position, 
            with a specified length.
            </summary>
            <param name="s">The original string.</param>
            <param name="startIndex">The starting character position of a substring.</param>
            <param name="length">The number of characters in the substring.</param>
            <returns>A new string.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Trim(System.String)">
            <summary>
            Removes all occurrences of white space characters from the beginning and end of the original string.
            </summary>
            <param name="s">The original string.</param>
            <returns>A new string.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.UpperCase(System.String)">
            <summary>
            Converts a specified string to uppercase.
            </summary>
            <param name="s">The string to convert.</param>
            <returns>A string in uppercase.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.AddDays(System.DateTime,System.Double)">
            <summary>
            Adds the specified number of days to the original date.
            </summary>
            <param name="date">The original date.</param>
            <param name="value">A number of whole and fractional days.</param>
            <returns>A new DateTime value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.AddHours(System.DateTime,System.Double)">
            <summary>
            Adds the specified number of hours to the original date.
            </summary>
            <param name="date">The original date.</param>
            <param name="value">A number of whole and fractional hours.</param>
            <returns>A new DateTime value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.AddMinutes(System.DateTime,System.Double)">
            <summary>
            Adds the specified number of minutes to the original date.
            </summary>
            <param name="date">The original date.</param>
            <param name="value">A number of whole and fractional minutes.</param>
            <returns>A new DateTime value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.AddMonths(System.DateTime,System.Int32)">
            <summary>
            Adds the specified number of months to the original date.
            </summary>
            <param name="date">The original date.</param>
            <param name="value">A number of months.</param>
            <returns>A new DateTime value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.AddSeconds(System.DateTime,System.Double)">
            <summary>
            Adds the specified number of seconds to the original date.
            </summary>
            <param name="date">The original date.</param>
            <param name="value">A number of whole and fractional seconds.</param>
            <returns>A new DateTime value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.AddYears(System.DateTime,System.Int32)">
            <summary>
            Adds the specified number of years to the original date.
            </summary>
            <param name="date">The original date.</param>
            <param name="value">A number of years.</param>
            <returns>A new DateTime value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.DateDiff(System.DateTime,System.DateTime)">
            <summary>
            Subtracts the specified date and time from the original date.
            </summary>
            <param name="date1">The original date.</param>
            <param name="date2">The date and time to subtract.</param>
            <returns>A TimeSpan interval between two dates.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.DateSerial(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the DateTime.
            </summary>
            <param name="year">The year.</param>
            <param name="month">The month.</param>
            <param name="day">The day.</param>
            <returns>A new DateTime value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Day(System.DateTime)">
            <summary>
            Gets the day of the month.
            </summary>
            <param name="date">The date value.</param>
            <returns>The day component.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.DayOfWeek(System.DateTime)">
            <summary>
            Gets the localized name of the day of the week.
            </summary>
            <param name="date">The date value.</param>
            <returns>The name of the day of the week.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.DayOfYear(System.DateTime)">
            <summary>
            Gets the day of the year.
            </summary>
            <param name="date">The date value.</param>
            <returns>The day of the year.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.DaysInMonth(System.Int32,System.Int32)">
            <summary>
            Returns the number of days in the specified month and year.
            </summary>
            <param name="year">The year.</param>
            <param name="month">The month.</param>
            <returns>The number of days in month for the specified year.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Hour(System.DateTime)">
            <summary>
            Gets the hour component of the date.
            </summary>
            <param name="date">The date.</param>
            <returns>The hour component.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Minute(System.DateTime)">
            <summary>
            Gets the minute component of the date.
            </summary>
            <param name="date">The date.</param>
            <returns>The minute component.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Month(System.DateTime)">
            <summary>
            Gets the month component of the date.
            </summary>
            <param name="date">The date.</param>
            <returns>The month component.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.MonthName(System.Int32)">
            <summary>
            Gets the localized month name.
            </summary>
            <param name="month">The month number.</param>
            <returns>The month name.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Second(System.DateTime)">
            <summary>
            Gets the seconds component of the date.
            </summary>
            <param name="date">The date.</param>
            <returns>The seconds component.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.WeekOfYear(System.DateTime)">
            <summary>
            Gets the week of the year.
            </summary>
            <param name="date">The date value.</param>
            <returns>The week of the year.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Year(System.DateTime)">
            <summary>
            Gets the year component of the date.
            </summary>
            <param name="date">The date.</param>
            <returns>The year component.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Format(System.String,System.Object[])">
            <summary>
            Replaces the format item in a specified String with the text equivalent of the value of a 
            corresponding Object instance in a specified array. 
            </summary>
            <param name="format">A String containing zero or more format items.</param>
            <param name="args">An Object array containing zero or more objects to format.</param>
            <returns>A copy of format in which the format items have been replaced by the String equivalent of the corresponding instances of Object in args.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.FormatCurrency(System.Object)">
            <summary>
            Returns a string formatted as a currency value.
            </summary>
            <param name="value">The value to format.</param>
            <returns>The formatted string.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.FormatCurrency(System.Object,System.Int32)">
            <summary>
            Returns a string formatted as a currency value with specified number of decimal digits.
            </summary>
            <param name="value">The value to format.</param>
            <param name="decimalDigits">Number of decimal digits.</param>
            <returns>The formatted string.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.FormatDateTime(System.DateTime)">
            <summary>
            Returns a string formatted as a date/time value.
            </summary>
            <param name="value">The value to format.</param>
            <returns>The formatted string.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.FormatDateTime(System.DateTime,System.String)">
            <summary>
            Returns a string formatted as a date/time value.
            </summary>
            <param name="value">The value to format.</param>
            <param name="format">The format specifier, one of the 
            "Long Date", "Short Date", "Long Time", "Short Time" values.</param>
            <returns>The formatted string.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.FormatNumber(System.Object)">
            <summary>
            Returns a string formatted as a numeric value.
            </summary>
            <param name="value">The value to format.</param>
            <returns>The formatted string.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.FormatNumber(System.Object,System.Int32)">
            <summary>
            Returns a string formatted as a numeric value with specified number of decimal digits.
            </summary>
            <param name="value">The value to format.</param>
            <param name="decimalDigits">Number of decimal digits.</param>
            <returns>The formatted string.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.FormatPercent(System.Object)">
            <summary>
            Returns a string formatted as a percent value.
            </summary>
            <param name="value">The value to format.</param>
            <returns>The formatted string.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.FormatPercent(System.Object,System.Int32)">
            <summary>
            Returns a string formatted as a percent value with specified number of decimal digits.
            </summary>
            <param name="value">The value to format.</param>
            <param name="decimalDigits">Number of decimal digits.</param>
            <returns>The formatted string.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToRoman(System.Object)">
            <summary>
            Converts a numeric value to Roman string representation.
            </summary>
            <param name="value">Integer value in range 0-3998.</param>
            <returns>The string in Roman form.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWords(System.Object)">
            <summary>
            Converts a currency value to an english (US) string representation of that value.
            </summary>
            <param name="value">The currency value to convert.</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWords(System.Object,System.String)">
            <summary>
            Converts a currency value to an english (US) string representation of that value, 
            using the specified currency.
            </summary>
            <param name="value">The currency value to convert.</param>
            <param name="currencyName">The 3-digit ISO name of the currency, for example "EUR".</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWords(System.Object,System.String,System.String)">
            <summary>
            Converts a numeric value to an english (US) string representation of that value.
            </summary>
            <param name="value">The numeric value to convert.</param>
            <param name="one">The name in singular form, for example "page".</param>
            <param name="many">The name in plural form, for example "pages".</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsEnGb(System.Object)">
            <summary>
            Converts a currency value to an english (GB) string representation of that value.
            </summary>
            <param name="value">The currency value to convert.</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsEnGb(System.Object,System.String)">
            <summary>
            Converts a currency value to an english (GB) string representation of that value, 
            using the specified currency.
            </summary>
            <param name="value">The currency value to convert.</param>
            <param name="currencyName">The 3-digit ISO name of the currency, for example "EUR".</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsEnGb(System.Object,System.String,System.String)">
            <summary>
            Converts a numeric value to an english (GB) string representation of that value.
            </summary>
            <param name="value">The numeric value to convert.</param>
            <param name="one">The name in singular form, for example "page".</param>
            <param name="many">The name in plural form, for example "pages".</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsEs(System.Object)">
            <summary>
            Converts a currency value to a spanish string representation of that value.
            </summary>
            <param name="value">The currency value to convert.</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsEs(System.Object,System.String)">
            <summary>
            Converts a currency value to a spanish string representation of that value, 
            using the specified currency.
            </summary>
            <param name="value">The currency value to convert.</param>
            <param name="currencyName">The 3-digit ISO name of the currency, for example "EUR".</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsEs(System.Object,System.String,System.String)">
            <summary>
            Converts a numeric value to a spanish string representation of that value.
            </summary>
            <param name="value">The numeric value to convert.</param>
            <param name="one">The name in singular form, for example "page".</param>
            <param name="many">The name in plural form, for example "pages".</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsRu(System.Object)">
            <summary>
            Converts a currency value to a russian string representation of that value.
            </summary>
            <param name="value">The currency value to convert.</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsRu(System.Object,System.String)">
            <summary>
            Converts a currency value to a russian string representation of that value, 
            using the specified currency.
            </summary>
            <param name="value">The currency value to convert.</param>
            <param name="currencyName">The 3-digit ISO name of the currency, for example "EUR".</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsRu(System.Object,System.Boolean,System.String,System.String,System.String)">
            <summary>
            Converts a numeric value to a russian string representation of that value.
            </summary>
            <param name="value">The numeric value to convert.</param>
            <param name="male">True if the name is of male gender.</param>
            <param name="one">The name in singular form, for example "страница".</param>
            <param name="two">The name in plural form, for example "страницы".</param>
            <param name="many">The name in plural form, for example "страниц".</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsDe(System.Object)">
            <summary>
            Converts a currency value to a german string representation of that value.
            </summary>
            <param name="value">The currency value to convert.</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsDe(System.Object,System.String)">
            <summary>
            Converts a currency value to a german string representation of that value, 
            using the specified currency.
            </summary>
            <param name="value">The currency value to convert.</param>
            <param name="currencyName">The 3-digit ISO name of the currency, for example "EUR".</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsDe(System.Object,System.String,System.String)">
            <summary>
            Converts a numeric value to a german string representation of that value.
            </summary>
            <param name="value">The numeric value to convert.</param>
            <param name="one">The name in singular form, for example "page".</param>
            <param name="many">The name in plural form, for example "pages".</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsFr(System.Object)">
            <summary>
            Converts a currency value to a french string representation of that value.
            </summary>
            <param name="value">The currency value to convert.</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsFr(System.Object,System.String)">
            <summary>
            Converts a currency value to a french string representation of that value, 
            using the specified currency.
            </summary>
            <param name="value">The currency value to convert.</param>
            <param name="currencyName">The 3-digit ISO name of the currency, for example "EUR".</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsFr(System.Object,System.String,System.String)">
            <summary>
            Converts a numeric value to a french string representation of that value.
            </summary>
            <param name="value">The numeric value to convert.</param>
            <param name="one">The name in singular form, for example "page".</param>
            <param name="many">The name in plural form, for example "pages".</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsNl(System.Object)">
            <summary>
            Converts a currency value to a dutch string representation of that value.
            </summary>
            <param name="value">The currency value to convert.</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsNl(System.Object,System.String)">
            <summary>
            Converts a currency value to a dutch string representation of that value, 
            using the specified currency.
            </summary>
            <param name="value">The currency value to convert.</param>
            <param name="currencyName">The 3-digit ISO name of the currency, for example "EUR".</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsNl(System.Object,System.String,System.String)">
            <summary>
            Converts a numeric value to a dutch string representation of that value.
            </summary>
            <param name="value">The numeric value to convert.</param>
            <param name="one">The name in singular form, for example "page".</param>
            <param name="many">The name in plural form, for example "pages".</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsIn(System.Object)">
            <summary>
            Converts a numeric value to a indian numbering system string representation of that value.
            </summary>
            <param name="value">the currency value to convert</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsIn(System.Object,System.String)">
            <summary>
            Converts a numeric value to a indian numbering system string representation of that value.
            </summary>
            <param name="value">he numeric value to convert.</param>
            <param name="currencyName">The 3-digit ISO name of the currency, for example "INR".</param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsIn(System.Object,System.String,System.String)">
            <summary>
            Converts a numeric value to a indian numbering system string representation of that value.
            </summary>
            <param name="value">The numeric value to convert.</param>
            <param name="one">The name in singular form, for example "page".</param>
            <param name="many">The name in plural form, for example "pages".</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsUkr(System.Object)">
            <summary>
            Converts a numeric value to a ukrainian string representation of that value.
            </summary>
            <param name="value">The numeric value to convert.</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsUkr(System.Object,System.String)">
            <summary>
            Converts a currency value to a ukrainian string representation of that value, 
            using the specified currency.
            </summary>
            <param name="value">The currency value to convert.</param>
            <param name="currencyName">The 3-digit ISO name of the currency, for example "UAH".</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsUkr(System.Object,System.Boolean,System.String,System.String,System.String)">
            <summary>
            Converts a numeric value to a ukrainian string representation of that value.
            </summary>
            <param name="value">The numeric value to convert.</param>
            <param name="male">True if the name is of male gender.</param>
            <param name="one">The name in singular form, for example "сторінка".</param>
            <param name="two">The name in plural form, for example "сторінки".</param>
            <param name="many">The name in plural form, for example "сторінок".</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsSp(System.Object)">
            <summary>
            Converts a numeric value to a spanish string representation of that value.
            </summary>
            <param name="value">The numeric value to convert.</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsSp(System.Object,System.String)">
            <summary>
            Converts a numeric value to a spanish representation of that value.
            </summary>
            <param name="value">he numeric value to convert.</param>
            <param name="currencyName">The 3-digit ISO name of the currency, for example "EUR".</param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsSp(System.Object,System.String,System.String)">
            <summary>
            Converts a numeric value to a spanish string representation of that value.
            </summary>
            <param name="value">The numeric value to convert.</param>
            <param name="male">True if the name is of male gender.</param>
            <param name="one">The name in singular form, for example "silla".</param>
            <param name="two">The name in plural form, for example "Sillas".</param>
            <param name="many">The name in plural form, for example "Sillas".</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsPersian(System.Object)">
            <summary>
            Converts a numeric value to a persian string representation of that value.
            </summary>
            <param name="value">The numeric value to convert.</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsPersian(System.Object,System.String)">
            <summary>
            Converts a numeric value to a persian representation of that value.
            </summary>
            <param name="value">he numeric value to convert.</param>
            <param name="currencyName">The 3-digit ISO name of the currency, for example "EUR".</param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsPersian(System.Object,System.String,System.String)">
            <summary>
            Converts a numeric value to a persian string representation of that value.
            </summary>
            <param name="value">The numeric value to convert.</param>
            <param name="male">True if the name is of male gender.</param>
            <param name="one">The name in singular form, for example "silla".</param>
            <param name="two">The name in plural form, for example "Sillas".</param>
            <param name="many">The name in plural form, for example "Sillas".</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsPl(System.Object)">
            <summary>
            Converts a numeric value to a polish string representation of that value.
            </summary>
            <param name="value">The numeric value to convert.</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsPl(System.Object,System.String)">
            <summary>
            Converts a numeric value to a polish representation of that value.
            </summary>
            <param name="value">he numeric value to convert.</param>
            <param name="currencyName">The 3-digit ISO name of the currency, for example "EUR".</param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsPl(System.Object,System.String,System.String)">
            <summary>
            Converts a numeric value to a polish string representation of that value.
            </summary>
            <param name="value">The numeric value to convert.</param>
            <param name="male">True if the name is of male gender.</param>
            <param name="one">The name in singular form, for example "silla".</param>
            <param name="two">The name in plural form, for example "Sillas".</param>
            <param name="many">The name in plural form, for example "Sillas".</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToLetters(System.Object)">
            <summary>
            Converts a value to an english (US) alphabet string representation of that value.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The alphabet string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToLetters(System.Object,System.Boolean)">
            <summary>
            Converts a value to an english (US) alphabet string representation of that value.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="isUpper">Bool indicating that letters should be in upper registry.</param>
            <returns>The alphabet string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToLettersRu(System.Object)">
            <summary>
            Converts a value to a russian alphabet string representation of that value.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The alphabet string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToLettersRu(System.Object,System.Boolean)">
            <summary>
            Converts a value to a russian alphabet string representation of that value.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="isUpper">Bool indicating that letters should be in upper registry.</param>
            <returns>The alphabet string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Choose(System.Double,System.Object[])">
            <summary>
            Selects and returns a value from a list of arguments.
            </summary>
            <param name="index">A value between 1 and the number of elements passed in the "choice" argument.</param>
            <param name="choice">Object parameter array.</param>
            <returns>One of the values in the "choice" argument.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.IIf(System.Boolean,System.Object,System.Object)">
            <summary>
            Returns one of two objects, depending on the evaluation of an expression.
            </summary>
            <param name="expression">The expression you want to evaluate.</param>
            <param name="truePart">Returned if Expression evaluates to True.</param>
            <param name="falsePart">Returned if Expression evaluates to False.</param>
            <returns>Either truePart os falsePart.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Switch(System.Object[])">
            <summary>
            Evaluates a list of expressions and returns a value corresponding to the first 
            expression in the list that is True.
            </summary>
            <param name="expressions">Parameter array consists of paired expressions and values.</param>
            <returns>The value corresponding to an expression which returns true.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.IsNull(FastReport.Report,System.String)">
            <summary>
            Checks if the specified object is null.
            </summary>
            <param name="thisReport">The report instance.</param>
            <param name="name">Either a name of DB column, or a parameter name, or a total name to check.</param>
            <returns><b>true</b> if the object's value is null.</returns>
        </member>
        <member name="T:FastReport.Gauge.GaugeLabel">
            <summary>
            Represents a label of a gauge.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugeLabel.Text">
            <summary>
            Gets or sets the label text
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugeLabel.Font">
            <summary>
            Gets or sets the label font
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugeLabel.Color">
            <summary>
            Gets or sets the label color
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugeLabel.Parent">
            <summary>
            Gets or sets the label parent
            </summary>
        </member>
        <member name="M:FastReport.Gauge.GaugeLabel.#ctor(FastReport.Gauge.GaugeObject)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.GaugeLabel"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.GaugeLabel.#ctor(FastReport.Gauge.GaugeObject,System.String,System.Drawing.Font,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.GaugeLabel"/> class.
            </summary>
            <param name="text">Label text</param>
            <param name="font">Label font</param>
            <param name="color">Label color</param>
            <param name="parent">Label parent</param>
        </member>
        <member name="M:FastReport.Gauge.GaugeLabel.Assign(FastReport.Gauge.GaugeLabel)">
            <summary>
            Copies the contents of another GaugeLabel.
            </summary>
            <param name="src">The GaugeLabel instance to copy the contents from.</param>
        </member>
        <member name="M:FastReport.Gauge.GaugeLabel.Draw(FastReport.Utils.FRPaintEventArgs)">
            <summary>
            Draws the gauge label.
            </summary>
            <param name="e">Draw event arguments.</param>
        </member>
        <member name="M:FastReport.Gauge.GaugeLabel.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.Gauge.GaugeLabel)">
            <summary>
            Serializes the gauge label.
            </summary>
            <param name="writer">Writer object.</param>
            <param name="prefix">Gauge label property name.</param>
            <param name="diff">Another GaugeLabel to compare with.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="T:FastReport.Gauge.GaugeObject">
            <summary>
            Represents a gauge object.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugeObject.Minimum">
            <summary>
            Gets or sets the minimal value of gauge.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugeObject.Maximum">
            <summary>
            Gets or sets the maximal value of gauge.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugeObject.Value">
            <summary>
            Gets or sets the current value of gauge.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugeObject.Scale">
            <summary>
            Gets or sets scale of gauge.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugeObject.Pointer">
            <summary>
            Gets or sets pointer of gauge.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugeObject.Label">
            <summary>
            Gets or sets gauge label.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugeObject.Expression">
            <summary>
            Gets or sets an expression that determines the value of gauge object.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugeObject.Vertical">
            <summary>
            Gets a value that specifies is gauge vertical or not.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.GaugeObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.GaugeObject"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.GaugeObject.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.GaugeObject"/> class.
            </summary>
            <param name="minimum">Minimum value of gauge.</param>
            <param name="maximum">Maximum value of gauge.</param>
            <param name="value">Current value of gauge.</param>
        </member>
        <member name="M:FastReport.Gauge.GaugeObject.#ctor(System.Double,System.Double,System.Double,FastReport.Gauge.GaugeScale,FastReport.Gauge.GaugePointer)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.GaugeObject"/> class.
            </summary>
            <param name="minimum">Minimum value of gauge.</param>
            <param name="maximum">Maximum value of gauge.</param>
            <param name="value">Current value of gauge.</param>
            <param name="scale">Scale of gauge.</param>
            <param name="pointer">Pointer of gauge.</param>
        </member>
        <member name="M:FastReport.Gauge.GaugeObject.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.GaugeObject.GetData">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.GaugeObject.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.GaugeObject.Draw(FastReport.Utils.FRPaintEventArgs)">
            <summary>
            Draws the gauge.
            </summary>
            <param name="e">Draw event arguments.</param>
        </member>
        <member name="M:FastReport.Gauge.GaugeObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.GaugeObject.Clone">
            <summary>
            Clone Gauge Object
            </summary>
            <returns> clone of this object</returns>
        </member>
        <member name="T:FastReport.Gauge.GaugePointer">
            <summary>
            Represents a pointer of gauge.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugePointer.Parent">
            <summary>
            Gets or sets the parent gauge object.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugePointer.Fill">
            <summary>
            Gets or sets the color of a pointer.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugePointer.BorderWidth">
            <summary>
            Gets or sets the border width of a pointer.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugePointer.BorderColor">
            <summary>
            Gets or sets the border color of a pointer.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.GaugePointer.#ctor(FastReport.Gauge.GaugeObject)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.GaugePointer"/> class.
            </summary>
            <param name="parent">The parent gauge object.</param>
        </member>
        <member name="M:FastReport.Gauge.GaugePointer.Assign(FastReport.Gauge.GaugePointer)">
            <summary>
            Copies the contents of another GaugePointer.
            </summary>
            <param name="src">The GaugePointer instance to copy the contents from.</param>
        </member>
        <member name="M:FastReport.Gauge.GaugePointer.Draw(FastReport.Utils.FRPaintEventArgs)">
            <summary>
            Draws the gauge pointer.
            </summary>
            <param name="e">Draw event arguments.</param>
        </member>
        <member name="M:FastReport.Gauge.GaugePointer.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.Gauge.GaugePointer)">
            <summary>
            Serializes the gauge pointer.
            </summary>
            <param name="writer">Writer object.</param>
            <param name="prefix">Gauge pointer property name.</param>
            <param name="diff">Another GaugePointer to compare with.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="T:FastReport.Gauge.GaugeScale">
            <summary>
            Represents a scale of a gauge.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugeScale.MajorTicks">
            <summary>
            Gets or sets major ticks of scale.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugeScale.MinorTicks">
            <summary>
            Gets or sets minor ticks of scale.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugeScale.Parent">
            <summary>
            Gets or sets the parent gauge object.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugeScale.Font">
            <summary>
            Gets or sets the font of scale.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugeScale.TextFill">
            <summary>
            Gets or sets the scale font color
            </summary>
        </member>
        <member name="M:FastReport.Gauge.GaugeScale.#ctor(FastReport.Gauge.GaugeObject)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.GaugeScale"/> class.
            </summary>
            <param name="parent">The parent gauge object.</param>
        </member>
        <member name="M:FastReport.Gauge.GaugeScale.Assign(FastReport.Gauge.GaugeScale)">
            <summary>
            Copies the contents of another GaugeScale.
            </summary>
            <param name="src">The GaugeScale instance to copy the contents from.</param>
        </member>
        <member name="M:FastReport.Gauge.GaugeScale.Draw(FastReport.Utils.FRPaintEventArgs)">
            <summary>
            Draws the scale of gauge.
            </summary>
            <param name="e">Draw event arguments.</param>
        </member>
        <member name="M:FastReport.Gauge.GaugeScale.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.Gauge.GaugeScale)">
            <summary>
            Serializes the gauge scale.
            </summary>
            <param name="writer">Writer object.</param>
            <param name="prefix">Scale property name.</param>
            <param name="diff">Another GaugeScale to compare with.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="T:FastReport.Gauge.ScaleTicks">
            <summary>
            Represents a scale ticks.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.ScaleTicks.Length">
            <summary>
            Gets or sets the length of ticks.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.ScaleTicks.Width">
            <summary>
            Gets or sets the width of ticks.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.ScaleTicks.Color">
            <summary>
            Gets or sets the color of ticks.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.ScaleTicks.Count">
            <summary>
            Gets or sets the count of ticks
            </summary>
        </member>
        <member name="M:FastReport.Gauge.ScaleTicks.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.ScaleTicks"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.ScaleTicks.#ctor(System.Single,System.Int32,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.ScaleTicks"/> class.
            </summary>
            <param name="length">Ticks length.</param>
            <param name="width">Ticks width.</param>
            <param name="color">Ticks color.</param>
        </member>
        <member name="M:FastReport.Gauge.ScaleTicks.#ctor(System.Single,System.Int32,System.Drawing.Color,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.ScaleTicks"/> class.
            </summary>
            <param name="length">Ticks length.</param>
            <param name="width">Ticks width.</param>
            <param name="color">Ticks color.</param>
            <param name="count">Ticks count.</param>
        </member>
        <member name="M:FastReport.Gauge.ScaleTicks.Assign(FastReport.Gauge.ScaleTicks)">
            <summary>
            Copies the contents of another ScaleTicks.
            </summary>
            <param name="src">The ScaleTicks instance to copy the contents from.</param>
        </member>
        <member name="M:FastReport.Gauge.ScaleTicks.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.Gauge.ScaleTicks)">
            <summary>
            Serializes the scale ticks.
            </summary>
            <param name="writer">Writer object.</param>
            <param name="prefix">Scale ticks property name.</param>
            <param name="diff">Another ScaleTicks to compare with.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="T:FastReport.Gauge.Linear.LinearGauge">
            <summary>
            Represents a linear gauge.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Linear.LinearGauge.Inverted">
            <summary>
            Gets or sets the value that specifies inverted gauge or not.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Linear.LinearGauge.Label">
            <summary>
            Gets or sets gauge label.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Linear.LinearGauge.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.Linear.LinearGauge"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Linear.LinearGauge.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.Linear.LinearGauge.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.Linear.LinearGauge.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Gauge.Linear.LinearPointer">
            <summary>
            Represents a linear pointer.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Linear.LinearPointer.Height">
            <summary>
            Gets o sets the height of gauge pointer.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Linear.LinearPointer.Width">
            <summary>
            Gets or sets the width of a pointer.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Linear.LinearPointer.#ctor(FastReport.Gauge.GaugeObject)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.Linear.LinearPointer"/>
            </summary>
            <param name="parent">The parent gauge object.</param>
        </member>
        <member name="M:FastReport.Gauge.Linear.LinearPointer.Assign(FastReport.Gauge.GaugePointer)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.Linear.LinearPointer.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.Linear.LinearPointer.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.Gauge.GaugePointer)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Gauge.Linear.LinearScale">
            <summary>
            Represents a linear scale.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Linear.LinearScale.#ctor(FastReport.Gauge.GaugeObject)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.Linear.LinearScale"/> class.
            </summary>
            <param name="parent">The parent gauge object.</param>
        </member>
        <member name="M:FastReport.Gauge.Linear.LinearScale.Assign(FastReport.Gauge.GaugeScale)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.Linear.LinearScale.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.Linear.LinearScale.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.Gauge.GaugeScale)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Gauge.Radial.RadialGaugeType">
            <summary>
            Radial Gauge types
            </summary>
        </member>
        <member name="F:FastReport.Gauge.Radial.RadialGaugeType.Circle">
            <summary>
            Full sized gauge
            </summary>
        </member>
        <member name="F:FastReport.Gauge.Radial.RadialGaugeType.Semicircle">
            <summary>
            Half of the radial gauge
            </summary>
        </member>
        <member name="F:FastReport.Gauge.Radial.RadialGaugeType.Quadrant">
            <summary>
            Quarter of the radial gauge
            </summary>
        </member>
        <member name="T:FastReport.Gauge.Radial.RadialGaugePosition">
            <summary>
            Radial Gauge position types
            </summary>
        </member>
        <member name="F:FastReport.Gauge.Radial.RadialGaugePosition.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:FastReport.Gauge.Radial.RadialGaugePosition.Top">
            <summary>
            Top
            </summary>
        </member>
        <member name="F:FastReport.Gauge.Radial.RadialGaugePosition.Bottom">
            <summary>
            Bottom
            </summary>
        </member>
        <member name="F:FastReport.Gauge.Radial.RadialGaugePosition.Left">
            <summary>
            Left
            </summary>
        </member>
        <member name="F:FastReport.Gauge.Radial.RadialGaugePosition.Right">
            <summary>
            Right
            </summary>
        </member>
        <member name="T:FastReport.Gauge.Radial.RadialGauge">
            <summary>
            Represents a linear gauge.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Radial.RadialGauge.Width">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Gauge.Radial.RadialGauge.Height">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Gauge.Radial.RadialGauge.Center">
            <summary>
            Returns centr of the gauge
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Radial.RadialGauge.Radians">
            <summary>
            The number of radians in one degree
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Radial.RadialGauge.Type">
            <summary>
            Gets or sets the Radial Gauge type
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Radial.RadialGauge.Position">
            <summary>
            Gats or sets the Radial Gauge position. Doesn't work for Full Radial Gauge.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Radial.RadialGauge.SemicircleOffsetRatio">
            <summary>
            Gets or sets the semicircles offset
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Radial.RadialGauge.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.Radial.RadialGauge"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Radial.RadialGauge.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.Radial.RadialGauge.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.Radial.RadialGauge.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Gauge.Radial.RadialPointer">
            <summary>
            Represents a linear pointer.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Radial.RadialPointer.GradientAutoRotate">
            <summary>
            Gets or sets the value, indicating that gradient should be rotated automatically
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Radial.RadialPointer.#ctor(FastReport.Gauge.GaugeObject,FastReport.Gauge.Radial.RadialScale)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.Radial.RadialPointer"/>
            </summary>
            <param name="parent">The parent gauge object.</param>
            <param name="scale">The scale object.</param>
        </member>
        <member name="M:FastReport.Gauge.Radial.RadialPointer.Assign(FastReport.Gauge.GaugePointer)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.Radial.RadialPointer.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.Radial.RadialPointer.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.Gauge.GaugePointer)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Gauge.Radial.RadialScale">
            <summary>
            Represents a linear scale.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Radial.RadialScale.#ctor(FastReport.Gauge.Radial.RadialGauge)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.Radial.RadialScale"/> class.
            </summary>
            <param name="parent">The parent gauge object.</param>
        </member>
        <member name="M:FastReport.Gauge.Radial.RadialScale.Assign(FastReport.Gauge.GaugeScale)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.Radial.RadialScale.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.Radial.RadialScale.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.Gauge.GaugeScale)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Gauge.Simple.Progress.SimpleProgressGauge">
            <summary>
            Represents a simple progress gauge.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Simple.Progress.SimpleProgressGauge.Label">
            <summary>
            Gets or sets gauge label.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Simple.Progress.SimpleProgressGauge.Scale">
            <summary>
            Gets scale. Should be disabled for SimpleProgressGauge
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Simple.Progress.SimpleProgressGauge.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.Simple.SimpleGauge"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Simple.Progress.SimpleProgressGauge.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Gauge.Simple.Progress.SimpleProgressLabel">
            <inheritdoc />
        </member>
        <member name="P:FastReport.Gauge.Simple.Progress.SimpleProgressLabel.Decimals">
            <summary>
            Gets or sets the number of fractional digits
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Simple.Progress.SimpleProgressLabel.Text">
            <inheritdoc />
        </member>
        <member name="M:FastReport.Gauge.Simple.Progress.SimpleProgressLabel.#ctor(FastReport.Gauge.GaugeObject)">
            <inheritdoc />
        </member>
        <member name="M:FastReport.Gauge.Simple.Progress.SimpleProgressLabel.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc />
        </member>
        <member name="T:FastReport.Gauge.Simple.Progress.SimpleProgressPointerType">
            <summary>
            SimpleProgressGauge pointer types
            </summary>
        </member>
        <member name="F:FastReport.Gauge.Simple.Progress.SimpleProgressPointerType.Full">
            <summary>
            Full sized pointer
            </summary>
        </member>
        <member name="F:FastReport.Gauge.Simple.Progress.SimpleProgressPointerType.Small">
            <summary>
            Small pointer
            </summary>
        </member>
        <member name="T:FastReport.Gauge.Simple.Progress.SimpleProgressPointer">
            <inheritdoc />
        </member>
        <member name="P:FastReport.Gauge.Simple.Progress.SimpleProgressPointer.Type">
            <summary>
            Gets or sets the pointer type
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Simple.Progress.SimpleProgressPointer.SmallPointerWidthRatio">
            <summary>
            Gets or sets the small pointer width ratio
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Simple.Progress.SimpleProgressPointer.#ctor(FastReport.Gauge.GaugeObject)">
            <inheritdoc />
        </member>
        <member name="M:FastReport.Gauge.Simple.Progress.SimpleProgressPointer.Assign(FastReport.Gauge.GaugePointer)">
            <inheritdoc />
        </member>
        <member name="M:FastReport.Gauge.Simple.Progress.SimpleProgressPointer.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.Gauge.GaugePointer)">
            <inheritdoc />
        </member>
        <member name="T:FastReport.Gauge.Simple.SimpleGauge">
            <summary>
            Represents a simple gauge.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Simple.SimpleGauge.Label">
            <summary>
            Gets or sets gauge label.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Simple.SimpleGauge.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.Simple.SimpleGauge"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Simple.SimpleGauge.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Gauge.Simple.SimplePointer">
            <summary>
            Represents a simple pointer.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Simple.SimplePointer.Left">
            <summary>
            Gets o sets the Left offset of gauge pointer.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Simple.SimplePointer.Top">
            <summary>
            Gets o sets the Top offset of gauge pointer.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Simple.SimplePointer.Height">
            <summary>
            Gets o sets the height of gauge pointer.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Simple.SimplePointer.Width">
            <summary>
            Gets or sets the width of a pointer.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Simple.SimplePointer.PointerRatio">
            <summary>
            Gets or sets the pointer ratio.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Simple.SimplePointer.HorizontalOffset">
            <summary>
            Gets or sets the pointer horizontal offset (cm).
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Simple.SimplePointer.#ctor(FastReport.Gauge.GaugeObject)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.Simple.SimplePointer"/> class.
            </summary>
            <param name="parent">The parent gauge object.</param>
        </member>
        <member name="M:FastReport.Gauge.Simple.SimplePointer.Assign(FastReport.Gauge.GaugePointer)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.Simple.SimplePointer.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.Simple.SimplePointer.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.Gauge.GaugePointer)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Gauge.Simple.SimpleScale">
            <summary>
            Represents a simple scale.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Simple.SimpleScale.FirstSubScale">
            <summary>
            Gets or sets the first subscale (top or left).
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Simple.SimpleScale.SecondSubScale">
            <summary>
            Gets or sets the second subscale (right or bottom).
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Simple.SimpleScale.#ctor(FastReport.Gauge.GaugeObject)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.Simple.SimpleScale"/> class.
            </summary>
            <param name="parent">The parent gauge object.</param>
        </member>
        <member name="M:FastReport.Gauge.Simple.SimpleScale.Assign(FastReport.Gauge.GaugeScale)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.Simple.SimpleScale.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.Simple.SimpleScale.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.Gauge.GaugeScale)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Gauge.Simple.SimpleSubScale">
            <summary>
            Represent the subscale of simple scale.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Simple.SimpleSubScale.Enabled">
            <summary>
            Gets or sets a value that specifies enabled subscale or not.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Simple.SimpleSubScale.ShowCaption">
            <summary>
            Gets or sets a value that specifies show caption or not.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Simple.SimpleSubScale.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.Simple.SimpleSubScale"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Simple.SimpleSubScale.Assign(FastReport.Gauge.Simple.SimpleSubScale)">
            <summary>
            Copies the contents of another SimpleSubScale.
            </summary>
            <param name="src">The SimpleSubScale instance to copy the contents from.</param>
        </member>
        <member name="M:FastReport.Gauge.Simple.SimpleSubScale.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.Gauge.Simple.SimpleSubScale)">
            <summary>
            Serializes the SimpleSubScale.
            </summary>
            <param name="writer">Writer object.</param>
            <param name="prefix">SimpleSubScale property name.</param>
            <param name="diff">Another SimpleSubScale to compare with.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="T:FastReport.GroupFooterBand">
            <summary>
            Represents a group footer band.
            </summary>
        </member>
        <member name="T:FastReport.SortOrder">
            <summary>
            Specifies a sort order.
            </summary>
            <remarks>
            This enumeration is used in the group header and in the "Matrix" object.
            </remarks>
        </member>
        <member name="F:FastReport.SortOrder.None">
            <summary>
            Specifies no sort (natural order).
            </summary>
        </member>
        <member name="F:FastReport.SortOrder.Ascending">
            <summary>
            Specifies an ascending sort order.
            </summary>
        </member>
        <member name="F:FastReport.SortOrder.Descending">
            <summary>
            Specifies a descending sort order.
            </summary>
        </member>
        <member name="T:FastReport.GroupHeaderBand">
            <summary>
            Represents a group header band.
            </summary>
            <remarks>
            A simple group consists of one <b>GroupHeaderBand</b> and the <b>DataBand</b> that is set 
            to the <see cref="P:FastReport.GroupHeaderBand.Data"/> property. To create the nested groups, use the <see cref="P:FastReport.GroupHeaderBand.NestedGroup"/> property.
            <note type="caution">
            Only the last nested group can have data band.
            </note>
            <para/>Use the <see cref="P:FastReport.GroupHeaderBand.Condition"/> property to set the group condition. The <see cref="P:FastReport.GroupHeaderBand.SortOrder"/>
            property can be used to set the sort order for group's data rows. You can also use the <b>Sort</b>
            property of the group's <b>DataBand</b> to specify additional sort.
            </remarks>
            <example>This example shows how to create nested groups.
            <code>
            ReportPage page = report.Pages[0] as ReportPage;
            
            // create the main group
            GroupHeaderBand mainGroup = new GroupHeaderBand();
            mainGroup.Height = Units.Millimeters * 10;
            mainGroup.Name = "MainGroup";
            mainGroup.Condition = "[Orders.CustomerName]";
            // add a group to the page
            page.Bands.Add(mainGroup);
            
            // create the nested group
            GroupHeaderBand nestedGroup = new GroupHeaderBand();
            nestedGroup.Height = Units.Millimeters * 10;
            nestedGroup.Name = "NestedGroup";
            nestedGroup.Condition = "[Orders.OrderDate]";
            // add it to the main group
            mainGroup.NestedGroup = nestedGroup;
            
            // create a data band
            DataBand dataBand = new DataBand();
            dataBand.Height = Units.Millimeters * 10;
            dataBand.Name = "GroupData";
            dataBand.DataSource = report.GetDataSource("Orders");
            // connect the databand to the nested group
            nestedGroup.Data = dataBand;
            </code>
            </example>
        </member>
        <member name="P:FastReport.GroupHeaderBand.NestedGroup">
            <summary>
            Gets or sets a nested group.
            </summary>
            <remarks>
            Use this property to create nested groups.
            <note type="caution">
            Only the last nested group can have data band.
            </note>
            </remarks>
            <example>
            This example demonstrates how to create a group with nested group.
            <code>
            ReportPage page;
            GroupHeaderBand group = new GroupHeaderBand();
            group.NestedGroup = new GroupHeaderBand();
            group.NestedGroup.Data = new DataBand();
            page.Bands.Add(group);
            </code>
            </example>
        </member>
        <member name="P:FastReport.GroupHeaderBand.Data">
            <summary>
            Gets or sets the group data band.
            </summary>
            <remarks>
            Use this property to add a data band to a group. Note: only the last nested group can have Data band.
            </remarks>
            <example>
            This example demonstrates how to add a data band to a group.
            <code>
            ReportPage page;
            GroupHeaderBand group = new GroupHeaderBand();
            group.Data = new DataBand();
            page.Bands.Add(group);
            </code>
            </example>
        </member>
        <member name="P:FastReport.GroupHeaderBand.GroupFooter">
            <summary>
            Gets or sets a group footer.
            </summary>
        </member>
        <member name="P:FastReport.GroupHeaderBand.Header">
            <summary>
            Gets or sets a header band.
            </summary>
        </member>
        <member name="P:FastReport.GroupHeaderBand.Footer">
            <summary>
            Gets or sets a footer band.
            </summary>
            <remarks>
            To access a group footer band, use the <see cref="P:FastReport.GroupHeaderBand.GroupFooter"/> property.
            </remarks>
        </member>
        <member name="P:FastReport.GroupHeaderBand.Condition">
            <summary>
            Gets or sets the group condition.
            </summary>
            <remarks>
            This property can contain any valid expression. When running a report, this expression is calculated 
            for each data row. When the value of this condition is changed, FastReport starts a new group.
            </remarks>
        </member>
        <member name="P:FastReport.GroupHeaderBand.SortOrder">
            <summary>
            Gets or sets the sort order.
            </summary>
            <remarks>
            FastReport can sort data rows automatically using the <see cref="P:FastReport.GroupHeaderBand.Condition"/> value.
            </remarks>
        </member>
        <member name="P:FastReport.GroupHeaderBand.KeepTogether">
            <summary>
            Gets or sets a value indicating that the group should be printed together on one page.
            </summary>
        </member>
        <member name="P:FastReport.GroupHeaderBand.ResetPageNumber">
            <summary>
            Gets or sets a value that determines whether to reset the page numbers when this group starts print.
            </summary>
            <remarks>
            Typically you should set the <see cref="P:FastReport.BandBase.StartNewPage"/> property to <b>true</b> as well.
            </remarks>
        </member>
        <member name="M:FastReport.GroupHeaderBand.GetChildObjects(FastReport.ObjectCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.GroupHeaderBand.CanContain(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.GroupHeaderBand.AddChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.GroupHeaderBand.RemoveChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.GroupHeaderBand.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.GroupHeaderBand.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.GroupHeaderBand.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.GroupHeaderBand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.GroupHeaderBand"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.HeaderFooterBandBase">
            <summary>
            Base class for headers and footers which support the "Keep With Data" and "Repeat on Every Page" features.
            </summary>
        </member>
        <member name="P:FastReport.HeaderFooterBandBase.KeepWithData">
            <summary>
            Gets or sets a value indicating that the band should be printed together with data band.
            </summary>
        </member>
        <member name="P:FastReport.HeaderFooterBandBase.RepeatOnEveryPage">
            <summary>
            Gets or sets a value that determines whether to repeat this band on every page.
            </summary>
            <remarks>
            When band is repeated, its <see cref="P:FastReport.BandBase.Repeated"/> property is set to <b>true</b>. You can use
            it to show any additional information on the band. To do this,
            use the <see cref="P:FastReport.ReportComponentBase.PrintOn"/> property which
            can be set to "Rpeeated". In that case the object will be printed
            only on the repeated band.
            </remarks>
        </member>
        <member name="M:FastReport.HeaderFooterBandBase.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HeaderFooterBandBase.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.HighlightCondition">
            <summary>
            Represents a single highlight condition used by the <see cref="P:FastReport.TextObject.Highlight"/> property
            of the <see cref="T:FastReport.TextObject"/>.
            </summary>
        </member>
        <member name="P:FastReport.HighlightCondition.Expression">
            <summary>
            Gets or sets a highlight expression.
            </summary>
            <remarks>
            This property can contain any valid boolean expression. If value of this expression is <b>true</b>,
            the fill and font settings will be applied to the <b>TextObject</b>.
            </remarks>
        </member>
        <member name="P:FastReport.HighlightCondition.Visible">
            <summary>
            Gets or sets the visibility flag.
            </summary>
            <remarks>
            If this property is set to <b>false</b>, the Text object will be hidden if the
            condition is met.
            </remarks>
        </member>
        <member name="M:FastReport.HighlightCondition.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HighlightCondition.Assign(FastReport.StyleBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HighlightCondition.Clone">
            <summary>
            Creates exact copy of this condition.
            </summary>
            <returns>A copy of this condition.</returns>
        </member>
        <member name="M:FastReport.HighlightCondition.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HighlightCondition.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HighlightCondition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.HighlightCondition"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.HyperlinkKind">
            <summary>
            Specifies the hyperlink type.
            </summary>
        </member>
        <member name="F:FastReport.HyperlinkKind.URL">
            <summary>
            Specifies the hyperlink to external URL such as "http://www.fast-report.com", "mailto:"
            or any other system command.
            </summary>
        </member>
        <member name="F:FastReport.HyperlinkKind.PageNumber">
            <summary>
            Specifies hyperlink to a given page number.
            </summary>
        </member>
        <member name="F:FastReport.HyperlinkKind.Bookmark">
            <summary>
            Specifies hyperlink to a bookmark.
            </summary>
        </member>
        <member name="F:FastReport.HyperlinkKind.DetailReport">
            <summary>
            Specifies hyperlink to external report. This report will be run when you follow the hyperlink.
            </summary>
        </member>
        <member name="F:FastReport.HyperlinkKind.DetailPage">
            <summary>
            Specifies hyperlink to this report's page. The page will be run when you follow the hyperlink.
            </summary>
        </member>
        <member name="F:FastReport.HyperlinkKind.Custom">
            <summary>
            Specifies a custom hyperlink. No actions performed when you click it, you should handle it
            in the object's Click event handler.
            </summary>
        </member>
        <member name="T:FastReport.Hyperlink">
            <summary>
            This class contains a hyperlink settings.
            </summary>
        </member>
        <member name="P:FastReport.Hyperlink.Kind">
            <summary>
            Gets or sets the kind of hyperlink.
            </summary>
            <remarks>
            <para>Use the <b>Kind</b> property to define hyperlink's behavior. 
            The hyperlink may be used to navigate to the external url, the page number, 
            the bookmark defined by other report object, the external report, the other page of this report, 
            and custom hyperlink.</para>
            </remarks>
        </member>
        <member name="P:FastReport.Hyperlink.Expression">
            <summary>
            Gets or sets the expression which value will be used for navigation.
            </summary>
            <remarks>
            <para>Normally you should set the <b>Expression</b> property to
            any valid expression that will be calculated when this object is about to print.
            The value of an expression will be used for navigation.</para>
            <para>If you want to navigate to some fixed data (URL or page number, for example),
            use the <see cref="P:FastReport.Hyperlink.Value"/> property instead.</para>
            </remarks>
        </member>
        <member name="P:FastReport.Hyperlink.Value">
            <summary>
            Gets or sets a value that will be used for navigation.
            </summary>
            <remarks>
            Use this property to specify the fixed data (such as URL, page number etc). If you want to
            navigate to some dynamically calculated value, use the <see cref="P:FastReport.Hyperlink.Expression"/> property instead.
            </remarks>
        </member>
        <member name="P:FastReport.Hyperlink.OpenLinkInNewTab">
            <summary>
            Gets or sets a value that indicate should be links open in new tab or not.
            </summary>
            <remarks>
            It works for HTML-export only!
            </remarks>
        </member>
        <member name="P:FastReport.Hyperlink.DetailReportName">
            <summary>
            Gets or sets an external report file name.
            </summary>
            <remarks>
            <para>Use this property if <see cref="P:FastReport.Hyperlink.Kind"/> is set to <b>DetailReport</b>. </para>
            <para>When you follow the hyperlink, this report will be loaded and run. 
            You also may specify the report's parameter in the <see cref="P:FastReport.Hyperlink.ReportParameter"/> property.</para>
            </remarks>
        </member>
        <member name="P:FastReport.Hyperlink.DetailPageName">
            <summary>
            Gets or sets the name of this report's page.
            </summary>
            <remarks>
            <para>Use this property if <see cref="P:FastReport.Hyperlink.Kind"/> is set to <b>DetailPage</b>. </para>
            <para>When you follow the hyperlink, the specified page will be executed. It may contain the
            detailed report. You also may specify the report's parameter in the 
            <see cref="P:FastReport.Hyperlink.ReportParameter"/> property.</para>
            </remarks>
        </member>
        <member name="P:FastReport.Hyperlink.ReportParameter">
            <summary>
            Gets or sets a parameter's name that will be set to hyperlink's value.
            </summary>
            <remarks>
            Use this property if <see cref="P:FastReport.Hyperlink.Kind"/> is set to <b>DetailReport</b> or <b>DetailPage</b>.
            <para>If you want to pass the hyperlink's value to the report's parameter, specify the
            parameter name in this property. This parameter will be set to the hyperlink's value 
            before running a report. It may be used to display detailed information about clicked item.</para>
            <para>It is also possible to pass multiple values to several parameters. If hyperlink's value
            contains separators (the separator string can be set in the <see cref="P:FastReport.Hyperlink.ValuesSeparator"/>
            property), it will be splitted to several values. That values will be passed to nested parameters
            of the <b>ReportParameter</b> (you should create nested parameters by youself). For example, you have
            the <b>ReportParameter</b> called "SelectedValue" which has two nested parameters: the first one is 
            "Employee" and the second is "Category". The hyperlink's value is "Andrew Fuller;Beverages". 
            It will be splitted to two values: "Andrew Fuller" and "Beverages". The first nested parameter 
            of the <b>ReportParameter</b> that is "Employee" in our case will be set to "Andrew Fuller";
            the second nested parameter ("Category") will be set to "Beverages".</para>
            <para>Note: when you create a parameter in the detailed report, don't forget to set 
            its <b>DataType</b> property. It is used to convert string values to actual data type.
            </para>
            </remarks>
        </member>
        <member name="P:FastReport.Hyperlink.ValuesSeparator">
            <summary>
            Gets or sets a string that will be used as a separator to pass several values 
            to the external report parameters.
            </summary>
        </member>
        <member name="M:FastReport.Hyperlink.Assign(FastReport.Hyperlink)">
            <summary>
            Assigns values from another source.
            </summary>
            <param name="source">Source to assign from.</param>
        </member>
        <member name="T:FastReport.IFRSerializable">
            <summary>
            Provides the serialize/deserialize functionality.
            </summary>
        </member>
        <member name="M:FastReport.IFRSerializable.Serialize(FastReport.Utils.FRWriter)">
            <summary>
            Serializes the object.
            </summary>
            <param name="writer">Writer object.</param>
        </member>
        <member name="M:FastReport.IFRSerializable.Deserialize(FastReport.Utils.FRReader)">
            <summary>
            Deserializes the object.
            </summary>
            <param name="reader">Reader object.</param>
        </member>
        <member name="T:FastReport.Import.ComponentsFactory">
            <summary>
            The components factory.
            </summary>
        </member>
        <member name="M:FastReport.Import.ComponentsFactory.CreateReportPage(FastReport.Report)">
            <summary>
            Creates a ReportPage instance in the specified Report.
            </summary>
            <param name="report">The Report instance.</param>
            <returns>The ReportPage instance.</returns>
        </member>
        <member name="M:FastReport.Import.ComponentsFactory.CreateReportTitleBand(FastReport.ReportPage)">
            <summary>
            Creates a ReportTitleBand instance in the specified ReportPage.
            </summary>
            <param name="page">The ReportPage instance.</param>
            <returns>The ReportTitleBand instance.</returns>
        </member>
        <member name="M:FastReport.Import.ComponentsFactory.CreateReportSummaryBand(FastReport.ReportPage)">
            <summary>
            Creates a ReportSummaryBand instance in the specified ReportPage.
            </summary>
            <param name="page">The ReportPage instance.</param>
            <returns>The ReportSummaryBand instance.</returns>
        </member>
        <member name="M:FastReport.Import.ComponentsFactory.CreatePageHeaderBand(FastReport.ReportPage)">
            <summary>
            Creates a PageHeaderBand instance in the specified ReportPage.
            </summary>
            <param name="page">The ReportPage instance.</param>
            <returns>The PageHeaderBand instance.</returns>
        </member>
        <member name="M:FastReport.Import.ComponentsFactory.CreatePageFooterBand(FastReport.ReportPage)">
            <summary>
            Creates a PageFooterBand instance in the specified ReportPage.
            </summary>
            <param name="page">The ReportPage instance.</param>
            <returns>The PageFooterBand instance.</returns>
        </member>
        <member name="M:FastReport.Import.ComponentsFactory.CreateColumnHeaderBand(FastReport.ReportPage)">
            <summary>
            Creates a ColumnHeaderBand instance in the specified ReportPage.
            </summary>
            <param name="page">The ReportPage instance.</param>
            <returns>The ColumnHeaderBand instance.</returns>
        </member>
        <member name="M:FastReport.Import.ComponentsFactory.CreateColumnFooterBand(FastReport.ReportPage)">
            <summary>
            Creates a ColumnFooterBand instance in the specified ReportPage.
            </summary>
            <param name="page">The ReportPage instance.</param>
            <returns>The ColumnFooterBand instance.</returns>
        </member>
        <member name="M:FastReport.Import.ComponentsFactory.CreateDataHeaderBand(FastReport.DataBand)">
            <summary>
            Creates a DataHeaderBand instance in the specified DataBand.
            </summary>
            <param name="data">The DataBand instance.</param>
            <returns>The DataHeaderBand instance.</returns>
        </member>
        <member name="M:FastReport.Import.ComponentsFactory.CreateDataBand(FastReport.ReportPage)">
            <summary>
            Creates a DataBand instance in the specified ReportPage.
            </summary>
            <param name="page">The ReportPage instance.</param>
            <returns>The DataBand instance.</returns>
        </member>
        <member name="M:FastReport.Import.ComponentsFactory.CreateDataFooterBand(FastReport.DataBand)">
            <summary>
            Creates a DataFooterBand instance in the specified DataBand.
            </summary>
            <param name="data">The DataBand instance.</param>
            <returns>The DataFooterBand instance.</returns>
        </member>
        <member name="M:FastReport.Import.ComponentsFactory.CreateGroupHeaderBand(FastReport.ReportPage)">
            <summary>
            Creates a GroupHeaderBand instance in the specified ReportPage.
            </summary>
            <param name="page">The ReportPage instance.</param>
            <returns>The GroupHeaderBand instance.</returns>
        </member>
        <member name="M:FastReport.Import.ComponentsFactory.CreateGroupFooterBand(FastReport.ReportPage)">
            <summary>
            Creates a GroupFooterBand instance in the cpecified ReportPage.
            </summary>
            <param name="page">The ReportPage instance.</param>
            <returns>The GroupFooterBand instance.</returns>
        </member>
        <member name="M:FastReport.Import.ComponentsFactory.CreateChildBand(FastReport.BandBase)">
            <summary>
            Creates a ChildBand instance in the specified BandBase.
            </summary>
            <param name="parent">The BandBase instance.</param>
            <returns>The ChildBand instance.</returns>
        </member>
        <member name="M:FastReport.Import.ComponentsFactory.CreateOverlayBand(FastReport.ReportPage)">
            <summary>
            Creates an OverlayBand in the specified ReportPage.
            </summary>
            <param name="page">The ReportPage instance.</param>
            <returns>The OverlayBand instance.</returns>
        </member>
        <member name="M:FastReport.Import.ComponentsFactory.CreateStyle(System.String,FastReport.Report)">
            <summary>
            Creates a Style instance with specified name.
            </summary>
            <param name="name">The name of the Style instance.</param>
            <param name="report">The report to add style to.</param>
            <returns>The Style instance.</returns>
        </member>
        <member name="M:FastReport.Import.ComponentsFactory.CreateTextObject(System.String,FastReport.Base)">
            <summary>
            Creates a TextObject instance with specified name and parent.
            </summary>
            <param name="name">The name of the TextObject instance.</param>
            <param name="parent">The parent of the TextObject instance.</param>
            <returns>The TextObject instance.</returns>
        </member>
        <member name="M:FastReport.Import.ComponentsFactory.CreatePictureObject(System.String,FastReport.Base)">
            <summary>
            Creates a PictureObject instance with specified name and parent.
            </summary>
            <param name="name">The name of the PictureObject instance.</param>
            <param name="parent">The parent of the PictureObject instance.</param>
            <returns>The PictureObject instance.</returns>
        </member>
        <member name="M:FastReport.Import.ComponentsFactory.CreateLineObject(System.String,FastReport.Base)">
            <summary>
            Creates a LineObject instance with specified name and parent.
            </summary>
            <param name="name">The name of the LineObject instance.</param>
            <param name="parent">The parent of the LineObject instance.</param>
            <returns>The LineObject instance.</returns>
        </member>
        <member name="M:FastReport.Import.ComponentsFactory.CreateShapeObject(System.String,FastReport.Base)">
            <summary>
            Creates a ShapeObject instance with specified name and parent.
            </summary>
            <param name="name">The name of the ShapeObject instance.</param>
            <param name="parent">The parent of the ShapeObject instance.</param>
            <returns>The ShapeObject instance.</returns>
        </member>
        <member name="M:FastReport.Import.ComponentsFactory.CreatePolyLineObject(System.String,FastReport.Base)">
            <summary>
            Creates a PolyLineObject instance with specified name and parent.
            </summary>
            <param name="name">The name of the PolyLineObject instance.</param>
            <param name="parent">The parent of the PolyLineObject instance.</param>
            <returns>The PolyLineObject instance.</returns>
        </member>
        <member name="M:FastReport.Import.ComponentsFactory.CreatePolygonObject(System.String,FastReport.Base)">
            <summary>
            Creates a PolygonObject instance with specified name and parent.
            </summary>
            <param name="name">The name of the PolygonObject instance.</param>
            <param name="parent">The parent of the PolygonObject instance.</param>
            <returns>The PolygonObject instance.</returns>
        </member>
        <member name="M:FastReport.Import.ComponentsFactory.CreateSubreportObject(System.String,FastReport.Base)">
            <summary>
            Creates a SubreportObject instance with specified name and parent.
            </summary>
            <param name="name">The name of the SubreportObject instance.</param>
            <param name="parent">The parent of the SubreportObject instance.</param>
            <returns>The SubreportObject instance.</returns>
        </member>
        <member name="M:FastReport.Import.ComponentsFactory.CreateContainerObject(System.String,FastReport.Base)">
            <summary>
            Creates a ContainerObject instance with specified name and parent.
            </summary>
            <param name="name">The name of the ContainerObject instance.</param>
            <param name="parent">The parent of the ContainerObject instance.</param>
            <returns>The ContainerObject instance.</returns>
        </member>
        <member name="M:FastReport.Import.ComponentsFactory.CreateCheckBoxObject(System.String,FastReport.Base)">
            <summary>
            Creates a CheckBoxObject instance with specified name and parent.
            </summary>
            <param name="name">The name of the CheckBoxObject instance.</param>
            <param name="parent">The parent of the CheckBoxObject instance.</param>
            <returns>The CheckBoxObject instance.</returns>
        </member>
        <member name="M:FastReport.Import.ComponentsFactory.CreateHtmlObject(System.String,FastReport.Base)">
            <summary>
            Creates a HtmlObject instance with specified name and parent.
            </summary>
            <param name="name">The name of the HtmlObject instance.</param>
            <param name="parent">The parent of the HtmlObject instance.</param>
            <returns>The HtmlObject instance.</returns>
        </member>
        <member name="M:FastReport.Import.ComponentsFactory.CreateTableObject(System.String,FastReport.Base)">
            <summary>
            Creates a TableObject instance with specified name and parent.
            </summary>
            <param name="name">The name of the TableObject instance.</param>
            <param name="parent">The parent of the TableObject instance.</param>
            <returns>The TableObject instance.</returns>
        </member>
        <member name="M:FastReport.Import.ComponentsFactory.CreateMatrixObject(System.String,FastReport.Base)">
            <summary>
            Creates a MatrixObject instance with specified name and parent.
            </summary>
            <param name="name">The name of the MatrixObject instance.</param>
            <param name="parent">The parent of the MatrixObject instance.</param>
            <returns>The MatrixObject instance.</returns>
        </member>
        <member name="M:FastReport.Import.ComponentsFactory.CreateBarcodeObject(System.String,FastReport.Base)">
            <summary>
            Creates a BarcodeObject instance with specified name and parent.
            </summary>
            <param name="name">The name of the BarcodeObject instance.</param>
            <param name="parent">The parent of the BarcodeObject instance.</param>
            <returns>The BarcodeObject instance.</returns>
        </member>
        <member name="M:FastReport.Import.ComponentsFactory.CreateZipCodeObject(System.String,FastReport.Base)">
            <summary>
            Creates a ZipCodeObject instance with specified name and parent.
            </summary>
            <param name="name">The name of the ZipCodeObject instance.</param>
            <param name="parent">The parent of the ZipCodeObject instance.</param>
            <returns>The ZipCodeObject instance.</returns>
        </member>
        <member name="M:FastReport.Import.ComponentsFactory.CreateCellularTextObject(System.String,FastReport.Base)">
            <summary>
            Creates a CellularTextObject instance with specified name and parent.
            </summary>
            <param name="name">The name of the CellularTextObject instance.</param>
            <param name="parent">The parent ot the CellularTextObject instance.</param>
            <returns>The CellularTextObject instance.</returns>
        </member>
        <member name="M:FastReport.Import.ComponentsFactory.CreateLinearGauge(System.String,FastReport.Base)">
            <summary>
            Creates a LinearGauge instance with specified name and parent.
            </summary>
            <param name="name">The name of the LinearGauge instance.</param>
            <param name="parent">The parent of the LinearGauge instance.</param>
            <returns>The LinearGauge instance.</returns>
        </member>
        <member name="M:FastReport.Import.ComponentsFactory.CreateSimpleGauge(System.String,FastReport.Base)">
            <summary>
            Creates a SimpleGauge instance with specified name and parent.
            </summary>
            <param name="name">The name of the SimpleGauge instance.</param>
            <param name="parent">The parent of the SimpleGauge instance.</param>
            <returns>The SimpleGauge instance.</returns>
        </member>
        <member name="T:FastReport.Import.DevExpress.DevExpressImport">
            <summary>
            Represents the DevExpess import plugin.
            </summary>
        </member>
        <member name="M:FastReport.Import.DevExpress.DevExpressImport.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Import.DevExpress.DevExpressImport"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Import.DevExpress.UnitsConverter">
            <summary>
            The DevExpress units converter.
            </summary>
        </member>
        <member name="M:FastReport.Import.DevExpress.UnitsConverter.SizeFToPixels(System.String)">
            <summary>
            Converts SizeF to pixels.
            </summary>
            <param name="str">SizeF value as string.</param>
            <returns>The value in pixels.</returns>
        </member>
        <member name="M:FastReport.Import.DevExpress.UnitsConverter.SizeFToPixelsFont(System.String)">
            <summary>
            Converts SizeF to pixels.
            </summary>
            <param name="str">SizeF value as string.</param>
            <returns>The value in pixels.</returns>
            <remarks>
            Use this method for fonts, because font size is not stored as multiplied by dpi
            </remarks>
        </member>
        <member name="M:FastReport.Import.DevExpress.UnitsConverter.ConvertBool(System.String)">
            <summary>
            Converts value to Boolean.
            </summary>
            <param name="str">Boolen value as string.</param>
        </member>
        <member name="M:FastReport.Import.DevExpress.UnitsConverter.ConvertColor(System.String)">
            <summary>
            Converts DevExpress Color.
            </summary>
            <param name="str">The DevExpress Color value as string.</param>
            <returns>The Color value.</returns>
        </member>
        <member name="M:FastReport.Import.DevExpress.UnitsConverter.ConvertBackColor(System.String)">
            <summary>
            Converts DevExpress BackColor.
            </summary>
            <param name="str">The DevExpress BackColor value as string.</param>
            <returns>The Color value.</returns>
        </member>
        <member name="M:FastReport.Import.DevExpress.UnitsConverter.ConvertBorderDashStyle(System.String)">
            <summary>
            Converts the DevExpress BorderDashStyle to LineStyle.
            </summary>
            <param name="borderDashStyle">The DevExpress BorderDashStyle value.</param>
            <returns>The LineStyle value.</returns>
        </member>
        <member name="M:FastReport.Import.DevExpress.UnitsConverter.ConvertLineStyle(System.String)">
            <summary>
            Converts the DevExpress LineStyle to LineStyle.
            </summary>
            <param name="lineStyle">The DevExpress LineStyle value.</param>
            <returns>The LineStyle value.</returns>
        </member>
        <member name="M:FastReport.Import.DevExpress.UnitsConverter.ConvertTextAlignmentToHorzAlign(System.String)">
            <summary>
            Converts the DevExpress TextAlignment to HorzAlignment.
            </summary>
            <param name="textAlignment">The DevExpress TextAlignment value.</param>
            <returns>The HorzAlign value.</returns>
        </member>
        <member name="M:FastReport.Import.DevExpress.UnitsConverter.ConvertTextAlignmentToVertAlign(System.String)">
            <summary>
            Converts the DevExpress TextAlignment to VertAlignment.
            </summary>
            <param name="textAlignment">The DevExpress TextAlignment value.</param>
            <returns>The VertAlign value.</returns>
        </member>
        <member name="M:FastReport.Import.DevExpress.UnitsConverter.ConvertImageSizeMode(System.String)">
            <summary>
            Converts the DevExpress ImageSizeMode to PictureBoxSizeMode.
            </summary>
            <param name="sizeMode">The ImageSizeMode value as string.</param>
            <returns>The PictureBoxSizeMode value.</returns>
        </member>
        <member name="M:FastReport.Import.DevExpress.UnitsConverter.ConvertShape(System.String)">
            <summary>
            Converts the DevExpress Shape to ShapeKind.
            </summary>
            <param name="shape">The DevExpress Shape value as string.</param>
            <returns>The ShapeKind value.</returns>
        </member>
        <member name="M:FastReport.Import.DevExpress.UnitsConverter.ConvertBarcodeSymbology(System.String,FastReport.Barcode.BarcodeObject)">
            <summary>
            Converts the DevExpress Barcode.Symbology to Barcode.Barcode.
            </summary>
            <param name="symbology">The DevExpress Barcode.Symbology value as string.</param>
            <param name="barcode">The BarcodeObject instance.</param>
        </member>
        <member name="M:FastReport.Import.DevExpress.UnitsConverter.ConvertBorderSides(System.String,FastReport.Border)">
            <summary>
            Converts the DevExpress border sides to FastReport border sides
            </summary>
            <param name="sides">The DevExpress Barcode.Symbology value as string.</param>
            <param name="border">The BarcodeObject instance.</param>
        </member>
        <member name="T:FastReport.Import.ImportBase">
            <summary>
            Base class for all import plugins.
            </summary>
        </member>
        <member name="P:FastReport.Import.ImportBase.Name">
            <summary>
            Gets or sets the name of plugin.
            </summary>
        </member>
        <member name="P:FastReport.Import.ImportBase.Report">
            <summary>
            Gets or sets reference to the report.
            </summary>
        </member>
        <member name="M:FastReport.Import.ImportBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Import.ImportBase"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.Import.ImportBase.LoadReport(FastReport.Report,System.String)">
            <summary>
            Loads the specified file into specified report.
            </summary>
            <param name="report">Report object.</param>
            <param name="filename">File name.</param>
        </member>
        <member name="T:FastReport.Import.ListAndLabel.ListAndLabelImport">
            <summary>
            Represents the List and Label import plugin.
            </summary>
        </member>
        <member name="P:FastReport.Import.ListAndLabel.ListAndLabelImport.IsListAndLabelReport">
            <summary>
            Gets the value indicating is the report List and Label template after trying to load it. 
            </summary>
        </member>
        <member name="M:FastReport.Import.ListAndLabel.ListAndLabelImport.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Import.ListAndLabel.ListAndLabelImport"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Import.ListAndLabel.ListAndLabelImport.LoadReport(FastReport.Report,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Import.ListAndLabel.UnitsConverter">
            <summary>
            The List and Label units converter.
            </summary>
        </member>
        <member name="M:FastReport.Import.ListAndLabel.UnitsConverter.LLUnitsToMillimeters(System.String)">
            <summary>
            Converts List and Label units to millimeters.
            </summary>
            <param name="str">The List and Label unit as string.</param>
            <returns>The value in millimeters.</returns>
        </member>
        <member name="M:FastReport.Import.ListAndLabel.UnitsConverter.LLUnitsToPixels(System.String)">
            <summary>
            Converts List and Label units to pixels.
            </summary>
            <param name="str">The List and Label unit as string.</param>
            <returns>The value in pixels.</returns>
        </member>
        <member name="M:FastReport.Import.ListAndLabel.UnitsConverter.ConvertPaperOrientation(System.String)">
            <summary>
            Converts List and Label paper orientation.
            </summary>
            <param name="str">The List and Label paper orientation value as string.</param>
            <returns>Returns <b>true</b> if orientation is landscape.</returns>
        </member>
        <member name="M:FastReport.Import.ListAndLabel.UnitsConverter.ConvertBool(System.String)">
            <summary>
            Converts List and Label bool.
            </summary>
            <param name="str">The List and Label bool value as string.</param>
            <returns>A bool value.</returns>
        </member>
        <member name="M:FastReport.Import.ListAndLabel.UnitsConverter.ConvertTextAlign(System.String)">
            <summary>
            Converts List and Label text Align.
            </summary>
            <param name="str">The List and Label text Align value as string.</param>
            <returns>A HorzAlign value.</returns>
        </member>
        <member name="M:FastReport.Import.ListAndLabel.UnitsConverter.ConvertLineType(System.String)">
            <summary>
            Convert List and Label LineType to LineStyle.
            </summary>
            <param name="str">The List and Label LineType value as string.</param>
            <returns>A LineStyle value.</returns>
        </member>
        <member name="M:FastReport.Import.ListAndLabel.UnitsConverter.ConvertRounding(System.String)">
            <summary>
            Converts List and Label rounding to float.
            </summary>
            <param name="str">The List and Label rounding value as string.</param>
            <returns>A float value.</returns>
        </member>
        <member name="T:FastReport.Import.RDL.RDLImport">
            <summary>
            Represents the RDL import plugin.
            </summary>
        </member>
        <member name="M:FastReport.Import.RDL.RDLImport.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Import.RDL.RDLImport"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Import.RDL.RDLImport.LoadReport(FastReport.Report,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Import.RDL.SizeUnits">
            <summary>
            The RDL Size units.
            </summary>
        </member>
        <member name="F:FastReport.Import.RDL.SizeUnits.Millimeter">
            <summary>
            Specifies the units measured in millimeters.
            </summary>
        </member>
        <member name="F:FastReport.Import.RDL.SizeUnits.Centimeter">
            <summary>
            Specifies the units measured in centimeters.
            </summary>
        </member>
        <member name="F:FastReport.Import.RDL.SizeUnits.Inch">
            <summary>
            Specifies the units measured in inches.
            </summary>
        </member>
        <member name="F:FastReport.Import.RDL.SizeUnits.Point">
            <summary>
            Specifies the units measured in points.
            </summary>
        </member>
        <member name="F:FastReport.Import.RDL.SizeUnits.Pica">
            <summary>
            Specifies the units measured in picas.
            </summary>
        </member>
        <member name="T:FastReport.Import.RDL.SizeUnitsP">
            <summary>
            Defines the constants used to convert between RDL Size and pixels.
            </summary>
            <remarks>
            To convert pixels to inches, use the code:
            <code>inches = pixels / SizeUnitsP.Inch;</code>
            To convert inches to pixels, use the code:
            <code>pixels = inches * SizeUnitsP.Inch;</code>
            </remarks>
        </member>
        <member name="F:FastReport.Import.RDL.SizeUnitsP.Millimeter">
            <summary>
            The number of pixels in one millimeter.
            </summary>
        </member>
        <member name="F:FastReport.Import.RDL.SizeUnitsP.Centimeter">
            <summary>
            The number of pixels in one centimeter.
            </summary>
        </member>
        <member name="F:FastReport.Import.RDL.SizeUnitsP.Inch">
            <summary>
            The number of pixels in one inch.
            </summary>
        </member>
        <member name="F:FastReport.Import.RDL.SizeUnitsP.Point">
            <summary>
            The number of pixels in one point.
            </summary>
        </member>
        <member name="F:FastReport.Import.RDL.SizeUnitsP.Pica">
            <summary>
            The number of pixels in one pica.
            </summary>
        </member>
        <member name="T:FastReport.Import.RDL.SizeUnitsM">
            <summary>
            Defines the constants used to convert between RDL Size and millimeters.
            </summary>
            <remarks>
            To convert millimeters to inches, use the code:
            <code>inches = millimeters / SizeUnitsM.Inch;</code>
            To convert inches to millimeters, use the code:
            <code>millimeters = inches * SizeUnitsM.Inch;</code>
            </remarks>
        </member>
        <member name="F:FastReport.Import.RDL.SizeUnitsM.Centimeter">
            <summary>
            The number of millimeters in one centimeter.
            </summary>
        </member>
        <member name="F:FastReport.Import.RDL.SizeUnitsM.Inch">
            <summary>
            The number of millimeters in one inch.
            </summary>
        </member>
        <member name="F:FastReport.Import.RDL.SizeUnitsM.Point">
            <summary>
            The number of millimeters in one point.
            </summary>
        </member>
        <member name="F:FastReport.Import.RDL.SizeUnitsM.Pica">
            <summary>
            The number of millimeters in one pica.
            </summary>
        </member>
        <member name="T:FastReport.Import.RDL.UnitsConverter">
            <summary>
            The RDL units converter.
            </summary>
        </member>
        <member name="M:FastReport.Import.RDL.UnitsConverter.BooleanToBool(System.String)">
            <summary>
            Converts the RDL Boolean to bool value.
            </summary>
            <param name="boolean">The RDL Boolean value.</param>
            <returns>The bool value.</returns>
        </member>
        <member name="M:FastReport.Import.RDL.UnitsConverter.ConvertColor(System.String)">
            <summary>
            Converts the RDL Color to Color.
            </summary>
            <param name="colorName">The RDL Color value.</param>
            <returns>The Color value.</returns>
        </member>
        <member name="M:FastReport.Import.RDL.UnitsConverter.SizeToFloat(System.String,System.String)">
            <summary>
            Converts the RDL Size to float value.
            </summary>
            <param name="size">The RDL Size value.</param>
            <param name="unit">The RDL Size units measure.</param>
            <returns>The float value of RDL Size.</returns>
        </member>
        <member name="M:FastReport.Import.RDL.UnitsConverter.SizeToInt(System.String,System.String)">
            <summary>
            Converts the RDL Size to int value.
            </summary>
            <param name="size">The RDL Size value.</param>
            <param name="unit">The RDL Size units measure.</param>
            <returns>The int value of RDL Size.</returns>
        </member>
        <member name="M:FastReport.Import.RDL.UnitsConverter.SizeToMillimeters(System.String)">
            <summary>
            Converts the RDL Size to millimeters.
            </summary>
            <param name="size">The RDL Size value.</param>
            <returns>The float value of RDL Size in millimeters.</returns>
        </member>
        <member name="M:FastReport.Import.RDL.UnitsConverter.SizeToPixels(System.String)">
            <summary>
            Converts the RDL Size to pixels.
            </summary>
            <param name="size">The RDL Size value.</param>
            <returns>The float value of RDL Size in pixels.</returns>
        </member>
        <member name="M:FastReport.Import.RDL.UnitsConverter.ConvertFontStyle(System.String)">
            <summary>
            Converts the RDL FontStyle to FontStyle.
            </summary>
            <param name="fontStyle">The RDL FontStyle value.</param>
            <returns>The FontStyle value.</returns>
        </member>
        <member name="M:FastReport.Import.RDL.UnitsConverter.ConvertFontSize(System.String)">
            <summary>
            Converts the RDL FontSize to float.
            </summary>
            <param name="fontSize">The RDL FontSize value.</param>
            <returns>The float value of RDL FontSize in points.</returns>
        </member>
        <member name="M:FastReport.Import.RDL.UnitsConverter.ConvertTextAlign(System.String)">
            <summary>
            Converts the RDL TextAlign to HorzAlign.
            </summary>
            <param name="textAlign">The RDL TextAlign value.</param>
            <returns>The HorzAlign value.</returns>
        </member>
        <member name="M:FastReport.Import.RDL.UnitsConverter.ConvertVerticalAlign(System.String)">
            <summary>
            Converts the RDL TextAlign to VerticalAlign.
            </summary>
            <param name="verticalAlign">The RDL VerticalAlign value.</param>
            <returns>The VertAlign value.</returns>
        </member>
        <member name="M:FastReport.Import.RDL.UnitsConverter.ConvertWritingMode(System.String)">
            <summary>
            Converts the RDL WritingMode to Angle.
            </summary>
            <param name="writingMode">The RDL WritingMode value.</param>
            <returns>The int value of RDL WritingMode in degree.</returns>
        </member>
        <member name="M:FastReport.Import.RDL.UnitsConverter.ConvertTextAlignToStringAlignment(System.String)">
            <summary>
            Converts the RDL TextAlign to StringAlignment.
            </summary>
            <param name="textAlign">The RDL TextAling value.</param>
            <returns>The StringAlignment value.</returns>
        </member>
        <member name="M:FastReport.Import.RDL.UnitsConverter.ConvertTextAndVerticalAlign(System.String,System.String)">
            <summary>
            Converts the RDL TextAlign and VerticalAlign to ContentAlignment.
            </summary>
            <param name="textAlign">The RDL TextAlign value.</param>
            <param name="vertAlign">The RDL VerticalAlign value.</param>
            <returns>The ContentAlignment value.</returns>
        </member>
        <member name="M:FastReport.Import.RDL.UnitsConverter.ConvertBorderStyle(System.String)">
            <summary>
            Converts the RDL BorderStyle to LineStyle.
            </summary>
            <param name="borderStyle">The RDL BorderStyle value.</param>
            <returns>The LineStyle value.</returns>
        </member>
        <member name="M:FastReport.Import.RDL.UnitsConverter.ConvertSizing(System.String)">
            <summary>
            Converts the RDL Sizing to PictureBoxSizeMode.
            </summary>
            <param name="sizing">The RDL Sizing value.</param>
            <returns>The PictureBoxSizeMode value.</returns>
        </member>
        <member name="T:FastReport.IParent">
            <summary>
            Implement this interface if your object can contain list of child objects.
            </summary>
        </member>
        <member name="M:FastReport.IParent.CanContain(FastReport.Base)">
            <summary>
            Gets a value indicating that this object can contain the specified child object.
            </summary>
            <param name="child">Child object.</param>
            <returns><b>true</b> if this object can contain the specified child object; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:FastReport.IParent.GetChildObjects(FastReport.ObjectCollection)">
            <summary>
            Gets a list of child objects.
            </summary>
            <param name="list">List to fill with values.</param>
        </member>
        <member name="M:FastReport.IParent.AddChild(FastReport.Base)">
            <summary>
            Adds a child object to this object's childs.
            </summary>
            <param name="child">Object to add.</param>
        </member>
        <member name="M:FastReport.IParent.RemoveChild(FastReport.Base)">
            <summary>
            Removes a specified object from this object's childs.
            </summary>
            <param name="child"></param>
        </member>
        <member name="M:FastReport.IParent.GetChildOrder(FastReport.Base)">
            <summary>
            Returns z-order of the specified child object.
            </summary>
            <param name="child">Child object.</param>
            <returns>Z-order of the specified object.</returns>
            <remarks>
            This method must return the index of a specified child object in the internal child list.
            </remarks>
        </member>
        <member name="M:FastReport.IParent.SetChildOrder(FastReport.Base,System.Int32)">
            <summary>
            Sets the z-order of the specified object.
            </summary>
            <param name="child">Child object.</param>
            <param name="order">New Z-order.</param>
            <remarks>
            This method must place the specified child object at the specified position in the internal child list.
            </remarks>
        </member>
        <member name="M:FastReport.IParent.UpdateLayout(System.Single,System.Single)">
            <summary>
            Updates the children layout when the size of this object is changed by dx, dy values.
            </summary>
            <param name="dx">X delta.</param>
            <param name="dy">Y delta.</param>
            <remarks>
            This method must update positions/sizes of child objects whose <b>Dock</b> or <b>Anchor</b> properties
            are set to non-default values.
            </remarks>
        </member>
        <member name="T:FastReport.LineObject">
            <summary>
            Represents a line object.
            </summary>
            <remarks>
            Use the <b>Border.Width</b>, <b>Border.Style</b> and <b>Border.Color</b> properties to set 
            the line width, style and color. Set the <see cref="P:FastReport.LineObject.Diagonal"/> property to <b>true</b>
            if you want to show a diagonal line.
            </remarks>
        </member>
        <member name="P:FastReport.LineObject.Diagonal">
            <summary>
            Gets or sets a value indicating that the line is diagonal.
            </summary>
            <remarks>
            If this property is <b>false</b>, the line can be only horizontal or vertical.
            </remarks>
        </member>
        <member name="P:FastReport.LineObject.StartCap">
            <summary>
            Gets or sets the start cap settings.
            </summary>
        </member>
        <member name="P:FastReport.LineObject.EndCap">
            <summary>
            Gets or sets the end cap settings.
            </summary>
        </member>
        <member name="M:FastReport.LineObject.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.LineObject.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.LineObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.LineObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.LineObject"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.ObjectCollection">
            <summary>
            Holds the list of objects of <see cref="T:FastReport.Base"/> type.
            </summary>
        </member>
        <member name="P:FastReport.ObjectCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">Index of an element.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:FastReport.ObjectCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.ObjectCollection"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.ObjectCollection.#ctor(FastReport.Base)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.ObjectCollection"/> class with specified owner.
            </summary>
        </member>
        <member name="T:FastReport.OverlayBand">
            <summary>
            Represents an overlay band.
            </summary>
        </member>
        <member name="P:FastReport.OverlayBand.StartNewPage">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.OverlayBand.PrintOnBottom">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="M:FastReport.OverlayBand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.OverlayBand"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.PageBase">
            <summary>
            Base class for report pages and dialog forms.
            </summary>
        </member>
        <member name="M:FastReport.PageBase.Refresh">
            <summary>
            Causes the page to refresh in the preview window.
            </summary>
            <remarks>
            Call this method when you handle object's MouseMove, MouseDown, MouseUp, MouseEnter, MouseLeave events
            and want to refresh the preview window.
            <note type="caution">
            If you have changed some objects on a page, the <b>Refresh</b> method will not save the changes. 
            This means when you print or export the page, you will see original (unmodified) page content.
            If you want to save the changes, you have to use the <see cref="M:FastReport.PageBase.Modify"/> method instead.
            </note>
            </remarks>
        </member>
        <member name="M:FastReport.PageBase.Modify">
            <summary>
            Modifies the page content and refresh it in the preview window.
            </summary>
            <remarks>
            Call this method when you handle object's Click, MouseDown or MouseUp events
            and want to modify an object and refresh the preview window. 
            </remarks>
        </member>
        <member name="M:FastReport.PageBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.PageBase"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.PageCollection">
            <summary>
            Holds the list of objects of <see cref="T:FastReport.PageBase"/> type.
            </summary>
        </member>
        <member name="P:FastReport.PageCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">Index of an element.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:FastReport.PageCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.PageCollection"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.PageCollection.#ctor(FastReport.Base)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.PageCollection"/> class with specified owner.
            </summary>
        </member>
        <member name="T:FastReport.PageColumns">
            <summary>
            This class contains the page columns settings. 
            It is used in the <see cref="P:FastReport.ReportPage.Columns"/> property.
            </summary>
        </member>
        <member name="P:FastReport.PageColumns.Count">
            <summary>
            Gets or sets the number of columns.
            </summary>
            <remarks>
            Set this property to 0 or 1 if you don't want to use columns.
            </remarks>
        </member>
        <member name="P:FastReport.PageColumns.Width">
            <summary>
            Gets or sets the column width.
            </summary>
        </member>
        <member name="P:FastReport.PageColumns.Positions">
            <summary>
            Gets or sets a list of column starting positions.
            </summary>
            <remarks>
            Each value represents a column starting position measured in the millimeters.
            </remarks>
        </member>
        <member name="M:FastReport.PageColumns.Assign(FastReport.PageColumns)">
            <summary>
            Assigns values from another source.
            </summary>
            <param name="source">Source to assign from.</param>
        </member>
        <member name="T:FastReport.PageFooterBand">
            <summary>
            Represents a page footer band.
            </summary>
        </member>
        <member name="P:FastReport.PageFooterBand.StartNewPage">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.PageFooterBand.PrintOnBottom">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="M:FastReport.PageFooterBand.InitializeComponent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PageFooterBand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.PageFooterBand"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.PageHeaderBand">
            <summary>
            Represents a page header band.
            </summary>
        </member>
        <member name="P:FastReport.PageHeaderBand.StartNewPage">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.PageHeaderBand.PrintOnBottom">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="M:FastReport.PageHeaderBand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.PageHeaderBand"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.ImageAlign">
            <summary>
            Specifies the alignment of a image in the border.
            </summary>
        </member>
        <member name="F:FastReport.ImageAlign.None">
            <summary>
            Specifies that image is not aligned in the layout rectangle.
            </summary>
        </member>
        <member name="F:FastReport.ImageAlign.Top_Left">
            <summary>
            Specifies that image is aligned in the top-left of the layout rectangle.
            </summary>
        </member>
        <member name="F:FastReport.ImageAlign.Top_Center">
            <summary>
            Specifies that image is aligned in the top-center of the layout rectangle.
            </summary>
        </member>
        <member name="F:FastReport.ImageAlign.Top_Right">
            <summary>
            Specifies that image is aligned in the top-right of the layout rectangle.
            </summary>
        </member>
        <member name="F:FastReport.ImageAlign.Center_Left">
            <summary>
            Specifies that image is aligned in the center-left of the layout rectangle.
            </summary>
        </member>
        <member name="F:FastReport.ImageAlign.Center_Center">
            <summary>
            Specifies that image is aligned in the center-center of the layout rectangle.
            </summary>
        </member>
        <member name="F:FastReport.ImageAlign.Center_Right">
            <summary>
            Specifies that image is aligned in the center-right of the layout rectangle.
            </summary>
        </member>
        <member name="F:FastReport.ImageAlign.Bottom_Left">
            <summary>
            Specifies that image is aligned in the center-left of the layout rectangle.
            </summary>
        </member>
        <member name="F:FastReport.ImageAlign.Bottom_Center">
            <summary>
            Specifies that image is aligned in the center-center of the layout rectangle.
            </summary>
        </member>
        <member name="F:FastReport.ImageAlign.Bottom_Right">
            <summary>
            Specifies that image is aligned in the center-right of the layout rectangle.
            </summary>
        </member>
        <member name="T:FastReport.PolygonObject">
            <summary>
            Represents a polygon object.
            </summary>
            <remarks>
            Use the <b>Border.Width</b>, <b>Border.Style</b> and <b>Border.Color</b> properties to set 
            the line width, style and color.
            
            </remarks>
        </member>
        <member name="M:FastReport.PolygonObject.getPolygonPath(System.Drawing.Pen,System.Single,System.Single)">
            <summary>
            Calculate GraphicsPath for draw to page
            </summary>
            <param name="pen">Pen for lines</param>
            <param name="scaleX">scale by width</param>
            <param name="scaleY">scale by height</param>
            <returns>Always returns a non-empty path</returns>
        </member>
        <member name="M:FastReport.PolygonObject.drawPoly(FastReport.Utils.FRPaintEventArgs)">
            <summary>
            Draw polyline path to graphics
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:FastReport.PolygonObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PolygonObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.LineObject"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Language">
            <summary>
            Specifies the language of the report's script.
            </summary>
        </member>
        <member name="F:FastReport.Language.CSharp">
            <summary>
            The C# language.
            </summary>
        </member>
        <member name="F:FastReport.Language.Vb">
            <summary>
            The VisualBasic.Net language.
            </summary>
        </member>
        <member name="T:FastReport.TextQuality">
            <summary>
            Specifies the quality of text rendering.
            </summary>
        </member>
        <member name="F:FastReport.TextQuality.Default">
            <summary>
            The default text quality, depends on system settings.
            </summary>
        </member>
        <member name="F:FastReport.TextQuality.Regular">
            <summary>
            The regular quality.
            </summary>
        </member>
        <member name="F:FastReport.TextQuality.ClearType">
            <summary>
            The "ClearType" quality.
            </summary>
        </member>
        <member name="F:FastReport.TextQuality.AntiAlias">
            <summary>
            The AntiAlias quality. This mode may be used to produce the WYSIWYG text.
            </summary>
        </member>
        <member name="F:FastReport.TextQuality.SingleBPP">
            <summary>
            The "SingleBitPerPixel" quality.
            </summary>
        </member>
        <member name="F:FastReport.TextQuality.SingleBPPGridFit">
            <summary>
            The "SingleBitPerPixelGridFit" quality.
            </summary>
        </member>
        <member name="T:FastReport.ReportOperation">
            <summary>
            Specifies the report operation.
            </summary>
        </member>
        <member name="F:FastReport.ReportOperation.None">
            <summary>
            Specifies no operation.
            </summary>
        </member>
        <member name="F:FastReport.ReportOperation.Running">
            <summary>
            The report is running.
            </summary>
        </member>
        <member name="F:FastReport.ReportOperation.Printing">
            <summary>
            The report is printing.
            </summary>
        </member>
        <member name="F:FastReport.ReportOperation.Exporting">
            <summary>
            The report is exporting.
            </summary>
        </member>
        <member name="T:FastReport.PageRange">
            <summary>
            Specifies the page range to print/export.
            </summary>
        </member>
        <member name="F:FastReport.PageRange.All">
            <summary>
            Print all pages.
            </summary>
        </member>
        <member name="F:FastReport.PageRange.Current">
            <summary>
            Print current page.
            </summary>
        </member>
        <member name="F:FastReport.PageRange.PageNumbers">
            <summary>
            Print pages specified in the <b>PageNumbers</b> property of the <b>PrintSettings</b>.
            </summary>
        </member>
        <member name="T:FastReport.ShiftMode">
            <summary>
            The automatic shift mode.
            </summary>
        </member>
        <member name="F:FastReport.ShiftMode.Never">
            <summary>
            Do not shift the object.
            </summary>
        </member>
        <member name="F:FastReport.ShiftMode.Always">
            <summary>
            Shift the object up or down if any object above it shrinks or grows.
            </summary>
        </member>
        <member name="F:FastReport.ShiftMode.WhenOverlapped">
            <summary>
            Shift the object up or down if any object above it shrinks or grows. 
            Objects must have overlapped x-coordinates.
            </summary>
        </member>
        <member name="T:FastReport.PrintOn">
            <summary>
            Specifies where to print an object.
            </summary>
        </member>
        <member name="F:FastReport.PrintOn.None">
            <summary>
            Do not print the object.
            </summary>
        </member>
        <member name="F:FastReport.PrintOn.FirstPage">
            <summary>
            Print the object on the first page. If this flag is not set, the object will not
            be printed on the first page.
            </summary>
        </member>
        <member name="F:FastReport.PrintOn.LastPage">
            <summary>
            Print the object on the last page. If this flag is not set, the object will not
            be printed on the last page. You should set the report's double pass option to make
            it work correctly.
            </summary>
        </member>
        <member name="F:FastReport.PrintOn.OddPages">
            <summary>
            Print the object on odd pages only.
            </summary>
        </member>
        <member name="F:FastReport.PrintOn.EvenPages">
            <summary>
            Print the object on even pages only.
            </summary>
        </member>
        <member name="F:FastReport.PrintOn.RepeatedBand">
            <summary>
            Print the object on band with "Repeat on Every Page" flag when that band is repeated. 
            </summary>
        </member>
        <member name="F:FastReport.PrintOn.SinglePage">
            <summary>
            Print the object if the report has single page only.
            </summary>
        </member>
        <member name="T:FastReport.StylePriority">
            <summary>
            Specifies the style properties to use when style is applied.
            </summary>
        </member>
        <member name="F:FastReport.StylePriority.UseFill">
            <summary>
            Use the fill property of the style.
            </summary>
        </member>
        <member name="F:FastReport.StylePriority.UseAll">
            <summary>
            Use all style properties.
            </summary>
        </member>
        <member name="T:FastReport.ReportComponentCollection">
            <summary>
            Holds the list of objects of <see cref="T:FastReport.ReportComponentBase"/> type.
            </summary>
        </member>
        <member name="P:FastReport.ReportComponentCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">Index of an element.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:FastReport.ReportComponentCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.ReportComponentCollection"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.ReportComponentCollection.#ctor(FastReport.Base)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.ReportComponentCollection"/> class with specified owner.
            </summary>
        </member>
        <member name="T:FastReport.CustomLoadEventArgs">
            <summary>
            Provides data for the <see cref="E:FastReport.Report.LoadBaseReport"/> event.
            </summary>
        </member>
        <member name="P:FastReport.CustomLoadEventArgs.FileName">
            <summary>
            Gets a name of the file to load the report from.
            </summary>
        </member>
        <member name="P:FastReport.CustomLoadEventArgs.Report">
            <summary>
            The reference to a report.
            </summary>
        </member>
        <member name="M:FastReport.CustomLoadEventArgs.#ctor(System.String,FastReport.Report)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.CustomLoadEventArgs"/> class using the specified
            file name and the report.
            </summary>
            <param name="fileName">The name of the file to load the report from.</param>
            <param name="report">The report.</param>
        </member>
        <member name="T:FastReport.CustomCalcEventArgs">
            <summary>
            Provides data for the <see cref="E:FastReport.Report.CustomCalc"/> event.
            </summary>
        </member>
        <member name="P:FastReport.CustomCalcEventArgs.Expression">
            <summary>
            Gets an expression.
            </summary>
        </member>
        <member name="P:FastReport.CustomCalcEventArgs.CalculatedObject">
            <summary>
            Gets or sets a object.
            </summary>
        </member>
        <member name="P:FastReport.CustomCalcEventArgs.Report">
            <summary>
            The reference to a report.
            </summary>
        </member>
        <member name="M:FastReport.CustomCalcEventArgs.#ctor(System.String,System.Object,FastReport.Report)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.CustomLoadEventArgs"/> class using the specified
            file name and the report.
            </summary>
            <param name="expression">The text of expression.</param>
            <param name="Object">The name of the file to load the report from.</param>
            <param name="report">The report.</param>
        </member>
        <member name="T:FastReport.CustomLoadEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:FastReport.Report.LoadBaseReport"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:FastReport.CustomCalcEventHandler">
            <summary>
            Represents the method that will handle the event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:FastReport.ProgressEventArgs">
            <summary>
            Provides data for the Progress event.
            </summary>
        </member>
        <member name="P:FastReport.ProgressEventArgs.Message">
            <summary>
            Gets a progress message.
            </summary>
        </member>
        <member name="P:FastReport.ProgressEventArgs.Progress">
            <summary>
            Gets the current page number.
            </summary>
        </member>
        <member name="P:FastReport.ProgressEventArgs.Total">
            <summary>
            Gets the number of total pages.
            </summary>
        </member>
        <member name="M:FastReport.ProgressEventArgs.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.ProgressEventArgs"/> class using the specified
            message, page number and total number of pages.
            </summary>
            <param name="message">The progress message.</param>
            <param name="progress">Current page number.</param>
            <param name="total">Number of total pages.</param>
        </member>
        <member name="T:FastReport.ProgressEventHandler">
            <summary>
            Represents the method that will handle the Progress event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:FastReport.DatabaseLoginEventArgs">
            <summary>
            Provides data for the DatabaseLogin event.
            </summary>
        </member>
        <member name="P:FastReport.DatabaseLoginEventArgs.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
        </member>
        <member name="P:FastReport.DatabaseLoginEventArgs.UserName">
            <summary>
            Gets or sets an user name.
            </summary>
        </member>
        <member name="P:FastReport.DatabaseLoginEventArgs.Password">
            <summary>
            Gets or sets a password.
            </summary>
        </member>
        <member name="M:FastReport.DatabaseLoginEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.DatabaseLoginEventArgs"/> class using the specified
            connection string.
            </summary>
            <param name="connectionString">The connection string.</param>
        </member>
        <member name="T:FastReport.DatabaseLoginEventHandler">
            <summary>
            Represents the method that will handle the DatabaseLogin event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:FastReport.AfterDatabaseLoginEventArgs">
            <summary>
            Provides data for the AfterDatabaseLogin event.
            </summary>
        </member>
        <member name="P:FastReport.AfterDatabaseLoginEventArgs.Connection">
            <summary>
            Gets the <b>DbConnection</b> object.
            </summary>
        </member>
        <member name="M:FastReport.AfterDatabaseLoginEventArgs.#ctor(System.Data.Common.DbConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.AfterDatabaseLoginEventArgs"/> class using 
            the specified connection.
            </summary>
            <param name="connection">The connection object.</param>
        </member>
        <member name="T:FastReport.AfterDatabaseLoginEventHandler">
            <summary>
            Represents the method that will handle the AfterDatabaseLogin event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:FastReport.FilterPropertiesEventArgs">
            <summary>
            Provides data for the FilterProperties event.
            </summary>
        </member>
        <member name="P:FastReport.FilterPropertiesEventArgs.Property">
            <summary>
            Gets the property descriptor.
            </summary>
        </member>
        <member name="P:FastReport.FilterPropertiesEventArgs.Skip">
            <summary>
            Gets or sets a value that indicates whether this property should be skipped.
            </summary>
        </member>
        <member name="T:FastReport.FilterPropertiesEventHandler">
            <summary>
            Represents the method that will handle the FilterProperties event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:FastReport.GetPropertyKindEventArgs">
            <summary>
            Provides data for the GetPropertyKind event.
            </summary>
        </member>
        <member name="P:FastReport.GetPropertyKindEventArgs.PropertyName">
            <summary>
            Gets the property name.
            </summary>
        </member>
        <member name="P:FastReport.GetPropertyKindEventArgs.PropertyType">
            <summary>
            Gets the property type.
            </summary>
        </member>
        <member name="P:FastReport.GetPropertyKindEventArgs.PropertyKind">
            <summary>
            Gets or sets the kind of property.
            </summary>
        </member>
        <member name="T:FastReport.GetPropertyKindEventHandler">
            <summary>
            Represents the method that will handle the GetPropertyKind event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:FastReport.GetTypeInstanceEventArgs">
            <summary>
            Provides data for the GetTypeInstance event.
            </summary>
        </member>
        <member name="P:FastReport.GetTypeInstanceEventArgs.Type">
            <summary>
            Gets the type.
            </summary>
        </member>
        <member name="P:FastReport.GetTypeInstanceEventArgs.Instance">
            <summary>
            Gets or sets the instance of type.
            </summary>
        </member>
        <member name="T:FastReport.GetTypeInstanceEventHandler">
            <summary>
            Represents the method that will handle the GetPropertyKind event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:FastReport.ExportParametersEventArgs">
            <summary>
            Event arguments for custom Export parameters
            </summary>
        </member>
        <member name="F:FastReport.ExportParametersEventArgs.Export">
            <summary>
            Used to set custom export parameters
            </summary>
        </member>
        <member name="T:FastReport.SaveMode">
            <summary>
            Specifies the Save Mode of designed report.
            </summary>
        </member>
        <member name="F:FastReport.SaveMode.All">
            <summary>
            The saving allowed to all.
            </summary>
        </member>
        <member name="F:FastReport.SaveMode.Original">
            <summary>
            The saving in original place.
            </summary>
        </member>
        <member name="F:FastReport.SaveMode.User">
            <summary>
            The saving allowed to current user.
            </summary>
        </member>
        <member name="F:FastReport.SaveMode.Role">
            <summary>
            The saving allowed to current role/group.
            </summary>
        </member>
        <member name="F:FastReport.SaveMode.Security">
            <summary>
            The saving allowed with other security permissions.
            </summary>
        </member>
        <member name="F:FastReport.SaveMode.Deny">
            <summary>
            The saving not allowed.
            </summary>
        </member>
        <member name="F:FastReport.SaveMode.Custom">
            <summary>
            Custom saving rules.
            </summary>
        </member>
        <member name="T:FastReport.ReportInfo">
            <summary>
            This class represents the report information such as name, author, description etc.
            </summary>
        </member>
        <member name="P:FastReport.ReportInfo.Name">
            <summary>
            Gets or sets the name of a report.
            </summary>
        </member>
        <member name="P:FastReport.ReportInfo.Author">
            <summary>
            Gets or sets the author of a report.
            </summary>
        </member>
        <member name="P:FastReport.ReportInfo.Version">
            <summary>
            Gets or sets the report version.
            </summary>
        </member>
        <member name="P:FastReport.ReportInfo.Description">
            <summary>
            Gets or sets the report description.
            </summary>
        </member>
        <member name="P:FastReport.ReportInfo.Picture">
            <summary>
            Gets or sets the picture associated with a report.
            </summary>
        </member>
        <member name="P:FastReport.ReportInfo.Created">
            <summary>
            Gets or sets the report creation date and time.
            </summary>
        </member>
        <member name="P:FastReport.ReportInfo.Modified">
            <summary>
            Gets or sets a value indicating that report was modified in the designer.
            </summary>
        </member>
        <member name="P:FastReport.ReportInfo.SavePreviewPicture">
            <summary>
            Gets or sets a value that determines whether to fill the <see cref="P:FastReport.ReportInfo.Picture"/> property
            automatically.
            </summary>
        </member>
        <member name="P:FastReport.ReportInfo.PreviewPictureRatio">
            <summary>
            Gets or sets the ratio that will be used when generating a preview picture.
            </summary>
        </member>
        <member name="P:FastReport.ReportInfo.CreatorVersion">
            <summary>
            Gets the version of FastReport that was created this report file.
            </summary>
        </member>
        <member name="P:FastReport.ReportInfo.Tag">
            <summary>
            Gets or sets the Tag string object for this report file.
            </summary>
        </member>
        <member name="P:FastReport.ReportInfo.SaveMode">
            <summary>
            Gets or sets SaveMode property.
            </summary>
        </member>
        <member name="M:FastReport.ReportInfo.Clear">
            <summary>
            Resets all properties to its default values.
            </summary>
        </member>
        <member name="M:FastReport.ReportInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.ReportInfo"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.DefaultPaperSize">
            <summary>
            Specifies the default paper size used when creating a new report.
            </summary>
        </member>
        <member name="F:FastReport.DefaultPaperSize.A4">
            <summary>
            A4 paper (210 x 297 mm).
            </summary>
        </member>
        <member name="F:FastReport.DefaultPaperSize.Letter">
            <summary>
            Letter paper (8.5 x 11 inches, 216 x 279 mm).
            </summary>
        </member>
        <member name="T:FastReport.ReportSummaryBand">
            <summary>
            Represents a report summary band.
            </summary>
        </member>
        <member name="T:FastReport.ReportTitleBand">
            <summary>
            Represents a report title band.
            </summary>
        </member>
        <member name="T:FastReport.ShapeKind">
            <summary>
            Specifies a kind of the shape.
            </summary>
        </member>
        <member name="F:FastReport.ShapeKind.Rectangle">
            <summary>
            Specifies a rectangle shape.
            </summary>
        </member>
        <member name="F:FastReport.ShapeKind.RoundRectangle">
            <summary>
            Specifies a round rectangle shape.
            </summary>
        </member>
        <member name="F:FastReport.ShapeKind.Ellipse">
            <summary>
            Specifies an ellipse shape.
            </summary>
        </member>
        <member name="F:FastReport.ShapeKind.Triangle">
            <summary>
            Specifies a triangle shape.
            </summary>
        </member>
        <member name="F:FastReport.ShapeKind.Diamond">
            <summary>
            Specifies a diamond shape.
            </summary>
        </member>
        <member name="T:FastReport.ShapeObject">
            <summary>
            Represents a shape object.
            </summary>
            <remarks>
            Use the <see cref="T:FastReport.ShapeKind"/> property to specify a shape. To set the width, style and color of the
            shape's border, use the <b>Border.Width</b>, <b>Border.Style</b> and <b>Border.Color</b> properties.
            </remarks>
        </member>
        <member name="P:FastReport.ShapeObject.Shape">
            <summary>
            Gets or sets a shape kind.
            </summary>
        </member>
        <member name="P:FastReport.ShapeObject.Curve">
            <summary>
            Gets or sets a shape curvature if <see cref="T:FastReport.ShapeKind"/> is <b>RoundRectangle</b>.
            </summary>
            <remarks>
            0 value means automatic curvature.
            </remarks>
        </member>
        <member name="M:FastReport.ShapeObject.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ShapeObject.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ShapeObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ShapeObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.ShapeObject"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Sort">
            <summary>
            Represents a sort condition used in the <see cref="P:FastReport.DataBand.Sort"/>.
            </summary>
        </member>
        <member name="P:FastReport.Sort.Expression">
            <summary>
            Gets or sets an expression used to sort data band rows.
            </summary>
            <remarks>
            This property can contain any valid expression.
            </remarks>
        </member>
        <member name="P:FastReport.Sort.Descending">
            <summary>
            Gets or sets a value indicating that sort must be performed in descending order.
            </summary>
        </member>
        <member name="M:FastReport.Sort.Serialize(FastReport.Utils.FRWriter)">
            <summary>
            Serializes the class.
            </summary>
            <param name="writer">Writer object.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.Sort.Deserialize(FastReport.Utils.FRReader)">
            <summary>
            Deserializes the class.
            </summary>
            <param name="reader">Reader object.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.Sort.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Sort"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.Sort.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Sort"/> class with specified expression.
            </summary>
        </member>
        <member name="M:FastReport.Sort.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Sort"/> class with specified expression and sort order.
            </summary>
        </member>
        <member name="T:FastReport.SortCollection">
            <summary>
            Represents a collection of sort conditions used in the <see cref="P:FastReport.DataBand.Sort"/>.
            </summary>
        </member>
        <member name="P:FastReport.SortCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">Index of an element.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:FastReport.SortCollection.AddRange(FastReport.Sort[])">
            <summary>
            Adds the specified elements to the end of this collection.
            </summary>
            <param name="range"></param>
        </member>
        <member name="M:FastReport.SortCollection.Add(FastReport.Sort)">
            <summary>
            Adds an object to the end of this collection.
            </summary>
            <param name="value">Object to add.</param>
            <returns>Index of the added object.</returns>
        </member>
        <member name="M:FastReport.SortCollection.Insert(System.Int32,FastReport.Sort)">
            <summary>
            Inserts an object into this collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The object to insert.</param>
        </member>
        <member name="M:FastReport.SortCollection.Remove(FastReport.Sort)">
            <summary>
            Removes the specified object from the collection.
            </summary>
            <param name="value">Object to remove.</param>
        </member>
        <member name="M:FastReport.SortCollection.IndexOf(FastReport.Sort)">
            <summary>
            Returns the zero-based index of the first occurrence of an object.
            </summary>
            <param name="value">The object to locate in the collection.</param>
            <returns>The zero-based index of the first occurrence of value within the entire collection, if found; 
            otherwise, -1.</returns>
        </member>
        <member name="M:FastReport.SortCollection.Contains(FastReport.Sort)">
            <summary>
            Determines whether an element is in the collection.
            </summary>
            <param name="value">The object to locate in the collection.</param>
            <returns><b>true</b> if object is found in the collection; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:FastReport.SortCollection.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.SortCollection.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.SortCollection.Assign(FastReport.SortCollection)">
            <summary>
            Assigns values from another collection.
            </summary>
            <param name="source">Collection to assign from.</param>
        </member>
        <member name="T:FastReport.Style">
            <summary>
            Represents a style.
            </summary>
            <remarks>
            <para>
            Style class holds border, fill, text fill and font settings. It can be applied to any report object of
            <see cref="T:FastReport.ReportComponentBase"/> type.
            </para>
            <para>
            The <b>Report</b> object holds list of styles in its <see cref="P:FastReport.Report.Styles"/> property. Each style has
            unique name. To apply a style to the report component, set its <see cref="P:FastReport.ReportComponentBase.Style"/>
            property to the style name.
            </para>
            </remarks>
        </member>
        <member name="P:FastReport.Style.Name">
            <summary>
            Gets or sets a name of the style.
            </summary>
            <remarks>
            The name must be unique.
            </remarks>
        </member>
        <member name="M:FastReport.Style.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Style.Assign(FastReport.StyleBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Style.Clone">
            <summary>
            Creates exact copy of this <b>Style</b>.
            </summary>
            <returns>Copy of this style.</returns>
        </member>
        <member name="M:FastReport.Style.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Style"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.StyleCollection">
            <summary>
            Represents a collection of styles used in the <see cref="P:FastReport.Report.Styles"/>.
            </summary>
        </member>
        <member name="P:FastReport.StyleCollection.Name">
            <summary>
            Gets or sets the name of the style.
            </summary>
        </member>
        <member name="P:FastReport.StyleCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">Index of an element.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:FastReport.StyleCollection.AddRange(FastReport.Style[])">
            <summary>
            Adds the specified elements to the end of this collection.
            </summary>
            <param name="range"></param>
        </member>
        <member name="M:FastReport.StyleCollection.Add(FastReport.Style)">
            <summary>
            Adds an object to the end of this collection.
            </summary>
            <param name="value">Object to add.</param>
            <returns>Index of the added object.</returns>
        </member>
        <member name="M:FastReport.StyleCollection.Insert(System.Int32,FastReport.Style)">
            <summary>
            Inserts an object into this collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The object to insert.</param>
        </member>
        <member name="M:FastReport.StyleCollection.Remove(FastReport.Style)">
            <summary>
            Removes the specified object from the collection.
            </summary>
            <param name="value">Object to remove.</param>
        </member>
        <member name="M:FastReport.StyleCollection.IndexOf(FastReport.Style)">
            <summary>
            Returns the zero-based index of the first occurrence of an object.
            </summary>
            <param name="value">The object to locate in the collection.</param>
            <returns>The zero-based index of the first occurrence of value within the entire collection, if found; 
            otherwise, -1.</returns>
        </member>
        <member name="M:FastReport.StyleCollection.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of a style with specified name.
            </summary>
            <param name="value">The name to locate in the collection.</param>
            <returns>The zero-based index of the first occurrence of value within the entire collection, if found; 
            otherwise, -1.</returns>
        </member>
        <member name="M:FastReport.StyleCollection.Contains(FastReport.Style)">
            <summary>
            Determines whether an element is in the collection.
            </summary>
            <param name="value">The object to locate in the collection.</param>
            <returns><b>true</b> if object is found in the collection; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:FastReport.StyleCollection.Contains(System.String)">
            <summary>
            Determines whether a style with specified name is in the collection.
            </summary>
            <param name="value">The style name to locate in the collection.</param>
            <returns><b>true</b> if object is found in the collection; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:FastReport.StyleCollection.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.StyleCollection.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.StyleCollection.Save(System.IO.Stream)">
            <summary>
            Saves the collection to a stream.
            </summary>
            <param name="stream">Stream to save to.</param>
        </member>
        <member name="M:FastReport.StyleCollection.Save(System.String)">
            <summary>
            Saves the collection to a file.
            </summary>
            <param name="fileName">The name of the file.</param>
        </member>
        <member name="M:FastReport.StyleCollection.Load(System.IO.Stream)">
            <summary>
            Loads the collection from a stream.
            </summary>
            <param name="stream">Stream to load from.</param>
        </member>
        <member name="M:FastReport.StyleCollection.Load(System.String)">
            <summary>
            Loads the collection from a file.
            </summary>
            <param name="fileName">The name of the file.</param>
        </member>
        <member name="M:FastReport.StyleCollection.Clone">
            <summary>
            Creates exact copy of this collection.
            </summary>
            <returns>The copy of this collection.</returns>
        </member>
        <member name="M:FastReport.StyleCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.StyleCollection"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.StyleSheet">
            <summary>
            Represents a collection of the <see cref="T:FastReport.StyleCollection"/> objects.
            </summary>
        </member>
        <member name="P:FastReport.StyleSheet.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">Index of an element.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:FastReport.StyleSheet.AddRange(FastReport.StyleCollection[])">
            <summary>
            Adds the specified elements to the end of this collection.
            </summary>
            <param name="range"></param>
        </member>
        <member name="M:FastReport.StyleSheet.Add(FastReport.StyleCollection)">
            <summary>
            Adds an object to the end of this collection.
            </summary>
            <param name="value">Object to add.</param>
            <returns>Index of the added object.</returns>
        </member>
        <member name="M:FastReport.StyleSheet.Insert(System.Int32,FastReport.StyleCollection)">
            <summary>
            Inserts an object into this collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The object to insert.</param>
        </member>
        <member name="M:FastReport.StyleSheet.Remove(FastReport.StyleCollection)">
            <summary>
            Removes the specified object from the collection.
            </summary>
            <param name="value">Object to remove.</param>
        </member>
        <member name="M:FastReport.StyleSheet.IndexOf(FastReport.StyleCollection)">
            <summary>
            Returns the zero-based index of the first occurrence of an object.
            </summary>
            <param name="value">The object to locate in the collection.</param>
            <returns>The zero-based index of the first occurrence of value within the entire collection, if found; 
            otherwise, -1.</returns>
        </member>
        <member name="M:FastReport.StyleSheet.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of a style collection with specified name.
            </summary>
            <param name="value">The style collection name to locate in the collection.</param>
            <returns>The zero-based index of the first occurrence of value within the entire collection, if found; 
            otherwise, -1.</returns>
        </member>
        <member name="M:FastReport.StyleSheet.Contains(FastReport.StyleCollection)">
            <summary>
            Determines whether an element is in the collection.
            </summary>
            <param name="value">The object to locate in the collection.</param>
            <returns><b>true</b> if object is found in the collection; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:FastReport.StyleSheet.Contains(System.String)">
            <summary>
            Determines whether a style collection with specified name is in the collection.
            </summary>
            <param name="value">The style collection name to locate in the collection.</param>
            <returns><b>true</b> if object is found in the collection; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:FastReport.StyleSheet.ToArray">
            <summary>
            Gets an array containing all collection items.
            </summary>
            <returns>An array containing all collection items.</returns>
        </member>
        <member name="M:FastReport.StyleSheet.Serialize(FastReport.Utils.FRWriter)">
            <summary>
            Serializes the collection.
            </summary>
            <param name="writer">Writer object.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.StyleSheet.Deserialize(FastReport.Utils.FRReader)">
            <summary>
            Deserializes the collection.
            </summary>
            <param name="reader">Reader object.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.StyleSheet.Save(System.IO.Stream)">
            <summary>
            Saves the collection to a stream.
            </summary>
            <param name="stream">Stream to save to.</param>
        </member>
        <member name="M:FastReport.StyleSheet.Save(System.String)">
            <summary>
            Saves the collection to a file with specified name.
            </summary>
            <param name="fileName">File name to save to.</param>
        </member>
        <member name="M:FastReport.StyleSheet.Load(System.IO.Stream)">
            <summary>
            Loads the collection from a stream.
            </summary>
            <param name="stream">Stream to load from.</param>
        </member>
        <member name="M:FastReport.StyleSheet.Load(System.String)">
            <summary>
            Loads the collection from a file with specified name.
            </summary>
            <param name="fileName">Name of a file.</param>
        </member>
        <member name="T:FastReport.SubreportObject">
            <summary>
            Represents a subreport object.
            </summary>
            <remarks>
            To create a subreport in code, you should create the report page first and 
            connect it to the subreport using the <see cref="P:FastReport.SubreportObject.ReportPage"/> property.
            </remarks>
            <example>The following example shows how to create a subreport object in code.
            <code>
            // create the main report page
            ReportPage reportPage = new ReportPage();
            reportPage.Name = "Page1";
            report.Pages.Add(reportPage);
            // create report title band
            reportPage.ReportTitle = new ReportTitleBand();
            reportPage.ReportTitle.Name = "ReportTitle1";
            reportPage.ReportTitle.Height = Units.Millimeters * 10;
            // add subreport on it
            SubreportObject subreport = new SubreportObject();
            subreport.Name = "Subreport1";
            subreport.Bounds = new RectangleF(0, 0, Units.Millimeters * 25, Units.Millimeters * 5);
            reportPage.ReportTitle.Objects.Add(subreport);
            // create subreport page
            ReportPage subreportPage = new ReportPage();
            subreportPage.Name = "SubreportPage1";
            report.Pages.Add(subreportPage);
            // connect the subreport to the subreport page
            subreport.ReportPage = subreportPage;
            </code>
            </example>
        </member>
        <member name="P:FastReport.SubreportObject.ReportPage">
            <summary>
            Gets or sets a report page that contains the subreport bands and objects.
            </summary>
        </member>
        <member name="P:FastReport.SubreportObject.PrintOnParent">
            <summary>
            Gets or sets a value indicating that subreport must print its objects on a parent band to which it belongs.
            </summary>
            <remarks>
            Default behavior of the subreport is to print subreport objects they own separate bands.
            </remarks>
        </member>
        <member name="M:FastReport.SubreportObject.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.SubreportObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.SubreportObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.SubreportObject"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.HorzAlign">
            <summary>
            Specifies the horizontal alignment of a text in the TextObject object.
            </summary>
        </member>
        <member name="F:FastReport.HorzAlign.Left">
            <summary>
            Specifies that text is aligned in the left of the layout rectangle.
            </summary>
        </member>
        <member name="F:FastReport.HorzAlign.Center">
            <summary>
            Specifies that text is aligned in the center of the layout rectangle.
            </summary>
        </member>
        <member name="F:FastReport.HorzAlign.Right">
            <summary>
            Specifies that text is aligned in the right of the layout rectangle.
            </summary>
        </member>
        <member name="F:FastReport.HorzAlign.Justify">
            <summary>
            Specifies that text is aligned in the left and right sides of the layout rectangle.
            </summary>
        </member>
        <member name="T:FastReport.VertAlign">
            <summary>
            Specifies the vertical alignment of a text in the TextObject object.
            </summary>
        </member>
        <member name="F:FastReport.VertAlign.Top">
            <summary>
            Specifies that text is aligned in the top of the layout rectangle.
            </summary>
        </member>
        <member name="F:FastReport.VertAlign.Center">
            <summary>
            Specifies that text is aligned in the center of the layout rectangle.
            </summary>
        </member>
        <member name="F:FastReport.VertAlign.Bottom">
            <summary>
            Specifies that text is aligned in the bottom of the layout rectangle.
            </summary>
        </member>
        <member name="T:FastReport.TextRenderType">
            <summary>
            The type of text renderer
            </summary>
        </member>
        <member name="F:FastReport.TextRenderType.Default">
            <summary>
            The default render
            </summary>
        </member>
        <member name="F:FastReport.TextRenderType.HtmlTags">
            <summary>
            Render with some html tags and stable logic
            </summary>
        </member>
        <member name="F:FastReport.TextRenderType.HtmlParagraph">
            <summary>
            Render with img tags, span etc. Experimental and unstable logic
            </summary>
        </member>
        <member name="T:FastReport.ParagraphFormat">
            <summary>
            The format of paragraph
            </summary>
        </member>
        <member name="P:FastReport.ParagraphFormat.FirstLineIndent">
            <summary>
            The first line on each paragraph, not effect if value less then  0
            </summary>
        </member>
        <member name="P:FastReport.ParagraphFormat.LineSpacing">
            <summary>
            The distance between lines, not effect if value less then 0
            </summary>
        </member>
        <member name="P:FastReport.ParagraphFormat.LineSpacingType">
            <summary>
            The spacing type for distance between line calculation
            </summary>
        </member>
        <member name="P:FastReport.ParagraphFormat.LineSpacingMultiple">
            <summary>
            The value for a multiplication line height for adding spacing
            </summary>
        </member>
        <member name="P:FastReport.ParagraphFormat.SkipFirstLineIndent">
            <summary>
            Skip the line indent in the first paragraph, for broken paragraphs
            </summary>
        </member>
        <member name="M:FastReport.ParagraphFormat.MultipleScale(System.Single)">
            <summary>
            clone with new scale;
            </summary>
            <param name="scale"></param>
            <returns></returns>
        </member>
        <member name="T:FastReport.LineSpacingType">
            <summary>
            The spacing type between lines
            </summary>
        </member>
        <member name="F:FastReport.LineSpacingType.Single">
            <summary>
            Single spacing, not effect from LineSpacing
            </summary>
        </member>
        <member name="F:FastReport.LineSpacingType.AtLeast">
            <summary>
            Minimal spacing in exactly size
            </summary>
        </member>
        <member name="F:FastReport.LineSpacingType.Exactly">
            <summary>
            The specific distance between the lines, for some exports, does not work if the distance value is too small.
            </summary>
        </member>
        <member name="F:FastReport.LineSpacingType.Multiple">
            <summary>
            The calculated distance between lines, for some exports, does not work if the distance value is too small.
            </summary>
        </member>
        <member name="T:FastReport.AutoShrinkMode">
            <summary>
            Specifies the behavior of the <b>AutoShrink</b> feature of <b>TextObject</b>.
            </summary>
        </member>
        <member name="F:FastReport.AutoShrinkMode.None">
            <summary>
            AutoShrink is disabled.
            </summary>
        </member>
        <member name="F:FastReport.AutoShrinkMode.FontSize">
            <summary>
            AutoShrink decreases the <b>Font.Size</b> property of the <b>TextObject</b>.
            </summary>
        </member>
        <member name="F:FastReport.AutoShrinkMode.FontWidth">
            <summary>
            AutoShrink decreases the <b>FontWidthRatio</b> property of the <b>TextObject</b>.
            </summary>
        </member>
        <member name="T:FastReport.Duplicates">
            <summary>
            Specifies how to display the duplicate values.
            </summary>
        </member>
        <member name="F:FastReport.Duplicates.Show">
            <summary>
            The <b>TextObject</b> can show duplicate values.
            </summary>
        </member>
        <member name="F:FastReport.Duplicates.Hide">
            <summary>
            The <b>TextObject</b> with duplicate value will be hidden.
            </summary>
        </member>
        <member name="F:FastReport.Duplicates.Clear">
            <summary>
            The <b>TextObject</b> with duplicate value will be shown but with no text.
            </summary>
        </member>
        <member name="F:FastReport.Duplicates.Merge">
            <summary>
            Several <b>TextObject</b> objects with the same value will be merged into one <b>TextObject</b> object.
            </summary>
        </member>
        <member name="T:FastReport.ProcessAt">
            <summary>
            Specifies how the report engine processes the text objects.
            </summary>
        </member>
        <member name="F:FastReport.ProcessAt.Default">
            <summary>
            Specifies the default process mode. The text object is processed just-in-time.
            </summary>
        </member>
        <member name="F:FastReport.ProcessAt.ReportFinished">
            <summary>
            Specifies that the text object must be processed when the entire report is finished. This mode
            can be used to print grand total value (which is normally calculated at the end of report) in the
            report title band.
            </summary>
        </member>
        <member name="F:FastReport.ProcessAt.ReportPageFinished">
            <summary>
            Specifies that the text object must be processed when the entire report page is finished. This mode
            can be used if the report template consists of several report pages.
            </summary>
        </member>
        <member name="F:FastReport.ProcessAt.PageFinished">
            <summary>
            Specifies that the text object must be processed when any report page is finished. This mode
            can be used to print the page total (which is normally calculated at the page footer) in the
            page header band.
            </summary>
        </member>
        <member name="F:FastReport.ProcessAt.ColumnFinished">
            <summary>
            Specifies that the text object must be processed when the column is finished. This mode
            can be used to print the column total (which is normally calculated at the column footer) in the
            column header band.
            </summary>
        </member>
        <member name="F:FastReport.ProcessAt.DataFinished">
            <summary>
            Specifies that the text object must be processed when the data block is finished. This mode can be
            used to print a total value in the data header (which is normally available
            in the data footer only).
            </summary>
        </member>
        <member name="F:FastReport.ProcessAt.GroupFinished">
            <summary>
            Specifies that the text object must be processed when the group is finished. This mode can be
            used to print a total value in the group header (which is normally available
            in the group footer only).
            </summary>
        </member>
        <member name="F:FastReport.ProcessAt.Custom">
            <summary>
            Specifies that the text object is processed manually when you call the <b>Engine.ProcessObject</b> 
            method in the report script.
            </summary>
        </member>
        <member name="T:FastReport.TextObjectBase">
            <summary>
            Base class for text objects such as <see cref="T:FastReport.TextObject"/> and <see cref="!:RichObject"/>.
            </summary>
            <remarks>
            This class implements common functionality of the text objects.
            </remarks>
        </member>
        <member name="P:FastReport.TextObjectBase.AllowExpressions">
            <summary>
            Gets or sets a value indicating that the object's text may contain expressions.
            </summary>
        </member>
        <member name="P:FastReport.TextObjectBase.Brackets">
            <summary>
            Gets or sets the symbols that will be used to find expressions in the object's text.
            </summary>
            <remarks>
            The default property value is "[,]". As you can see, the open and close symbols are 
            separated by the comma. You may use another symbols, for example: "&lt;,&gt;" or "&lt;%,%&gt;".
            You should use different open and close symbols.
            </remarks>
        </member>
        <member name="P:FastReport.TextObjectBase.Text">
            <summary>
            Gets or sets the object's text.
            </summary>
            <remarks>
            Text may contain expressions and data items, for example: "Today is [Date]". 
            When report is running, all expressions are calculated and replaced with actual 
            values, so the text would be "Today is 01.01.2008".
            </remarks>
        </member>
        <member name="P:FastReport.TextObjectBase.Padding">
            <summary>
            Gets or sets padding within the text object.
            </summary>
        </member>
        <member name="P:FastReport.TextObjectBase.HideZeros">
            <summary>
            Gets or sets a value indicating that zero values must be hidden.
            </summary>
        </member>
        <member name="P:FastReport.TextObjectBase.HideValue">
            <summary>
            Gets or sets a value that will be hidden.
            </summary>
            <remarks>
            Use this property to specify a value that you would like to hide. For example, specify "0"
            if you want to hide zero values, or use <see cref="P:FastReport.TextObjectBase.HideZeros"/> property to do this.
            <para/>You also may use this property to hide default DateTime values (such as 1/1/1900).
            In this case you need to specify a string containing both date and time, for example:
            "1/1/1900 0:00:00".
            <note type="caution">
            FastReport uses the <b>ToString</b> conversion to compare the expression value with this property.
            This conversion depends on regional settings selected in the Control Panel, so be aware of this
            if you going to distribute your report worldwide.
            </note>
            </remarks>
        </member>
        <member name="P:FastReport.TextObjectBase.NullValue">
            <summary>
            Gets or sets a string that will be displayed instead of a null value.
            </summary>
        </member>
        <member name="P:FastReport.TextObjectBase.Format">
            <summary>
            Gets or sets the formatter that will be used to format data in the Text object.
            </summary>
            <remarks>
            The default formatter does nothing, i.e. it shows expression values with no formatting.
            To set another formatting, create a new formatter and assign it to this property.
            <para/>If there are several expressions in the text, use the <see cref="P:FastReport.TextObjectBase.Formats"/> property
            to format each expression value.
            </remarks>
            <example>This example shows how to set currency formatter.
            <code>
            TextObject text1;
            text1.Format = new CurrencyFormat();
            </code>
            </example>
        </member>
        <member name="P:FastReport.TextObjectBase.ProcessAt">
            <summary>
            Gets or sets a value that specifies how the report engine processes this text object.
            </summary>
            <remarks>
            Use this property to perform such task as "print a total value in the group header". Normally,
            all total values are calculated in the footers (for example, in a group footer). If you try to print
            a total value in the group header, you will get 0. If you set this property to 
            <b>ProcessAt.DataFinished</b>, FastReport will do the following:
            <list type="bullet">
              <item>
                <description>print the object (with wrong value);</description>
              </item>
              <item>
                <description>print all related data rows;</description>
              </item>
              <item>
                <description>calculate the correct object's value and replace old (wrong) value with the new one.</description>
              </item>
            </list>
            <note type="caution">
            This option will not work if you set the <see cref="P:FastReport.Report.UseFileCache"/> to <b>true</b>.
            </note>
            </remarks>
        </member>
        <member name="P:FastReport.TextObjectBase.Formats">
            <summary>
            Gets the collection of formatters.
            </summary>
            <remarks>
            This property is used to set format for each expression contained in the text.
            For example, if the <b>TextObject</b> contains two expressions: 
            <para/><i>Today is [Date]; Page [PageN]</i>
            <para/>you can use the following code to format these expressions separately:
            <code>
            text1.Formats.Clear();
            text1.Formats.Add(new DateFormat());
            text1.Formats.Add(new NumberFormat());
            </code>
            </remarks>
        </member>
        <member name="P:FastReport.TextObjectBase.Duplicates">
            <summary>
            Gets or sets a value that determines how to display duplicate values.
            </summary>
        </member>
        <member name="P:FastReport.TextObjectBase.Value">
            <summary>
            Gets a value of expression contained in the object's text.
            </summary>
        </member>
        <member name="P:FastReport.TextObjectBase.Editable">
            <summary>
            Gets or sets editable for pdf export
            </summary>
        </member>
        <member name="M:FastReport.TextObjectBase.DeserializeSubItems(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObjectBase.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObjectBase.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObjectBase.ExtractMacros">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObjectBase.GetDisplayText">
            <summary>
            Returns the text to display.
            </summary>
            <returns>The text to display.</returns>
            <remarks>This method is used to display simplified DB field names in the designer. In runtime, it returns the Text property value.</remarks>
        </member>
        <member name="M:FastReport.TextObjectBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.TextObjectBase"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.TextOutline">
            <summary>
            Represents text outline.
            </summary>
        </member>
        <member name="P:FastReport.TextOutline.Enabled">
            <summary>
            Gets or sets a value indicating that outline is enabled.
            </summary>
        </member>
        <member name="P:FastReport.TextOutline.DrawBehind">
            <summary>
            Enable or disable draw the outline behind of text.
            </summary>
        </member>
        <member name="P:FastReport.TextOutline.Color">
            <summary>
            Gets or sets the outline color.
            </summary>
        </member>
        <member name="P:FastReport.TextOutline.Width">
            <summary>
            Gets or sets the outline width.
            </summary>
        </member>
        <member name="P:FastReport.TextOutline.Style">
            <summary>
            Specifies the style of an outline.
            </summary>
        </member>
        <member name="M:FastReport.TextOutline.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.TextOutline"/> class.
            </summary>
        </member>
        <member name="M:FastReport.TextOutline.#ctor(System.Boolean,System.Drawing.Color,System.Single,System.Drawing.Drawing2D.DashStyle,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.TextOutline"/> class with specified parameters.
            </summary>
            <param name="enabled">True if outline enabled.</param>
            <param name="color">Outline color.</param>
            <param name="width">Outline width.</param>
            <param name="style">Outline style.</param>
            <param name="drawbehind">True if outline should be drawn behind text.</param>
        </member>
        <member name="M:FastReport.TextOutline.Assign(FastReport.TextOutline)">
            <summary>
            Copies the content of another TextOutline.
            </summary>
            <param name="src">The TextOutline instance to copy the contents from.</param>
        </member>
        <member name="M:FastReport.TextOutline.Clone">
            <summary>
            Creates the exact copy of this outline.
            </summary>
            <returns>Copy of this outline.</returns>
        </member>
        <member name="M:FastReport.TextOutline.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.TextOutline)">
            <summary>
            Serializes the TextOutline.
            </summary>
            <param name="writer">Writer object.</param>
            <param name="prefix">TextOutline property name.</param>
            <param name="diff">Another TextOutline to compare with.</param>
        </member>
        <member name="T:FastReport.TypeConverters.ComponentRefConverter">
            <summary>
            Provides a type converter for a property representing a reference to another component in a report.
            </summary>
        </member>
        <member name="M:FastReport.TypeConverters.ComponentRefConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeConverters.ComponentRefConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeConverters.ComponentRefConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeConverters.ComponentRefConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.TypeConverters.DataTypeConverter">
            <summary>
            Provides a type converter for a property representing a data type.
            </summary>
        </member>
        <member name="M:FastReport.TypeConverters.DataTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeConverters.DataTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeConverters.DataTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeConverters.DataTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.TypeConverters.FRExpandableObjectConverter">
            <summary>
            Provides a type converter for a property representing an expandable object.
            </summary>
        </member>
        <member name="M:FastReport.TypeConverters.FRExpandableObjectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeConverters.FRExpandableObjectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeConverters.FRExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeConverters.FRExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.GraphicCache">
            <summary>
            Represents a cache of graphics objects such as pens, brushes, fonts and text formats.
            </summary>
            <remarks>
            Cache holds all used graphics objects. There is no need to dispose objects returned
            by GetXXX calls.
            </remarks>
            <example>This example demonstrates how to use graphic cache.
            <code>
            public void Draw(FRPaintEventArgs e)
            {
              Brush brush = e.Cache.GetBrush(BackColor);
              Pen pen = e.Cache.GetPen(BorderColor, 1, BorderStyle);
              e.Graphics.FillRectangle(brush, Bounds);
              e.Graphics.DrawRectangle(pen, Bounds);
            }
            </code>
            </example>
        </member>
        <member name="M:FastReport.GraphicCache.GetPen(System.Drawing.Color,System.Single,System.Drawing.Drawing2D.DashStyle)">
            <summary>
            Gets a pen with specified settings.
            </summary>
            <param name="color">Color of a pen.</param>
            <param name="width">Width of a pen.</param>
            <param name="style">Dash style of a pen.</param>
            <returns>The <b>Pen</b> object.</returns>
        </member>
        <member name="M:FastReport.GraphicCache.GetPen(System.Drawing.Color,System.Single,System.Drawing.Drawing2D.DashStyle,System.Drawing.Drawing2D.LineJoin)">
            <summary>
            Gets a pen with specified settings.
            </summary>
            <param name="color">Color of a pen.</param>
            <param name="width">Width of a pen.</param>
            <param name="style">Dash style of a pen.</param>
            <param name="lineJoin">Line join of a pen.</param>
            <returns>The <b>Pen</b> object.</returns>
        </member>
        <member name="M:FastReport.GraphicCache.GetBrush(System.Drawing.Color)">
            <summary>
            Gets a brush with specified color.
            </summary>
            <param name="color">Color of a brush.</param>
            <returns>The <b>SolidBrush</b> object.</returns>
        </member>
        <member name="M:FastReport.GraphicCache.GetFont(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle)">
            <summary>
            Gets a font with specified settings.
            </summary>
            <param name="name">Family of a font.</param>
            <param name="size">Size of a font.</param>
            <param name="style">Style of a font.</param>
            <returns>The <b>Font</b> object.</returns>
        </member>
        <member name="M:FastReport.GraphicCache.GetStringFormat(System.Drawing.StringAlignment,System.Drawing.StringAlignment,System.Drawing.StringTrimming,System.Drawing.StringFormatFlags,System.Single,System.Single)">
            <summary>
            Gets a string format with specified settings.
            </summary>
            <param name="align">Text alignment information on the vertical plane.</param>
            <param name="lineAlign">Line alignment on the horizontal plane.</param>
            <param name="trimming"><b>StringTrimming</b> enumeration.</param>
            <param name="flags"><b>StringFormatFlags</b> enumeration that contains formatting information.</param>
            <param name="firstTab">The number of spaces between the beginning of a line of text and the first tab stop.</param>
            <param name="tabWidth">Distance between tab stops.</param>
            <returns>The <b>StringFormat</b> object.</returns>
        </member>
        <member name="M:FastReport.GraphicCache.GetStringFormat(System.Drawing.StringAlignment,System.Drawing.StringAlignment,System.Drawing.StringTrimming,System.Drawing.StringFormatFlags,System.Single,FastReport.Utils.FloatCollection,System.Single)">
            <summary>
            Gets a string format with specified settings.
            </summary>
            <param name="align">Text alignment information on the vertical plane.</param>
            <param name="lineAlign">Line alignment on the horizontal plane.</param>
            <param name="trimming"><b>StringTrimming</b> enumeration.</param>
            <param name="flags"><b>StringFormatFlags</b> enumeration that contains formatting information.</param>
            <param name="firstTab">The number of spaces between the beginning of a line of text and the first tab stop.</param>
            <param name="tabWidth">Distance between tab stops.</param>
            <param name="defaultTab">Default distance between default tabs stops.</param>
            <returns>The <b>StringFormat</b> object.</returns>
        </member>
        <member name="M:FastReport.GraphicCache.Dispose">
            <summary>
            Disposes resources used by this object.
            </summary>
        </member>
        <member name="M:FastReport.GraphicCache.#ctor">
            <summary>
            Initializes a new instance of the <b>GraphicCache</b> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Variant">
            <summary>
            A strongly typed object that readily casts an intrinsic
            object to the other intrinsic types when possible.
            </summary>
            <remarks>
            <para>The Variant class is an intrinsic object container structure
            inspired by Visual Basic 6.0's Variant. The key features
            of a Variant class include the ability to perform typecasts and
            arithmetic between types that are not normally considered compatible.
            For example, if a Variant class contains a string describing a
            number, such as "1.1", then floating point arithmetic can be
            performed on it.</para>
            <para>Variants are normally considered dangerous because they
            strip away the effectiveness of type safety, which is the
            reason why the Visual Basic 6.0 Variant was left out of
            Visual Basic .NET. However, this implementation restores the
            Variant structure, both as a proof of concept and as a
            restoration of the utility and positive merits of the Variant
            where it can be used responsibly.</para>
            </remarks>
        </member>
        <member name="M:FastReport.Variant.#ctor(System.Object)">
            <summary>
            Creates a strongly typed object that readily casts a primitive
            object to the other primitive types when possible.
            </summary>
        </member>
        <member name="P:FastReport.Variant.Value">
            <summary>
            The actual value being stored in its original <see cref="T:System.Type"/>,
            returned as an <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="P:FastReport.Variant.Type">
            <summary>
            The <see cref="T:System.Type"/> of the <see cref="P:FastReport.Variant.Value"/> property.
            </summary>
        </member>
        <member name="M:FastReport.Variant.GetTypeCode">
            <summary>
            Returns the <see cref="T:System.TypeCode"/> for this instance.
            </summary>
            <returns>The enumerated constant that is the <see cref="T:System.TypeCode"/>
            of the class or value type that implements this interface.</returns>
        </member>
        <member name="P:FastReport.Variant.String">
            <summary>
            Returns the string equivalent of the <see cref="P:FastReport.Variant.Value"/> property.
            </summary>
        </member>
        <member name="M:FastReport.Variant.ToType(System.Type)">
            <summary>
            Attempts to convert or typecast to the specified type.
            </summary>
            <param name="type">The type to convert or cast to.</param>
            <returns>The object after typecasting.</returns>
        </member>
        <member name="M:FastReport.Variant.ToType(System.Type,System.IFormatProvider)">
            <summary>
            Attempts to convert or typecast to the specified type.
            </summary>
            <param name="type">The type to convert or cast to.</param>
            <param name="provider">An <see cref="T:System.IFormatProvider"/>
            interface implementation that supplies culture-specific formatting information.</param>
            <returns>The object after typecasting.</returns>
        </member>
        <member name="P:FastReport.Variant.ImplementsIConvertible">
            <summary>
            Returns true if the <see cref="P:FastReport.Variant.Value"/> property implements <see cref="T:System.IConvertible"/>
            </summary>
        </member>
        <member name="P:FastReport.Variant.IsNumeric">
            <summary>
            Returns true if the <see cref="P:FastReport.Variant.Value"/> property
            is a numeric intrinsic value.
            </summary>
        </member>
        <member name="P:FastReport.Variant.IsNumberable">
            <summary>
            Returns true if the <see cref="P:FastReport.Variant.Value"/> property
            is a numeric intrinsic value or else can be parsed into
            a numeric intrinsic value.
            </summary>
        </member>
        <member name="P:FastReport.Variant.IsDate">
            <summary>
            Returns true if the value is a date or can be parsed into a date.
            </summary>
        </member>
        <member name="P:FastReport.Variant.IsTimeSpan">
            <summary>
            Returns true if the value is a TimeSpan.
            </summary>
        </member>
        <member name="M:FastReport.Variant.ToBoolean">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.Boolean"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance to
            an equivalent <see cref="T:System.Boolean"/> value.
            </summary>
        </member>
        <member name="M:FastReport.Variant.ToBoolean(System.IFormatProvider)">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.Boolean"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance to
            an equivalent <see cref="T:System.Boolean"/> value using the specified culture-specific
            formatting information.
            </summary>
            <param name="formatProvider">The culture-specific formatting information.</param>
        </member>
        <member name="M:FastReport.Variant.ToByte">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.Byte"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent 8-bit unsigned integer.
            </summary>
        </member>
        <member name="M:FastReport.Variant.ToByte(System.IFormatProvider)">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.Byte"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent 8-bit unsigned integer using the specified
            culture-specific formatting information.
            </summary>
            <param name="formatProvider">The culture-specific formatting information.</param>
        </member>
        <member name="M:FastReport.Variant.ToInt16">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.Int16"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent 16-bit signed integer.
            </summary>
        </member>
        <member name="M:FastReport.Variant.ToInt16(System.IFormatProvider)">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.Boolean"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance to
            an equivalent 16-bit signed integer using the specified
            culture-specific formatting information.
            </summary>
            <param name="formatProvider">The culture-specific formatting information.</param>
        </member>
        <member name="M:FastReport.Variant.ToInt32">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.Int32"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent 32-bit signed integer.
            </summary>
        </member>
        <member name="M:FastReport.Variant.ToInt32(System.IFormatProvider)">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.Int32"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent 32-bit signed integer using the specified
            culture-specific formatting information.
            </summary>
            <param name="formatProvider">The culture-specific formatting information.</param>
        </member>
        <member name="M:FastReport.Variant.ToInt64">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.Int64"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent 64-bit signed integer.
            </summary>
        </member>
        <member name="M:FastReport.Variant.ToInt64(System.IFormatProvider)">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.Int64"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent 64-bit signed integer using the specified
            culture-specific formatting information.
            </summary>
            <param name="formatProvider">The culture-specific formatting information.</param>
        </member>
        <member name="M:FastReport.Variant.ToDouble">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.Double"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent double-precision floating-point number.
            </summary>
        </member>
        <member name="M:FastReport.Variant.ToDouble(System.IFormatProvider)">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.Double"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent double-precision floating-point number using the
            specified culture-specific formatting information.
            </summary>
            <param name="formatProvider">The culture-specific formatting information.</param>
        </member>
        <member name="M:FastReport.Variant.ToSingle">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.Single"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent single-precision floating-point number.
            </summary>
        </member>
        <member name="M:FastReport.Variant.ToSingle(System.IFormatProvider)">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.Single"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent single-precision floating-point number using the
            specified culture-specific formatting information.
            </summary>
            <param name="formatProvider">The culture-specific formatting information.</param>
        </member>
        <member name="M:FastReport.Variant.ToDecimal">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.Decimal"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance to
            an equivalent Decimal number.
            </summary>
        </member>
        <member name="M:FastReport.Variant.ToDecimal(System.IFormatProvider)">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.Decimal"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance to
            an equivalent Decimal number using the specified culture-specific
            formatting information.
            </summary>
            <param name="formatProvider">The culture-specific formatting information.</param>
        </member>
        <member name="M:FastReport.Variant.ToSByte">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.SByte"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent 8-bit signed integer.
            </summary>
        </member>
        <member name="M:FastReport.Variant.ToSByte(System.IFormatProvider)">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.SByte"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent 8-bit signed integer using the specified
            culture-specific formatting information.
            </summary>
            <param name="formatProvider">The culture-specific formatting information.</param>
        </member>
        <member name="M:FastReport.Variant.ToUInt16">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.UInt16"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent 16-bit unsigned integer.
            </summary>
        </member>
        <member name="M:FastReport.Variant.ToUInt16(System.IFormatProvider)">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.UInt16"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent 16-bit unsigned integer using the specified
            culture-specific formatting information.
            </summary>
            <param name="formatProvider">The culture-specific formatting information.</param>
        </member>
        <member name="M:FastReport.Variant.ToUInt32">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.UInt32"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent 32-bit unsigned integer.
            </summary>
        </member>
        <member name="M:FastReport.Variant.ToUInt32(System.IFormatProvider)">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.UInt32"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent 32-bit unsigned integer using the specified
            culture-specific formatting information.
            </summary>
            <param name="formatProvider">The culture-specific formatting information.</param>
        </member>
        <member name="M:FastReport.Variant.ToUInt64">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.UInt64"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent 64-bit unsigned integer.
            </summary>
        </member>
        <member name="M:FastReport.Variant.ToUInt64(System.IFormatProvider)">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.UInt64"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent 64-bit unsigned integer using the specified
            culture-specific formatting information.
            </summary>
            <param name="formatProvider">The culture-specific formatting information.</param>
        </member>
        <member name="M:FastReport.Variant.ToDateTime">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.DateTime"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance to
            an equivalent DateTime.
            </summary>
        </member>
        <member name="M:FastReport.Variant.ToDateTime(System.IFormatProvider)">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.DateTime"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance to
            an equivalent DateTime using the specified culture-specific
            formatting information.
            </summary>
            <param name="formatProvider">The culture-specific formatting information.</param>
        </member>
        <member name="M:FastReport.Variant.ToTimeSpan">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.TimeSpan"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance to
            an equivalent TimeSpan.
            </summary>
        </member>
        <member name="M:FastReport.Variant.ToTimeSpan(System.IFormatProvider)">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.TimeSpan"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance to
            an equivalent TimeSpan using the specified culture-specific
            formatting information.
            </summary>
            <param name="formatProvider">The culture-specific formatting information.</param>
        </member>
        <member name="M:FastReport.Variant.ToDateTimeOffset">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.DateTimeOffset"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance to
            an equivalent DateTimeOffset.
            </summary>
        </member>
        <member name="M:FastReport.Variant.ToDateTimeOffset(System.IFormatProvider)">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.DateTimeOffset"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance to
            an equivalent DateTimeOffset using the specified culture-specific
            formatting information.
            </summary>
            <param name="formatProvider">The culture-specific formatting information.</param>
        </member>
        <member name="M:FastReport.Variant.ToChar">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.Char"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent Unicode character.
            </summary>
        </member>
        <member name="M:FastReport.Variant.ToChar(System.IFormatProvider)">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.Char"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent Unicode character using the specified
            culture-specific formatting information.
            </summary>
            <param name="formatProvider">The culture-specific formatting information.</param>
        </member>
        <member name="M:FastReport.Variant.op_Addition(FastReport.Variant,System.Object)">
            <summary>
            Addition operator.
            </summary>
            <remarks>
            If the value on the right is a <see cref="T:System.String"/>
            or a <see cref="T:System.Char"/>,
            the Variant is converted to a string and appended.
            If the value on the right or the Variant
            is a <see cref="T:System.DateTime"/>, arithmetic
            is performed on the <see cref="P:System.DateTime.Ticks"/> property and the
            resulting value is set to the DateTime type.
            Otherwise, if the value on the right is a number, both
            the Variant and the value on the right are
            converted to a <see cref="T:System.Double"/>, the arithmetic
            is performed, and the resulting value is converted back to the
            original type that the Variant previously represented.
            If the type that the Variant previously represented
            cannot contain the resulting value--such as if the type is a
            <see cref="T:System.UInt32"/> and the value is <c>-12</c>--then the
            type will be converted to a type that can contain
            the value, such as <see cref="T:System.Int32"/>.
            </remarks>
            <param name="subjectVariant"></param>
            <param name="value"></param>
            <returns>A new <see cref="T:FastReport.Variant"/> containing the resulting value.</returns>
        </member>
        <member name="M:FastReport.Variant.op_Subtraction(FastReport.Variant,System.Object)">
            <summary>
            Subtraction operator.
            </summary>
            <remarks>
            If the value on the right or the Variant
            is a <see cref="T:System.DateTime"/>, arithmetic
            is performed on the <see cref="P:System.DateTime.Ticks"/> property and the
            resulting value is set to the DateTime type.
            Otherwise, if the value on the right is a number, both
            the Variant and the value on the right are
            converted to a <see cref="T:System.Double"/>, the arithmetic
            is performed, and the resulting value is converted back to the
            original type that the Variant previously represented.
            If the type that the Variant previously represented
            cannot contain the resulting value--such as if the type is a
            <see cref="T:System.UInt32"/> and the value is <c>-12</c>--then the
            type will be converted to a type that can contain
            the value, such as <see cref="T:System.Int32"/>.
            </remarks>
            <param name="subjectVariant"></param>
            <param name="value"></param>
            <returns>A new <see cref="T:FastReport.Variant"/> containing the resulting value.</returns>
        </member>
        <member name="M:FastReport.Variant.op_UnaryNegation(FastReport.Variant)">
            <summary>
            Unary minus operator.
            </summary>
        </member>
        <member name="M:FastReport.Variant.op_GreaterThan(FastReport.Variant,System.Object)">
            <summary>
            Greater than operator.
            </summary>
        </member>
        <member name="M:FastReport.Variant.op_GreaterThanOrEqual(FastReport.Variant,System.Object)">
            <summary>
            Greater than or equal operator.
            </summary>
        </member>
        <member name="M:FastReport.Variant.op_LessThan(FastReport.Variant,System.Object)">
            <summary>
            Less than operator.
            </summary>
        </member>
        <member name="M:FastReport.Variant.op_LessThanOrEqual(FastReport.Variant,System.Object)">
            <summary>
            Less than or equal operator.
            </summary>
        </member>
        <member name="M:FastReport.Variant.op_Multiply(FastReport.Variant,System.Object)">
            <summary>
            Multiplication operator.
            </summary>
            <remarks>
            If the value on the right or the Variant
            is a <see cref="T:System.DateTime"/>, arithmetic
            is performed on the <see cref="P:System.DateTime.Ticks"/> property and the
            resulting value is set to the DateTime type.
            Otherwise, if the value on the right is a number, both
            the Variant and the value on the right are
            converted to a <see cref="T:System.Double"/>, the arithmetic
            is performed, and the resulting value is converted back to the
            original type that the Variant previously represented.
            If the type that the Variant previously represented
            cannot contain the resulting value--such as if the type is a
            <see cref="T:System.UInt32"/> and the value is <c>-12</c>--then the
            type will be converted to a type that can contain
            the value, such as <see cref="T:System.Int32"/>.
            </remarks>
            <param name="subjectVariant"></param>
            <param name="value"></param>
            <returns>A new <see cref="T:FastReport.Variant"/> containing the resulting value.</returns>
        </member>
        <member name="M:FastReport.Variant.op_Division(FastReport.Variant,System.Object)">
            <summary>
            Division operator.
            </summary>
            <remarks>
            If the value on the right or the Variant
            is a <see cref="T:System.DateTime"/>, arithmetic
            is performed on the <see cref="P:System.DateTime.Ticks"/> property and the
            resulting value is set to the DateTime type.
            Otherwise, if the value on the right is a number, both
            the Variant and the value on the right are
            converted to a <see cref="T:System.Double"/>, the arithmetic
            is performed, and the resulting value is converted back to the
            original type that the Variant previously represented.
            If the type that the Variant previously represented
            cannot contain the resulting value--such as if the type is a
            <see cref="T:System.UInt32"/> and the value is <c>-12</c>--then the
            type will be converted to a type that can contain
            the value, such as <see cref="T:System.Int32"/>.
            </remarks>
            <param name="subjectVariant"></param>
            <param name="value"></param>
            <returns>A new <see cref="T:FastReport.Variant"/> containing the resulting value.</returns>
        </member>
        <member name="M:FastReport.Variant.op_Modulus(FastReport.Variant,System.Object)">
            <summary>
            Modulus operator.
            </summary>
            <remarks>
            If the value on the right or the Variant
            is a <see cref="T:System.DateTime"/>, arithmetic
            is performed on the <see cref="P:System.DateTime.Ticks"/> property and the
            resulting value is set to the DateTime type.
            Otherwise, if the value on the right is a number, both
            the Variant and the value on the right are
            converted to a <see cref="T:System.Double"/>, the arithmetic
            is performed, and the resulting value is converted back to the
            original type that the Variant previously represented.
            If the type that the Variant previously represented
            cannot contain the resulting value--such as if the type is a
            <see cref="T:System.UInt32"/> and the value is <c>-12</c>--then the
            type will be converted to a type that can contain
            the value, such as <see cref="T:System.Int32"/>.
            </remarks>
            <param name="subjectVariant"></param>
            <param name="value"></param>
            <returns>A new <see cref="T:FastReport.Variant"/> containing the resulting value.</returns>
        </member>
        <member name="M:FastReport.Variant.op_BitwiseAnd(FastReport.Variant,System.Object)">
            <summary>
            Bitwise And operator.
            </summary>
            <remarks>
            If the value on the right or the Variant
            is a <see cref="T:System.DateTime"/>, arithmetic
            is performed on the <see cref="P:System.DateTime.Ticks"/> property and the
            resulting value is set to the DateTime type.
            Otherwise, if the value on the right is a number, both
            the Variant and the value on the right are
            converted to a <see cref="T:System.Double"/>, the arithmetic
            is performed, and the resulting value is converted back to the
            original type that the Variant previously represented.
            If the type that the Variant previously represented
            cannot contain the resulting value--such as if the type is a
            <see cref="T:System.UInt32"/> and the value is <c>-12</c>--then the
            type will be converted to a type that can contain
            the value, such as <see cref="T:System.Int32"/>.
            </remarks>
            <param name="subjectVariant"></param>
            <param name="value"></param>
            <returns>A new <see cref="T:FastReport.Variant"/> containing the resulting value.</returns>
        </member>
        <member name="M:FastReport.Variant.op_BitwiseOr(FastReport.Variant,System.Object)">
            <summary>
            Bitwise Or operator.
            </summary>
            <remarks>
            If the value on the right or the Variant
            is a <see cref="T:System.DateTime"/>, arithmetic
            is performed on the <see cref="P:System.DateTime.Ticks"/> property and the
            resulting value is set to the DateTime type.
            Otherwise, if the value on the right is a number, both
            the Variant and the value on the right are
            converted to a <see cref="T:System.Double"/>, the arithmetic
            is performed, and the resulting value is converted back to the
            original type that the Variant previously represented.
            If the type that the Variant previously represented
            cannot contain the resulting value--such as if the type is a
            <see cref="T:System.UInt32"/> and the value is <c>-12</c>--then the
            type will be converted to a type that can contain
            the value, such as <see cref="T:System.Int32"/>.
            </remarks>
            <param name="subjectVariant"></param>
            <param name="value"></param>
            <returns>A new <see cref="T:FastReport.Variant"/> containing the resulting value.</returns>
        </member>
        <member name="M:FastReport.Variant.op_Inequality(FastReport.Variant,System.Object)">
            <summary>
            Inequality operator.
            </summary>
            <param name="subjectVariant"></param>
            <param name="value"></param>
            <returns>
            The opposite of ==
            </returns>
        </member>
        <member name="M:FastReport.Variant.op_Equality(FastReport.Variant,System.Object)">
            <summary>
            <para>Equality operator.</para>
            <para>First attempts to compare the left value after
            temporarily converting it to the type of the right value.
            If the conversion cannot occur, such as if the value is not an
            intrinsic value type, the comparison occurs at the <see cref="T:System.Object"/>
            level using <b>Object.Equals</b>.</para>
            </summary>
            <param name="subjectVariant"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Variant.op_Equality(FastReport.Variant,System.String)">
            <summary>
            <para>Equality operator.</para>
            </summary>
            <param name="subjectVariant"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Variant.op_Inequality(FastReport.Variant,System.String)">
            <summary>
            <para>Equality operator.</para>
            </summary>
            <param name="subjectVariant"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Variant.ToString">
            <summary>
            Returns <see cref="P:FastReport.Variant.String"/> property unless the value on the right
            is null. If the value on the right is null, returns "".
            </summary>
            <returns></returns>
        </member>
        <member name="M:FastReport.Variant.ToString(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent <see cref="P:FastReport.Variant.String"/>
            using the specified culture-specific formatting information.
            </summary>
            <param name="formatProvider"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Variant.GetHashCode">
            <summary>
            See <see cref="M:System.Object.GetHashCode"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FastReport.Variant.Equals(System.Object)">
            <summary>
            See <see cref="M:System.Object.Equals(System.Object)"/>.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Variant.CBln(System.Object)">
            <summary>
            Converts an object to a boolean.
            For any type, if null, returns false.
            For Boolean: true/false.
            For String: "", "false", "0", etc. == false;
              "1", "true", etc. == true, else true.
            For numeric intrinsics: 0 == false, else true.
            For any other non-null object, returns true.
            </summary>
            <param name="bln">The string to be converted</param>
            <returns>The boolean value of this string.</returns>
        </member>
        <member name="M:FastReport.Variant.op_Implicit(FastReport.Variant)~System.String">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(System.String)~FastReport.Variant">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(FastReport.Variant)~System.Char">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(System.Char)~FastReport.Variant">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(FastReport.Variant)~System.Byte">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(System.Byte)~FastReport.Variant">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(FastReport.Variant)~System.SByte">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(System.SByte)~FastReport.Variant">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(FastReport.Variant)~System.Int16">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(System.Int16)~FastReport.Variant">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(FastReport.Variant)~System.UInt16">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(System.UInt16)~FastReport.Variant">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(FastReport.Variant)~System.Int32">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(System.Int32)~FastReport.Variant">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(FastReport.Variant)~System.UInt32">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(System.UInt32)~FastReport.Variant">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(FastReport.Variant)~System.Int64">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(System.Int64)~FastReport.Variant">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(FastReport.Variant)~System.UInt64">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(System.UInt64)~FastReport.Variant">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(FastReport.Variant)~System.Single">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(System.Single)~FastReport.Variant">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(FastReport.Variant)~System.Double">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(System.Double)~FastReport.Variant">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(FastReport.Variant)~System.Decimal">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(System.Decimal)~FastReport.Variant">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(FastReport.Variant)~System.Boolean">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(System.Boolean)~FastReport.Variant">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(FastReport.Variant)~System.DateTime">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(System.DateTime)~FastReport.Variant">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(FastReport.Variant)~System.TimeSpan">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(System.TimeSpan)~FastReport.Variant">
            
        </member>
        <member name="T:FastReport.WatermarkImageSize">
            <summary>
            Specifies the watermark image size mode.
            </summary>
        </member>
        <member name="F:FastReport.WatermarkImageSize.Normal">
            <summary>
            Specifies the normal (original) size.
            </summary>
        </member>
        <member name="F:FastReport.WatermarkImageSize.Center">
            <summary>
            Specifies the centered image.
            </summary>
        </member>
        <member name="F:FastReport.WatermarkImageSize.Stretch">
            <summary>
            Specifies the stretched image.
            </summary>
        </member>
        <member name="F:FastReport.WatermarkImageSize.Zoom">
            <summary>
            Specifies the stretched image that keeps its aspect ratio.
            </summary>
        </member>
        <member name="F:FastReport.WatermarkImageSize.Tile">
            <summary>
            Specifies the tiled image.
            </summary>
        </member>
        <member name="T:FastReport.WatermarkTextRotation">
            <summary>
            Specifies the watermark text rotation.
            </summary>
        </member>
        <member name="F:FastReport.WatermarkTextRotation.Horizontal">
            <summary>
            Specifies a horizontal text.
            </summary>
        </member>
        <member name="F:FastReport.WatermarkTextRotation.Vertical">
            <summary>
            Specifies a vertical text.
            </summary>
        </member>
        <member name="F:FastReport.WatermarkTextRotation.ForwardDiagonal">
            <summary>
            Specifies a diagonal text.
            </summary>
        </member>
        <member name="F:FastReport.WatermarkTextRotation.BackwardDiagonal">
            <summary>
            Specifies a backward diagonal text.
            </summary>
        </member>
        <member name="T:FastReport.Watermark">
            <summary>
            Represents the report page watermark.
            </summary>
            <remarks>
            Watermark can draw text and/or image behind the page objects on in front of them. To enable
            watermark, set its <b>Enabled</b> property to <b>true</b>.
            </remarks>
        </member>
        <member name="P:FastReport.Watermark.Enabled">
            <summary>
            Gets or sets avalue indicating that watermark is enabled.
            </summary>
        </member>
        <member name="P:FastReport.Watermark.Image">
            <summary>
            Gets or sets the watermark image.
            </summary>
        </member>
        <member name="P:FastReport.Watermark.ImageSize">
            <summary>
            Gets or sets the watermark image size mode.
            </summary>
        </member>
        <member name="P:FastReport.Watermark.ImageTransparency">
            <summary>
            Gets or sets an image transparency.
            </summary>
            <remarks>
            Valid values are 0..1. 1 means totally transparent image.
            </remarks>
        </member>
        <member name="P:FastReport.Watermark.Text">
            <summary>
            Gets or sets the watermark text.
            </summary>
        </member>
        <member name="P:FastReport.Watermark.Font">
            <summary>
            Gets or sets a font of the watermark text.
            </summary>
        </member>
        <member name="P:FastReport.Watermark.TextFill">
            <summary>
            Gets or sets a text fill.
            </summary>
        </member>
        <member name="P:FastReport.Watermark.TextRotation">
            <summary>
            Gets or sets a text rotation.
            </summary>
        </member>
        <member name="P:FastReport.Watermark.ShowTextOnTop">
            <summary>
            Gets or sets a value indicates that the text should be displayed on top of all page objects.
            </summary>
        </member>
        <member name="P:FastReport.Watermark.ShowImageOnTop">
            <summary>
            Gets or sets a value indicates that the image should be displayed on top of all page objects.
            </summary>
        </member>
        <member name="P:FastReport.Watermark.PictureObject">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.Watermark.DrawImage(FastReport.Utils.FRPaintEventArgs,System.Drawing.RectangleF,FastReport.Report,System.Boolean)">
            <summary>
            Draws watermark image.
            </summary>
            <param name="e"></param>
            <param name="displayRect"></param>
            <param name="report"></param>
            <param name="isPrinting"></param>
        </member>
        <member name="M:FastReport.Watermark.DrawText(FastReport.Utils.FRPaintEventArgs,System.Drawing.RectangleF,FastReport.Report,System.Boolean)">
            <summary>
            Draws watermark text.
            </summary>
            <param name="e"></param>
            <param name="displayRect"></param>
            <param name="report"></param>
            <param name="isPrinting"></param>
        </member>
        <member name="M:FastReport.Watermark.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.Watermark)">
            <summary>
            Serializes the watermark.
            </summary>
            <param name="writer">Writer object.</param>
            <param name="prefix">The watermark property name.</param>
            <param name="c">Another Watermark object to compare with.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.Watermark.Dispose">
            <summary>
            Disposes resources used by the watermark.
            </summary>
        </member>
        <member name="M:FastReport.Watermark.Assign(FastReport.Watermark)">
            <summary>
            Assigns values from another source.
            </summary>
            <param name="source">Source to assign from.</param>
        </member>
        <member name="M:FastReport.Watermark.Clone">
            <summary>
            Creates exact copy of this <b>Watermark</b>.
            </summary>
            <returns>Copy of this watermark.</returns>
        </member>
        <member name="M:FastReport.Watermark.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Watermark"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.ZipCodeObject">
            <summary>
            Represents a zip code object.
            </summary>
            <remarks>
            This object is mainly used in Russia to print postal index on envelopes. It complies with the
            GOST R 51506-99.
            </remarks>
        </member>
        <member name="P:FastReport.ZipCodeObject.SegmentWidth">
            <summary>
            Gets or sets the width of a single zipcode segment, in pixels.
            </summary>
        </member>
        <member name="P:FastReport.ZipCodeObject.SegmentHeight">
            <summary>
            Gets or sets the height of a single zipcode segment, in pixels.
            </summary>
        </member>
        <member name="P:FastReport.ZipCodeObject.Spacing">
            <summary>
            Gets or sets the spacing between origins of segments, in pixels.
            </summary>
        </member>
        <member name="P:FastReport.ZipCodeObject.SegmentCount">
            <summary>
            Gets or sets the number of segments in zipcode.
            </summary>
        </member>
        <member name="P:FastReport.ZipCodeObject.ShowMarkers">
            <summary>
            Gets or sets a value indicating whether the reference markers should be drawn.
            </summary>
            <remarks>
            Reference markers are used by postal service to automatically read the zipcode.
            </remarks>
        </member>
        <member name="P:FastReport.ZipCodeObject.ShowGrid">
            <summary>
            Gets or sets a value indicating whether the segment grid should be drawn.
            </summary>
        </member>
        <member name="P:FastReport.ZipCodeObject.DataColumn">
            <summary>
            Gets or sets a data column name bound to this control.
            </summary>
            <remarks>
            Value must be in the form "Datasource.Column".
            </remarks>
        </member>
        <member name="P:FastReport.ZipCodeObject.Expression">
            <summary>
            Gets or sets an expression that contains the zip code.
            </summary>
        </member>
        <member name="P:FastReport.ZipCodeObject.Text">
            <summary>
            Gets or sets the zip code.
            </summary>
        </member>
        <member name="M:FastReport.ZipCodeObject.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ZipCodeObject.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ZipCodeObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ZipCodeObject.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ZipCodeObject.GetData">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ZipCodeObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.ZipCodeObject"/> with the default settings.
            </summary>
        </member>
    </members>
</doc>
